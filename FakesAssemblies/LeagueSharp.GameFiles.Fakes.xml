<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LeagueSharp.GameFiles.Fakes</name>
    </assembly>
    <members>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ChampionsGet">
            <summary>Legt die shim von AirGeneratedContent.get_Champions() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.FeaturedGamesGet">
            <summary>Legt die shim von AirGeneratedContent.get_FeaturedGames() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.Init">
            <summary>Legt die shim von AirGeneratedContent.Init() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ItemsGet">
            <summary>Legt die shim von AirGeneratedContent.get_Items() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.MapsGet">
            <summary>Legt die shim von AirGeneratedContent.get_Maps() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.RunesGet">
            <summary>Legt die shim von AirGeneratedContent.get_Runes() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.Set">
            <summary>Legt die shim von AirGeneratedContent.Set() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.SetIfNeeded">
            <summary>Legt die shim von AirGeneratedContent.SetIfNeeded() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.SpellsGet">
            <summary>Legt die shim von AirGeneratedContent.get_Spells() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.StaticConstructor">
            <summary>Legt die shim von AirGeneratedContent.AirGeneratedContent() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent+Champion</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.#ctor(LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Champion)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ConstructorObjectArray">
            <summary>Legt die shim von Champion.Champion(Object[] entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.abilityIcon1Get">
            <summary>Legt die shim von Champion.get_abilityIcon1() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.abilityIcon1SetString">
            <summary>Legt die shim von Champion.set_abilityIcon1(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.abilityIcon2Get">
            <summary>Legt die shim von Champion.get_abilityIcon2() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.abilityIcon2SetString">
            <summary>Legt die shim von Champion.set_abilityIcon2(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.abilityIcon3Get">
            <summary>Legt die shim von Champion.get_abilityIcon3() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.abilityIcon3SetString">
            <summary>Legt die shim von Champion.set_abilityIcon3(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.abilityIcon4Get">
            <summary>Legt die shim von Champion.get_abilityIcon4() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.abilityIcon4SetString">
            <summary>Legt die shim von Champion.set_abilityIcon4(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.attackRankGet">
            <summary>Legt die shim von Champion.get_attackRank() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.attackRankSetInt32">
            <summary>Legt die shim von Champion.set_attackRank(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.championIdGet">
            <summary>Legt die shim von Champion.get_championId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.championIdSetInt32">
            <summary>Legt die shim von Champion.set_championId(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.defenseRankGet">
            <summary>Legt die shim von Champion.get_defenseRank() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.defenseRankSetInt32">
            <summary>Legt die shim von Champion.set_defenseRank(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.difficultyRankGet">
            <summary>Legt die shim von Champion.get_difficultyRank() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.difficultyRankSetInt32">
            <summary>Legt die shim von Champion.set_difficultyRank(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.magicRankGet">
            <summary>Legt die shim von Champion.get_magicRank() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.magicRankSetInt32">
            <summary>Legt die shim von Champion.set_magicRank(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.passiveIconGet">
            <summary>Legt die shim von Champion.get_passiveIcon() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.passiveIconSetString">
            <summary>Legt die shim von Champion.set_passiveIcon(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.searchTagsGet">
            <summary>Legt die shim von Champion.get_searchTags() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.searchTagsSecondaryGet">
            <summary>Legt die shim von Champion.get_searchTagsSecondary() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.searchTagsSecondarySetStringArray">
            <summary>Legt die shim von Champion.set_searchTagsSecondary(String[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.searchTagsSetStringArray">
            <summary>Legt die shim von Champion.set_searchTags(String[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.skinInfoGet">
            <summary>Legt die shim von Champion.get_skinInfo() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.skinInfoSetDictionaryOfStringChampionAirGeneratedContentSkin">
            <summary>Legt die shim von Champion.set_skinInfo(Dictionary`2&lt;String,Skin&gt; value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.skinNameGet">
            <summary>Legt die shim von Champion.get_skinName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.skinNameSetString">
            <summary>Legt die shim von Champion.set_skinName(String value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.abilityIcon1Get">
            <summary>Legt die shim von Champion.get_abilityIcon1() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.abilityIcon1SetString">
            <summary>Legt die shim von Champion.set_abilityIcon1(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.abilityIcon2Get">
            <summary>Legt die shim von Champion.get_abilityIcon2() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.abilityIcon2SetString">
            <summary>Legt die shim von Champion.set_abilityIcon2(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.abilityIcon3Get">
            <summary>Legt die shim von Champion.get_abilityIcon3() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.abilityIcon3SetString">
            <summary>Legt die shim von Champion.set_abilityIcon3(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.abilityIcon4Get">
            <summary>Legt die shim von Champion.get_abilityIcon4() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.abilityIcon4SetString">
            <summary>Legt die shim von Champion.set_abilityIcon4(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.attackRankGet">
            <summary>Legt die shim von Champion.get_attackRank() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.attackRankSetInt32">
            <summary>Legt die shim von Champion.set_attackRank(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.championIdGet">
            <summary>Legt die shim von Champion.get_championId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.championIdSetInt32">
            <summary>Legt die shim von Champion.set_championId(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.defenseRankGet">
            <summary>Legt die shim von Champion.get_defenseRank() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.defenseRankSetInt32">
            <summary>Legt die shim von Champion.set_defenseRank(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.difficultyRankGet">
            <summary>Legt die shim von Champion.get_difficultyRank() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.difficultyRankSetInt32">
            <summary>Legt die shim von Champion.set_difficultyRank(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.magicRankGet">
            <summary>Legt die shim von Champion.get_magicRank() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.magicRankSetInt32">
            <summary>Legt die shim von Champion.set_magicRank(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.passiveIconGet">
            <summary>Legt die shim von Champion.get_passiveIcon() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.passiveIconSetString">
            <summary>Legt die shim von Champion.set_passiveIcon(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.searchTagsGet">
            <summary>Legt die shim von Champion.get_searchTags() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.searchTagsSecondaryGet">
            <summary>Legt die shim von Champion.get_searchTagsSecondary() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.searchTagsSecondarySetStringArray">
            <summary>Legt die shim von Champion.set_searchTagsSecondary(String[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.searchTagsSetStringArray">
            <summary>Legt die shim von Champion.set_searchTags(String[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.skinInfoGet">
            <summary>Legt die shim von Champion.get_skinInfo() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.skinInfoSetDictionaryOfStringChampionAirGeneratedContentSkin">
            <summary>Legt die shim von Champion.set_skinInfo(Dictionary`2&lt;String,Skin&gt; value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.skinNameGet">
            <summary>Legt die shim von Champion.get_skinName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.AllInstances.skinNameSetString">
            <summary>Legt die shim von Champion.set_skinName(String value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent+Champion+Skin</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.#ctor(LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Champion.Skin)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.ConstructorObject">
            <summary>Legt die shim von Skin.Skin(Object entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.nameGet">
            <summary>Legt die shim von Skin.get_name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.nameSetString">
            <summary>Legt die shim von Skin.set_name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.skinIdGet">
            <summary>Legt die shim von Skin.get_skinId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.skinIdSetInt32">
            <summary>Legt die shim von Skin.set_skinId(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.skinIndexGet">
            <summary>Legt die shim von Skin.get_skinIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.skinIndexSetInt32">
            <summary>Legt die shim von Skin.set_skinIndex(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.AllInstances.nameGet">
            <summary>Legt die shim von Skin.get_name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.AllInstances.nameSetString">
            <summary>Legt die shim von Skin.set_name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.AllInstances.skinIdGet">
            <summary>Legt die shim von Skin.get_skinId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.AllInstances.skinIdSetInt32">
            <summary>Legt die shim von Skin.set_skinId(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.AllInstances.skinIndexGet">
            <summary>Legt die shim von Skin.get_skinIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampion.ShimSkin.AllInstances.skinIndexSetInt32">
            <summary>Legt die shim von Skin.set_skinIndex(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent+ChampionsList</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.#ctor(LeagueSharp.GameFiles.AirClient.AirGeneratedContent.ChampionsList)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.Bind(System.Collections.Generic.IEnumerable{LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Champion})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.AddAirGeneratedContentChampion">
            <summary>Legt die shim von ChampionsList.Add(Champion champion) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.Constructor">
            <summary>Legt die shim von ChampionsList.ChampionsList() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.CountGet">
            <summary>Legt die shim von ChampionsList.get_Count() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.ItemGetInt32">
            <summary>Legt die shim von ChampionsList.get_Item(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.ItemGetString">
            <summary>Legt die shim von ChampionsList.get_Item(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.SystemCollectionsGenericIEnumerableLeagueSharpGameFilesAirClientAirGeneratedContentChampionGetEnumerator">
            <summary>Legt die shim von ChampionsList.System.Collections.Generic.IEnumerable&lt;LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Champion&gt;.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die shim von ChampionsList.System.Collections.IEnumerable.GetEnumerator() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.AllInstances.AddAirGeneratedContentChampion">
            <summary>Legt die shim von ChampionsList.Add(Champion champion) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.AllInstances.CountGet">
            <summary>Legt die shim von ChampionsList.get_Count() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.AllInstances.ItemGetInt32">
            <summary>Legt die shim von ChampionsList.get_Item(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.AllInstances.ItemGetString">
            <summary>Legt die shim von ChampionsList.get_Item(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.AllInstances.SystemCollectionsGenericIEnumerableLeagueSharpGameFilesAirClientAirGeneratedContentChampionGetEnumerator">
            <summary>Legt die shim von ChampionsList.System.Collections.Generic.IEnumerable&lt;LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Champion&gt;.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimChampionsList.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die shim von ChampionsList.System.Collections.IEnumerable.GetEnumerator() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent+FeaturedGame</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.#ctor(LeagueSharp.GameFiles.AirClient.AirGeneratedContent.FeaturedGame)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.ConstructorObjectArray">
            <summary>Legt die shim von FeaturedGame.FeaturedGame(Object[] entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.gameModeGet">
            <summary>Legt die shim von FeaturedGame.get_gameMode() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.gameModeSetString">
            <summary>Legt die shim von FeaturedGame.set_gameMode(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.gameMutatorsGet">
            <summary>Legt die shim von FeaturedGame.get_gameMutators() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.gameMutatorsSetStringArray">
            <summary>Legt die shim von FeaturedGame.set_gameMutators(String[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.keyGet">
            <summary>Legt die shim von FeaturedGame.get_key() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.keySetString">
            <summary>Legt die shim von FeaturedGame.set_key(String value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.AllInstances.gameModeGet">
            <summary>Legt die shim von FeaturedGame.get_gameMode() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.AllInstances.gameModeSetString">
            <summary>Legt die shim von FeaturedGame.set_gameMode(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.AllInstances.gameMutatorsGet">
            <summary>Legt die shim von FeaturedGame.get_gameMutators() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.AllInstances.gameMutatorsSetStringArray">
            <summary>Legt die shim von FeaturedGame.set_gameMutators(String[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.AllInstances.keyGet">
            <summary>Legt die shim von FeaturedGame.get_key() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGame.AllInstances.keySetString">
            <summary>Legt die shim von FeaturedGame.set_key(String value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent+FeaturedGamesList</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.#ctor(LeagueSharp.GameFiles.AirClient.AirGeneratedContent.FeaturedGamesList)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.Bind(System.Collections.Generic.IEnumerable{LeagueSharp.GameFiles.AirClient.AirGeneratedContent.FeaturedGame})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.AddAirGeneratedContentFeaturedGame">
            <summary>Legt die shim von FeaturedGamesList.Add(FeaturedGame featuredGame) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.Constructor">
            <summary>Legt die shim von FeaturedGamesList.FeaturedGamesList() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.CountGet">
            <summary>Legt die shim von FeaturedGamesList.get_Count() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.ItemGetString">
            <summary>Legt die shim von FeaturedGamesList.get_Item(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.SystemCollectionsGenericIEnumerableLeagueSharpGameFilesAirClientAirGeneratedContentFeaturedGameGetEnumerator">
            <summary>Legt die shim von FeaturedGamesList.System.Collections.Generic.IEnumerable&lt;LeagueSharp.GameFiles.AirClient.AirGeneratedContent.FeaturedGame&gt;.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die shim von FeaturedGamesList.System.Collections.IEnumerable.GetEnumerator() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.AllInstances.AddAirGeneratedContentFeaturedGame">
            <summary>Legt die shim von FeaturedGamesList.Add(FeaturedGame featuredGame) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.AllInstances.CountGet">
            <summary>Legt die shim von FeaturedGamesList.get_Count() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.AllInstances.ItemGetString">
            <summary>Legt die shim von FeaturedGamesList.get_Item(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.AllInstances.SystemCollectionsGenericIEnumerableLeagueSharpGameFilesAirClientAirGeneratedContentFeaturedGameGetEnumerator">
            <summary>Legt die shim von FeaturedGamesList.System.Collections.Generic.IEnumerable&lt;LeagueSharp.GameFiles.AirClient.AirGeneratedContent.FeaturedGame&gt;.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimFeaturedGamesList.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die shim von FeaturedGamesList.System.Collections.IEnumerable.GetEnumerator() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent+GameItem</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.#ctor(LeagueSharp.GameFiles.AirClient.AirGeneratedContent.GameItem)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.ConstructorObjectArray">
            <summary>Legt die shim von GameItem.GameItem(Object[] entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.buildsIntoItemsGet">
            <summary>Legt die shim von GameItem.get_buildsIntoItems() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.buildsIntoItemsSetInt32Array">
            <summary>Legt die shim von GameItem.set_buildsIntoItems(Int32[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.categoriesGet">
            <summary>Legt die shim von GameItem.get_categories() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.categoriesSetStringArray">
            <summary>Legt die shim von GameItem.set_categories(String[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.costGet">
            <summary>Legt die shim von GameItem.get_cost() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.costSetInt32">
            <summary>Legt die shim von GameItem.set_cost(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.descriptionGet">
            <summary>Legt die shim von GameItem.get_description() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.descriptionSetString">
            <summary>Legt die shim von GameItem.set_description(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.iconNameGet">
            <summary>Legt die shim von GameItem.get_iconName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.iconNameSetString">
            <summary>Legt die shim von GameItem.set_iconName(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.itemIdGet">
            <summary>Legt die shim von GameItem.get_itemId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.itemIdSetInt32">
            <summary>Legt die shim von GameItem.set_itemId(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.nameGet">
            <summary>Legt die shim von GameItem.get_name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.nameSetString">
            <summary>Legt die shim von GameItem.set_name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.recipeItemsGet">
            <summary>Legt die shim von GameItem.get_recipeItems() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.recipeItemsSetInt32Array">
            <summary>Legt die shim von GameItem.set_recipeItems(Int32[] value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.buildsIntoItemsGet">
            <summary>Legt die shim von GameItem.get_buildsIntoItems() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.buildsIntoItemsSetInt32Array">
            <summary>Legt die shim von GameItem.set_buildsIntoItems(Int32[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.categoriesGet">
            <summary>Legt die shim von GameItem.get_categories() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.categoriesSetStringArray">
            <summary>Legt die shim von GameItem.set_categories(String[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.costGet">
            <summary>Legt die shim von GameItem.get_cost() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.costSetInt32">
            <summary>Legt die shim von GameItem.set_cost(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.descriptionGet">
            <summary>Legt die shim von GameItem.get_description() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.descriptionSetString">
            <summary>Legt die shim von GameItem.set_description(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.iconNameGet">
            <summary>Legt die shim von GameItem.get_iconName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.iconNameSetString">
            <summary>Legt die shim von GameItem.set_iconName(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.itemIdGet">
            <summary>Legt die shim von GameItem.get_itemId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.itemIdSetInt32">
            <summary>Legt die shim von GameItem.set_itemId(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.nameGet">
            <summary>Legt die shim von GameItem.get_name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.nameSetString">
            <summary>Legt die shim von GameItem.set_name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.recipeItemsGet">
            <summary>Legt die shim von GameItem.get_recipeItems() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItem.AllInstances.recipeItemsSetInt32Array">
            <summary>Legt die shim von GameItem.set_recipeItems(Int32[] value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent+GameItemList</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.#ctor(LeagueSharp.GameFiles.AirClient.AirGeneratedContent.GameItemList)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.Bind(System.Collections.Generic.IEnumerable{LeagueSharp.GameFiles.AirClient.AirGeneratedContent.GameItem})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.AddAirGeneratedContentGameItem">
            <summary>Legt die shim von GameItemList.Add(GameItem gameItem) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.Constructor">
            <summary>Legt die shim von GameItemList.GameItemList() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.CountGet">
            <summary>Legt die shim von GameItemList.get_Count() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.ItemGetInt32">
            <summary>Legt die shim von GameItemList.get_Item(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.ItemGetString">
            <summary>Legt die shim von GameItemList.get_Item(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.SystemCollectionsGenericIEnumerableLeagueSharpGameFilesAirClientAirGeneratedContentGameItemGetEnumerator">
            <summary>Legt die shim von GameItemList.System.Collections.Generic.IEnumerable&lt;LeagueSharp.GameFiles.AirClient.AirGeneratedContent.GameItem&gt;.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die shim von GameItemList.System.Collections.IEnumerable.GetEnumerator() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.AllInstances.AddAirGeneratedContentGameItem">
            <summary>Legt die shim von GameItemList.Add(GameItem gameItem) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.AllInstances.CountGet">
            <summary>Legt die shim von GameItemList.get_Count() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.AllInstances.ItemGetInt32">
            <summary>Legt die shim von GameItemList.get_Item(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.AllInstances.ItemGetString">
            <summary>Legt die shim von GameItemList.get_Item(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.AllInstances.SystemCollectionsGenericIEnumerableLeagueSharpGameFilesAirClientAirGeneratedContentGameItemGetEnumerator">
            <summary>Legt die shim von GameItemList.System.Collections.Generic.IEnumerable&lt;LeagueSharp.GameFiles.AirClient.AirGeneratedContent.GameItem&gt;.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimGameItemList.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die shim von GameItemList.System.Collections.IEnumerable.GetEnumerator() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent+Map</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.#ctor(LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Map)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.ConstructorObjectArray">
            <summary>Legt die shim von Map.Map(Object[] entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.descriptionGet">
            <summary>Legt die shim von Map.get_description() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.descriptionSetString">
            <summary>Legt die shim von Map.set_description(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.displayNameGet">
            <summary>Legt die shim von Map.get_displayName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.displayNameSetString">
            <summary>Legt die shim von Map.set_displayName(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.mapIdGet">
            <summary>Legt die shim von Map.get_mapId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.mapIdSetInt32">
            <summary>Legt die shim von Map.set_mapId(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.nameGet">
            <summary>Legt die shim von Map.get_name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.nameSetString">
            <summary>Legt die shim von Map.set_name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.totalPlayersGet">
            <summary>Legt die shim von Map.get_totalPlayers() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.totalPlayersSetInt32">
            <summary>Legt die shim von Map.set_totalPlayers(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.AllInstances.descriptionGet">
            <summary>Legt die shim von Map.get_description() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.AllInstances.descriptionSetString">
            <summary>Legt die shim von Map.set_description(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.AllInstances.displayNameGet">
            <summary>Legt die shim von Map.get_displayName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.AllInstances.displayNameSetString">
            <summary>Legt die shim von Map.set_displayName(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.AllInstances.mapIdGet">
            <summary>Legt die shim von Map.get_mapId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.AllInstances.mapIdSetInt32">
            <summary>Legt die shim von Map.set_mapId(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.AllInstances.nameGet">
            <summary>Legt die shim von Map.get_name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.AllInstances.nameSetString">
            <summary>Legt die shim von Map.set_name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.AllInstances.totalPlayersGet">
            <summary>Legt die shim von Map.get_totalPlayers() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMap.AllInstances.totalPlayersSetInt32">
            <summary>Legt die shim von Map.set_totalPlayers(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent+MapsList</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.#ctor(LeagueSharp.GameFiles.AirClient.AirGeneratedContent.MapsList)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.Bind(System.Collections.Generic.IEnumerable{LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Map})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.AddAirGeneratedContentMap">
            <summary>Legt die shim von MapsList.Add(Map map) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.Constructor">
            <summary>Legt die shim von MapsList.MapsList() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.CountGet">
            <summary>Legt die shim von MapsList.get_Count() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.ItemGetInt32">
            <summary>Legt die shim von MapsList.get_Item(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.ItemGetString">
            <summary>Legt die shim von MapsList.get_Item(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.SystemCollectionsGenericIEnumerableLeagueSharpGameFilesAirClientAirGeneratedContentMapGetEnumerator">
            <summary>Legt die shim von MapsList.System.Collections.Generic.IEnumerable&lt;LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Map&gt;.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die shim von MapsList.System.Collections.IEnumerable.GetEnumerator() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.AllInstances.AddAirGeneratedContentMap">
            <summary>Legt die shim von MapsList.Add(Map map) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.AllInstances.CountGet">
            <summary>Legt die shim von MapsList.get_Count() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.AllInstances.ItemGetInt32">
            <summary>Legt die shim von MapsList.get_Item(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.AllInstances.ItemGetString">
            <summary>Legt die shim von MapsList.get_Item(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.AllInstances.SystemCollectionsGenericIEnumerableLeagueSharpGameFilesAirClientAirGeneratedContentMapGetEnumerator">
            <summary>Legt die shim von MapsList.System.Collections.Generic.IEnumerable&lt;LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Map&gt;.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimMapsList.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die shim von MapsList.System.Collections.IEnumerable.GetEnumerator() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent+Rune</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.#ctor(LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Rune)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ConstructorObjectArray">
            <summary>Legt die shim von Rune.Rune(Object[] entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.descriptionGet">
            <summary>Legt die shim von Rune.get_description() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.descriptionSetString">
            <summary>Legt die shim von Rune.set_description(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.imagePathGet">
            <summary>Legt die shim von Rune.get_imagePath() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.imagePathSetString">
            <summary>Legt die shim von Rune.set_imagePath(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.itemEffectsGet">
            <summary>Legt die shim von Rune.get_itemEffects() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.itemEffectsSetListOfRuneAirGeneratedContentItemEffect">
            <summary>Legt die shim von Rune.set_itemEffects(List`1&lt;ItemEffect&gt; value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.itemIdGet">
            <summary>Legt die shim von Rune.get_itemId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.itemIdSetInt32">
            <summary>Legt die shim von Rune.set_itemId(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.nameGet">
            <summary>Legt die shim von Rune.get_name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.nameSetString">
            <summary>Legt die shim von Rune.set_name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.runeTypeIdGet">
            <summary>Legt die shim von Rune.get_runeTypeId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.runeTypeIdSetInt32">
            <summary>Legt die shim von Rune.set_runeTypeId(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.tierGet">
            <summary>Legt die shim von Rune.get_tier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.tierSetInt32">
            <summary>Legt die shim von Rune.set_tier(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances.descriptionGet">
            <summary>Legt die shim von Rune.get_description() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances.descriptionSetString">
            <summary>Legt die shim von Rune.set_description(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances.imagePathGet">
            <summary>Legt die shim von Rune.get_imagePath() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances.imagePathSetString">
            <summary>Legt die shim von Rune.set_imagePath(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances.itemEffectsGet">
            <summary>Legt die shim von Rune.get_itemEffects() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances.itemEffectsSetListOfRuneAirGeneratedContentItemEffect">
            <summary>Legt die shim von Rune.set_itemEffects(List`1&lt;ItemEffect&gt; value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances.itemIdGet">
            <summary>Legt die shim von Rune.get_itemId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances.itemIdSetInt32">
            <summary>Legt die shim von Rune.set_itemId(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances.nameGet">
            <summary>Legt die shim von Rune.get_name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances.nameSetString">
            <summary>Legt die shim von Rune.set_name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances.runeTypeIdGet">
            <summary>Legt die shim von Rune.get_runeTypeId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances.runeTypeIdSetInt32">
            <summary>Legt die shim von Rune.set_runeTypeId(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances.tierGet">
            <summary>Legt die shim von Rune.get_tier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.AllInstances.tierSetInt32">
            <summary>Legt die shim von Rune.set_tier(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent+Rune+ItemEffect</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.#ctor(LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Rune.ItemEffect)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.ConstructorObject">
            <summary>Legt die shim von ItemEffect.ItemEffect(Object entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.categoryIdGet">
            <summary>Legt die shim von ItemEffect.get_categoryId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.categoryIdSetInt32">
            <summary>Legt die shim von ItemEffect.set_categoryId(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.nameGet">
            <summary>Legt die shim von ItemEffect.get_name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.nameSetString">
            <summary>Legt die shim von ItemEffect.set_name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.runeTypeGet">
            <summary>Legt die shim von ItemEffect.get_runeType() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.runeTypeSetInt32">
            <summary>Legt die shim von ItemEffect.set_runeType(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.valueGet">
            <summary>Legt die shim von ItemEffect.get_value() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.valueSetDouble">
            <summary>Legt die shim von ItemEffect.set_value(Double value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.AllInstances.categoryIdGet">
            <summary>Legt die shim von ItemEffect.get_categoryId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.AllInstances.categoryIdSetInt32">
            <summary>Legt die shim von ItemEffect.set_categoryId(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.AllInstances.nameGet">
            <summary>Legt die shim von ItemEffect.get_name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.AllInstances.nameSetString">
            <summary>Legt die shim von ItemEffect.set_name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.AllInstances.runeTypeGet">
            <summary>Legt die shim von ItemEffect.get_runeType() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.AllInstances.runeTypeSetInt32">
            <summary>Legt die shim von ItemEffect.set_runeType(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.AllInstances.valueGet">
            <summary>Legt die shim von ItemEffect.get_value() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRune.ShimItemEffect.AllInstances.valueSetDouble">
            <summary>Legt die shim von ItemEffect.set_value(Double value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent+RunesList</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.#ctor(LeagueSharp.GameFiles.AirClient.AirGeneratedContent.RunesList)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.Bind(System.Collections.Generic.IEnumerable{LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Rune})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.AddAirGeneratedContentRune">
            <summary>Legt die shim von RunesList.Add(Rune rune) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.Constructor">
            <summary>Legt die shim von RunesList.RunesList() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.CountGet">
            <summary>Legt die shim von RunesList.get_Count() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.ItemGetInt32">
            <summary>Legt die shim von RunesList.get_Item(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.SystemCollectionsGenericIEnumerableLeagueSharpGameFilesAirClientAirGeneratedContentRuneGetEnumerator">
            <summary>Legt die shim von RunesList.System.Collections.Generic.IEnumerable&lt;LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Rune&gt;.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die shim von RunesList.System.Collections.IEnumerable.GetEnumerator() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.AllInstances.AddAirGeneratedContentRune">
            <summary>Legt die shim von RunesList.Add(Rune rune) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.AllInstances.CountGet">
            <summary>Legt die shim von RunesList.get_Count() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.AllInstances.ItemGetInt32">
            <summary>Legt die shim von RunesList.get_Item(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.AllInstances.SystemCollectionsGenericIEnumerableLeagueSharpGameFilesAirClientAirGeneratedContentRuneGetEnumerator">
            <summary>Legt die shim von RunesList.System.Collections.Generic.IEnumerable&lt;LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Rune&gt;.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimRunesList.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die shim von RunesList.System.Collections.IEnumerable.GetEnumerator() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent+Spell</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.#ctor(LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Spell)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.ConstructorObjectArray">
            <summary>Legt die shim von Spell.Spell(Object[] entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.activeGet">
            <summary>Legt die shim von Spell.get_active() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.activeSetBoolean">
            <summary>Legt die shim von Spell.set_active(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.descriptionGet">
            <summary>Legt die shim von Spell.get_description() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.descriptionSetString">
            <summary>Legt die shim von Spell.set_description(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.displayNameGet">
            <summary>Legt die shim von Spell.get_displayName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.displayNameSetString">
            <summary>Legt die shim von Spell.set_displayName(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.gameModesGet">
            <summary>Legt die shim von Spell.get_gameModes() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.gameModesSetStringArray">
            <summary>Legt die shim von Spell.set_gameModes(String[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.minLevelGet">
            <summary>Legt die shim von Spell.get_minLevel() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.minLevelSetInt32">
            <summary>Legt die shim von Spell.set_minLevel(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.nameGet">
            <summary>Legt die shim von Spell.get_name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.nameSetString">
            <summary>Legt die shim von Spell.set_name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.spellIdGet">
            <summary>Legt die shim von Spell.get_spellId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.spellIdSetInt32">
            <summary>Legt die shim von Spell.set_spellId(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances.activeGet">
            <summary>Legt die shim von Spell.get_active() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances.activeSetBoolean">
            <summary>Legt die shim von Spell.set_active(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances.descriptionGet">
            <summary>Legt die shim von Spell.get_description() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances.descriptionSetString">
            <summary>Legt die shim von Spell.set_description(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances.displayNameGet">
            <summary>Legt die shim von Spell.get_displayName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances.displayNameSetString">
            <summary>Legt die shim von Spell.set_displayName(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances.gameModesGet">
            <summary>Legt die shim von Spell.get_gameModes() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances.gameModesSetStringArray">
            <summary>Legt die shim von Spell.set_gameModes(String[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances.minLevelGet">
            <summary>Legt die shim von Spell.get_minLevel() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances.minLevelSetInt32">
            <summary>Legt die shim von Spell.set_minLevel(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances.nameGet">
            <summary>Legt die shim von Spell.get_name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances.nameSetString">
            <summary>Legt die shim von Spell.set_name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances.spellIdGet">
            <summary>Legt die shim von Spell.get_spellId() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpell.AllInstances.spellIdSetInt32">
            <summary>Legt die shim von Spell.set_spellId(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList">
            <summary>Shim-Typ von LeagueSharp.GameFiles.AirClient.AirGeneratedContent+SpellsList</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.#ctor(LeagueSharp.GameFiles.AirClient.AirGeneratedContent.SpellsList)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.Bind(System.Collections.Generic.IEnumerable{LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Spell})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.AddAirGeneratedContentSpell">
            <summary>Legt die shim von SpellsList.Add(Spell spell) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.Constructor">
            <summary>Legt die shim von SpellsList.SpellsList() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.CountGet">
            <summary>Legt die shim von SpellsList.get_Count() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.ItemGetInt32">
            <summary>Legt die shim von SpellsList.get_Item(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.ItemGetString">
            <summary>Legt die shim von SpellsList.get_Item(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.SystemCollectionsGenericIEnumerableLeagueSharpGameFilesAirClientAirGeneratedContentSpellGetEnumerator">
            <summary>Legt die shim von SpellsList.System.Collections.Generic.IEnumerable&lt;LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Spell&gt;.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die shim von SpellsList.System.Collections.IEnumerable.GetEnumerator() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.AllInstances.AddAirGeneratedContentSpell">
            <summary>Legt die shim von SpellsList.Add(Spell spell) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.AllInstances.CountGet">
            <summary>Legt die shim von SpellsList.get_Count() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.AllInstances.ItemGetInt32">
            <summary>Legt die shim von SpellsList.get_Item(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.AllInstances.ItemGetString">
            <summary>Legt die shim von SpellsList.get_Item(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.AllInstances.SystemCollectionsGenericIEnumerableLeagueSharpGameFilesAirClientAirGeneratedContentSpellGetEnumerator">
            <summary>Legt die shim von SpellsList.System.Collections.Generic.IEnumerable&lt;LeagueSharp.GameFiles.AirClient.AirGeneratedContent.Spell&gt;.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.AirClient.Fakes.ShimAirGeneratedContent.ShimSpellsList.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die shim von SpellsList.System.Collections.IEnumerable.GetEnumerator() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.ShimDirectories">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Directories</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimDirectories.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimDirectories.#ctor(LeagueSharp.GameFiles.Directories)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimDirectories.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimDirectories.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.AirClientConfigFolderGet">
            <summary>Legt die shim von Directories.get_AirClientConfigFolder() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.AirClientFolderGet">
            <summary>Legt die shim von Directories.get_AirClientFolder() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.BaseAirClientFolderGet">
            <summary>Legt die shim von Directories.get_BaseAirClientFolder() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.BaseGameClientProjectGet">
            <summary>Legt die shim von Directories.get_BaseGameClientProject() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.Constructor">
            <summary>Legt die shim von Directories.Directories() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.GameClientReleasesProjectGet">
            <summary>Legt die shim von Directories.get_GameClientReleasesProject() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.GameClientSolutionGet">
            <summary>Legt die shim von Directories.get_GameClientSolution() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.GameFolderGet">
            <summary>Legt die shim von Directories.get_GameFolder() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.GetLastVersionString">
            <summary>Legt die shim von Directories.GetLastVersion(String directory) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.LatestProjectGameFolderGet">
            <summary>Legt die shim von Directories.get_LatestProjectGameFolder() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.ProjectGameArchivesFolderGet">
            <summary>Legt die shim von Directories.get_ProjectGameArchivesFolder() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.ProjectsFolderGet">
            <summary>Legt die shim von Directories.get_ProjectsFolder() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.RadsFolderGet">
            <summary>Legt die shim von Directories.get_RadsFolder() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.SolutionsFolderGet">
            <summary>Legt die shim von Directories.get_SolutionsFolder() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimDirectories.SystemFolderGet">
            <summary>Legt die shim von Directories.get_SystemFolder() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.ShimDirectories.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.ShimGold">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Gold</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimGold.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimGold.#ctor(LeagueSharp.GameFiles.Gold)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimGold.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimGold.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimGold.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimGold.ConstructorObject">
            <summary>Legt die shim von Gold.Gold(Object raw) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimGold.baseGet">
            <summary>Legt die shim von Gold.get_base() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimGold.baseSetInt32">
            <summary>Legt die shim von Gold.set_base(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimGold.sellGet">
            <summary>Legt die shim von Gold.get_sell() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimGold.sellSetInt32">
            <summary>Legt die shim von Gold.set_sell(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimGold.totalGet">
            <summary>Legt die shim von Gold.get_total() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimGold.totalSetInt32">
            <summary>Legt die shim von Gold.set_total(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.ShimGold.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimGold.AllInstances.baseGet">
            <summary>Legt die shim von Gold.get_base() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimGold.AllInstances.baseSetInt32">
            <summary>Legt die shim von Gold.set_base(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimGold.AllInstances.sellGet">
            <summary>Legt die shim von Gold.get_sell() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimGold.AllInstances.sellSetInt32">
            <summary>Legt die shim von Gold.set_sell(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimGold.AllInstances.totalGet">
            <summary>Legt die shim von Gold.get_total() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimGold.AllInstances.totalSetInt32">
            <summary>Legt die shim von Gold.set_total(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.ShimItem">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Item</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimItem.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimItem.#ctor(LeagueSharp.GameFiles.Item)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimItem.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimItem.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.ConstructorObject">
            <summary>Legt die shim von Item.Item(Object raw) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.GetIconBytes">
            <summary>Legt die shim von Item.GetIconBytes() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.canBeSoldGet">
            <summary>Legt die shim von Item.get_canBeSold() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.canBeSoldSetBoolean">
            <summary>Legt die shim von Item.set_canBeSold(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.consumedGet">
            <summary>Legt die shim von Item.get_consumed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.consumedSetBoolean">
            <summary>Legt die shim von Item.set_consumed(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.depthGet">
            <summary>Legt die shim von Item.get_depth() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.depthSetInt32">
            <summary>Legt die shim von Item.set_depth(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.descriptionGet">
            <summary>Legt die shim von Item.get_description() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.descriptionSetString">
            <summary>Legt die shim von Item.set_description(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.fromGet">
            <summary>Legt die shim von Item.get_from() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.fromSetListOfString">
            <summary>Legt die shim von Item.set_from(List`1&lt;String&gt; value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.goldGet">
            <summary>Legt die shim von Item.get_gold() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.goldSetGold">
            <summary>Legt die shim von Item.set_gold(Gold value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.hideFromAllGet">
            <summary>Legt die shim von Item.get_hideFromAll() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.hideFromAllSetBoolean">
            <summary>Legt die shim von Item.set_hideFromAll(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.iconGet">
            <summary>Legt die shim von Item.get_icon() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.iconSetString">
            <summary>Legt die shim von Item.set_icon(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.idGet">
            <summary>Legt die shim von Item.get_id() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.idSetString">
            <summary>Legt die shim von Item.set_id(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.inStoreGet">
            <summary>Legt die shim von Item.get_inStore() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.inStoreSetBoolean">
            <summary>Legt die shim von Item.set_inStore(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.intoGet">
            <summary>Legt die shim von Item.get_into() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.intoSetListOfString">
            <summary>Legt die shim von Item.set_into(List`1&lt;String&gt; value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.itemgroupGet">
            <summary>Legt die shim von Item.get_itemgroup() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.itemgroupSetString">
            <summary>Legt die shim von Item.set_itemgroup(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.nameGet">
            <summary>Legt die shim von Item.get_name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.nameSetString">
            <summary>Legt die shim von Item.set_name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.notesGet">
            <summary>Legt die shim von Item.get_notes() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.notesSetArray">
            <summary>Legt die shim von Item.set_notes(Array value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.requiredChampionGet">
            <summary>Legt die shim von Item.get_requiredChampion() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.requiredChampionSetString">
            <summary>Legt die shim von Item.set_requiredChampion(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.requiredLevelGet">
            <summary>Legt die shim von Item.get_requiredLevel() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.requiredLevelSetInt32">
            <summary>Legt die shim von Item.set_requiredLevel(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.requiredSpellNameGet">
            <summary>Legt die shim von Item.get_requiredSpellName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.requiredSpellNameSetString">
            <summary>Legt die shim von Item.set_requiredSpellName(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.specialRecipeGet">
            <summary>Legt die shim von Item.get_specialRecipe() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.specialRecipeSetString">
            <summary>Legt die shim von Item.set_specialRecipe(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.stacksGet">
            <summary>Legt die shim von Item.get_stacks() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.stacksSetInt32">
            <summary>Legt die shim von Item.set_stacks(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.statsGet">
            <summary>Legt die shim von Item.get_stats() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.statsSetStats">
            <summary>Legt die shim von Item.set_stats(Stats value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.tagsGet">
            <summary>Legt die shim von Item.get_tags() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.tagsSetListOfString">
            <summary>Legt die shim von Item.set_tags(List`1&lt;String&gt; value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.usableInStoreGet">
            <summary>Legt die shim von Item.get_usableInStore() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.usableInStoreSetBoolean">
            <summary>Legt die shim von Item.set_usableInStore(Boolean value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.GetIconBytes">
            <summary>Legt die shim von Item.GetIconBytes() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.canBeSoldGet">
            <summary>Legt die shim von Item.get_canBeSold() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.canBeSoldSetBoolean">
            <summary>Legt die shim von Item.set_canBeSold(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.consumedGet">
            <summary>Legt die shim von Item.get_consumed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.consumedSetBoolean">
            <summary>Legt die shim von Item.set_consumed(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.depthGet">
            <summary>Legt die shim von Item.get_depth() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.depthSetInt32">
            <summary>Legt die shim von Item.set_depth(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.descriptionGet">
            <summary>Legt die shim von Item.get_description() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.descriptionSetString">
            <summary>Legt die shim von Item.set_description(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.fromGet">
            <summary>Legt die shim von Item.get_from() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.fromSetListOfString">
            <summary>Legt die shim von Item.set_from(List`1&lt;String&gt; value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.goldGet">
            <summary>Legt die shim von Item.get_gold() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.goldSetGold">
            <summary>Legt die shim von Item.set_gold(Gold value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.hideFromAllGet">
            <summary>Legt die shim von Item.get_hideFromAll() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.hideFromAllSetBoolean">
            <summary>Legt die shim von Item.set_hideFromAll(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.iconGet">
            <summary>Legt die shim von Item.get_icon() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.iconSetString">
            <summary>Legt die shim von Item.set_icon(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.idGet">
            <summary>Legt die shim von Item.get_id() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.idSetString">
            <summary>Legt die shim von Item.set_id(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.inStoreGet">
            <summary>Legt die shim von Item.get_inStore() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.inStoreSetBoolean">
            <summary>Legt die shim von Item.set_inStore(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.intoGet">
            <summary>Legt die shim von Item.get_into() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.intoSetListOfString">
            <summary>Legt die shim von Item.set_into(List`1&lt;String&gt; value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.itemgroupGet">
            <summary>Legt die shim von Item.get_itemgroup() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.itemgroupSetString">
            <summary>Legt die shim von Item.set_itemgroup(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.nameGet">
            <summary>Legt die shim von Item.get_name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.nameSetString">
            <summary>Legt die shim von Item.set_name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.notesGet">
            <summary>Legt die shim von Item.get_notes() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.notesSetArray">
            <summary>Legt die shim von Item.set_notes(Array value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.requiredChampionGet">
            <summary>Legt die shim von Item.get_requiredChampion() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.requiredChampionSetString">
            <summary>Legt die shim von Item.set_requiredChampion(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.requiredLevelGet">
            <summary>Legt die shim von Item.get_requiredLevel() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.requiredLevelSetInt32">
            <summary>Legt die shim von Item.set_requiredLevel(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.requiredSpellNameGet">
            <summary>Legt die shim von Item.get_requiredSpellName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.requiredSpellNameSetString">
            <summary>Legt die shim von Item.set_requiredSpellName(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.specialRecipeGet">
            <summary>Legt die shim von Item.get_specialRecipe() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.specialRecipeSetString">
            <summary>Legt die shim von Item.set_specialRecipe(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.stacksGet">
            <summary>Legt die shim von Item.get_stacks() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.stacksSetInt32">
            <summary>Legt die shim von Item.set_stacks(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.statsGet">
            <summary>Legt die shim von Item.get_stats() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.statsSetStats">
            <summary>Legt die shim von Item.set_stats(Stats value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.tagsGet">
            <summary>Legt die shim von Item.get_tags() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.tagsSetListOfString">
            <summary>Legt die shim von Item.set_tags(List`1&lt;String&gt; value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.usableInStoreGet">
            <summary>Legt die shim von Item.get_usableInStore() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItem.AllInstances.usableInStoreSetBoolean">
            <summary>Legt die shim von Item.set_usableInStore(Boolean value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.ShimItems">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Items</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimItems.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimItems.#ctor(LeagueSharp.GameFiles.Items)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimItems.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimItems.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItems.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItems.Constructor">
            <summary>Legt die shim von Items.Items() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItems.Set">
            <summary>Legt die shim von Items.Set() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItems.SetIfNeeded">
            <summary>Legt die shim von Items.SetIfNeeded() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItems.itemsGet">
            <summary>Legt die shim von Items.get_items() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.ShimItems.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.ShimItemsList">
            <summary>Shim-Typ von LeagueSharp.GameFiles.ItemsList</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimItemsList.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimItemsList.#ctor(LeagueSharp.GameFiles.ItemsList)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimItemsList.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimItemsList.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimItemsList.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimItemsList.Bind(System.Collections.Generic.IEnumerable{LeagueSharp.GameFiles.Item})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.AddItem">
            <summary>Legt die shim von ItemsList.Add(Item entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.ConstructorIListOfObject">
            <summary>Legt die shim von ItemsList.ItemsList(IList`1&lt;Object&gt; entries) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.CountGet">
            <summary>Legt die shim von ItemsList.get_Count() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.GetEnumerator">
            <summary>Legt die shim von ItemsList.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.ItemGetInt32">
            <summary>Legt die shim von ItemsList.get_Item(Int32 id) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.ItemGetString">
            <summary>Legt die shim von ItemsList.get_Item(String id) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.SystemCollectionsGenericIEnumerableLeagueSharpGameFilesItemGetEnumerator">
            <summary>Legt die shim von ItemsList.System.Collections.Generic.IEnumerable&lt;LeagueSharp.GameFiles.Item&gt;.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die shim von ItemsList.System.Collections.IEnumerable.GetEnumerator() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.ShimItemsList.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.AllInstances.AddItem">
            <summary>Legt die shim von ItemsList.Add(Item entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.AllInstances.CountGet">
            <summary>Legt die shim von ItemsList.get_Count() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.AllInstances.GetEnumerator">
            <summary>Legt die shim von ItemsList.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.AllInstances.ItemGetInt32">
            <summary>Legt die shim von ItemsList.get_Item(Int32 id) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.AllInstances.ItemGetString">
            <summary>Legt die shim von ItemsList.get_Item(String id) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.AllInstances.SystemCollectionsGenericIEnumerableLeagueSharpGameFilesItemGetEnumerator">
            <summary>Legt die shim von ItemsList.System.Collections.Generic.IEnumerable&lt;LeagueSharp.GameFiles.Item&gt;.GetEnumerator() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimItemsList.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die shim von ItemsList.System.Collections.IEnumerable.GetEnumerator() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.ShimStats">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Stats</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimStats.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimStats.#ctor(LeagueSharp.GameFiles.Stats)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimStats.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.ShimStats.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.ConstructorObject">
            <summary>Legt die shim von Stats.Stats(Object raw) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatArmorModGet">
            <summary>Legt die shim von Stats.get_FlatArmorMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatArmorModSetDouble">
            <summary>Legt die shim von Stats.set_FlatArmorMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatAttackSpeedModGet">
            <summary>Legt die shim von Stats.get_FlatAttackSpeedMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatAttackSpeedModSetDouble">
            <summary>Legt die shim von Stats.set_FlatAttackSpeedMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatCritChanceModGet">
            <summary>Legt die shim von Stats.get_FlatCritChanceMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatCritChanceModSetDouble">
            <summary>Legt die shim von Stats.set_FlatCritChanceMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatCritDamageModGet">
            <summary>Legt die shim von Stats.get_FlatCritDamageMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatCritDamageModSetDouble">
            <summary>Legt die shim von Stats.set_FlatCritDamageMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatHPRegenModGet">
            <summary>Legt die shim von Stats.get_FlatHPRegenMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatHPRegenModSetDouble">
            <summary>Legt die shim von Stats.set_FlatHPRegenMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatMPPoolModGet">
            <summary>Legt die shim von Stats.get_FlatMPPoolMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatMPPoolModSetDouble">
            <summary>Legt die shim von Stats.set_FlatMPPoolMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatMPRegenModGet">
            <summary>Legt die shim von Stats.get_FlatMPRegenMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatMPRegenModSetDouble">
            <summary>Legt die shim von Stats.set_FlatMPRegenMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatMagicDamageModGet">
            <summary>Legt die shim von Stats.get_FlatMagicDamageMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatMagicDamageModSetDouble">
            <summary>Legt die shim von Stats.set_FlatMagicDamageMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatMovementSpeedModGet">
            <summary>Legt die shim von Stats.get_FlatMovementSpeedMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatMovementSpeedModSetDouble">
            <summary>Legt die shim von Stats.set_FlatMovementSpeedMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatPhysicalDamageModGet">
            <summary>Legt die shim von Stats.get_FlatPhysicalDamageMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatPhysicalDamageModSetDouble">
            <summary>Legt die shim von Stats.set_FlatPhysicalDamageMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatSpellBlockModGet">
            <summary>Legt die shim von Stats.get_FlatSpellBlockMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.FlatSpellBlockModSetDouble">
            <summary>Legt die shim von Stats.set_FlatSpellBlockMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentArmorModGet">
            <summary>Legt die shim von Stats.get_PercentArmorMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentArmorModSetDouble">
            <summary>Legt die shim von Stats.set_PercentArmorMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentAttackSpeedModGet">
            <summary>Legt die shim von Stats.get_PercentAttackSpeedMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentAttackSpeedModSetDouble">
            <summary>Legt die shim von Stats.set_PercentAttackSpeedMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentBaseHPRegenModGet">
            <summary>Legt die shim von Stats.get_PercentBaseHPRegenMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentBaseHPRegenModSetDouble">
            <summary>Legt die shim von Stats.set_PercentBaseHPRegenMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentBaseMPRegenModGet">
            <summary>Legt die shim von Stats.get_PercentBaseMPRegenMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentBaseMPRegenModSetDouble">
            <summary>Legt die shim von Stats.set_PercentBaseMPRegenMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentCritDamageModGet">
            <summary>Legt die shim von Stats.get_PercentCritDamageMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentCritDamageModSetDouble">
            <summary>Legt die shim von Stats.set_PercentCritDamageMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentEXPBonusGet">
            <summary>Legt die shim von Stats.get_PercentEXPBonus() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentEXPBonusSetDouble">
            <summary>Legt die shim von Stats.set_PercentEXPBonus(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentHPPoolModGet">
            <summary>Legt die shim von Stats.get_PercentHPPoolMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentHPPoolModSetDouble">
            <summary>Legt die shim von Stats.set_PercentHPPoolMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentHPRegenModGet">
            <summary>Legt die shim von Stats.get_PercentHPRegenMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentHPRegenModSetDouble">
            <summary>Legt die shim von Stats.set_PercentHPRegenMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentMPPoolModGet">
            <summary>Legt die shim von Stats.get_PercentMPPoolMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentMPPoolModSetDouble">
            <summary>Legt die shim von Stats.set_PercentMPPoolMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentMPRegenModGet">
            <summary>Legt die shim von Stats.get_PercentMPRegenMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentMPRegenModSetDouble">
            <summary>Legt die shim von Stats.set_PercentMPRegenMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentMagicDamageModGet">
            <summary>Legt die shim von Stats.get_PercentMagicDamageMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentMagicDamageModSetDouble">
            <summary>Legt die shim von Stats.set_PercentMagicDamageMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentMovementSpeedModGet">
            <summary>Legt die shim von Stats.get_PercentMovementSpeedMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentMovementSpeedModSetDouble">
            <summary>Legt die shim von Stats.set_PercentMovementSpeedMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentPhysicalDamageModGet">
            <summary>Legt die shim von Stats.get_PercentPhysicalDamageMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentPhysicalDamageModSetDouble">
            <summary>Legt die shim von Stats.set_PercentPhysicalDamageMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentSpellBlockModGet">
            <summary>Legt die shim von Stats.get_PercentSpellBlockMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.PercentSpellBlockModSetDouble">
            <summary>Legt die shim von Stats.set_PercentSpellBlockMod(Double value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatArmorModGet">
            <summary>Legt die shim von Stats.get_FlatArmorMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatArmorModSetDouble">
            <summary>Legt die shim von Stats.set_FlatArmorMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatAttackSpeedModGet">
            <summary>Legt die shim von Stats.get_FlatAttackSpeedMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatAttackSpeedModSetDouble">
            <summary>Legt die shim von Stats.set_FlatAttackSpeedMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatCritChanceModGet">
            <summary>Legt die shim von Stats.get_FlatCritChanceMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatCritChanceModSetDouble">
            <summary>Legt die shim von Stats.set_FlatCritChanceMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatCritDamageModGet">
            <summary>Legt die shim von Stats.get_FlatCritDamageMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatCritDamageModSetDouble">
            <summary>Legt die shim von Stats.set_FlatCritDamageMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatHPRegenModGet">
            <summary>Legt die shim von Stats.get_FlatHPRegenMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatHPRegenModSetDouble">
            <summary>Legt die shim von Stats.set_FlatHPRegenMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatMPPoolModGet">
            <summary>Legt die shim von Stats.get_FlatMPPoolMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatMPPoolModSetDouble">
            <summary>Legt die shim von Stats.set_FlatMPPoolMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatMPRegenModGet">
            <summary>Legt die shim von Stats.get_FlatMPRegenMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatMPRegenModSetDouble">
            <summary>Legt die shim von Stats.set_FlatMPRegenMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatMagicDamageModGet">
            <summary>Legt die shim von Stats.get_FlatMagicDamageMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatMagicDamageModSetDouble">
            <summary>Legt die shim von Stats.set_FlatMagicDamageMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatMovementSpeedModGet">
            <summary>Legt die shim von Stats.get_FlatMovementSpeedMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatMovementSpeedModSetDouble">
            <summary>Legt die shim von Stats.set_FlatMovementSpeedMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatPhysicalDamageModGet">
            <summary>Legt die shim von Stats.get_FlatPhysicalDamageMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatPhysicalDamageModSetDouble">
            <summary>Legt die shim von Stats.set_FlatPhysicalDamageMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatSpellBlockModGet">
            <summary>Legt die shim von Stats.get_FlatSpellBlockMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.FlatSpellBlockModSetDouble">
            <summary>Legt die shim von Stats.set_FlatSpellBlockMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentArmorModGet">
            <summary>Legt die shim von Stats.get_PercentArmorMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentArmorModSetDouble">
            <summary>Legt die shim von Stats.set_PercentArmorMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentAttackSpeedModGet">
            <summary>Legt die shim von Stats.get_PercentAttackSpeedMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentAttackSpeedModSetDouble">
            <summary>Legt die shim von Stats.set_PercentAttackSpeedMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentBaseHPRegenModGet">
            <summary>Legt die shim von Stats.get_PercentBaseHPRegenMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentBaseHPRegenModSetDouble">
            <summary>Legt die shim von Stats.set_PercentBaseHPRegenMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentBaseMPRegenModGet">
            <summary>Legt die shim von Stats.get_PercentBaseMPRegenMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentBaseMPRegenModSetDouble">
            <summary>Legt die shim von Stats.set_PercentBaseMPRegenMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentCritDamageModGet">
            <summary>Legt die shim von Stats.get_PercentCritDamageMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentCritDamageModSetDouble">
            <summary>Legt die shim von Stats.set_PercentCritDamageMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentEXPBonusGet">
            <summary>Legt die shim von Stats.get_PercentEXPBonus() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentEXPBonusSetDouble">
            <summary>Legt die shim von Stats.set_PercentEXPBonus(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentHPPoolModGet">
            <summary>Legt die shim von Stats.get_PercentHPPoolMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentHPPoolModSetDouble">
            <summary>Legt die shim von Stats.set_PercentHPPoolMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentHPRegenModGet">
            <summary>Legt die shim von Stats.get_PercentHPRegenMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentHPRegenModSetDouble">
            <summary>Legt die shim von Stats.set_PercentHPRegenMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentMPPoolModGet">
            <summary>Legt die shim von Stats.get_PercentMPPoolMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentMPPoolModSetDouble">
            <summary>Legt die shim von Stats.set_PercentMPPoolMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentMPRegenModGet">
            <summary>Legt die shim von Stats.get_PercentMPRegenMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentMPRegenModSetDouble">
            <summary>Legt die shim von Stats.set_PercentMPRegenMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentMagicDamageModGet">
            <summary>Legt die shim von Stats.get_PercentMagicDamageMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentMagicDamageModSetDouble">
            <summary>Legt die shim von Stats.set_PercentMagicDamageMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentMovementSpeedModGet">
            <summary>Legt die shim von Stats.get_PercentMovementSpeedMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentMovementSpeedModSetDouble">
            <summary>Legt die shim von Stats.set_PercentMovementSpeedMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentPhysicalDamageModGet">
            <summary>Legt die shim von Stats.get_PercentPhysicalDamageMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentPhysicalDamageModSetDouble">
            <summary>Legt die shim von Stats.set_PercentPhysicalDamageMod(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentSpellBlockModGet">
            <summary>Legt die shim von Stats.get_PercentSpellBlockMod() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.ShimStats.AllInstances.PercentSpellBlockModSetDouble">
            <summary>Legt die shim von Stats.set_PercentSpellBlockMod(Double value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.StubDirectories">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Directories</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.StubDirectories.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.StubDirectories.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubDirectories.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubDirectories.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubDirectories.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubDirectories.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.StubGold">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Gold</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.StubGold.#ctor(System.Object)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.StubGold.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubGold.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubGold.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubGold.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubGold.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.StubItem">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Item</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.StubItem.#ctor(System.Object)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.StubItem.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubItem.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubItem.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubItem.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubItem.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.StubItems">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Items</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.StubItems.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.StubItems.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubItems.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubItems.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubItems.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubItems.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.StubItemsList">
            <summary>Stub-Typ von LeagueSharp.GameFiles.ItemsList</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.StubItemsList.#ctor(System.Collections.Generic.IList{System.Object})">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.StubItemsList.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubItemsList.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubItemsList.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubItemsList.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubItemsList.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Fakes.StubStats">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Stats</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.StubStats.#ctor(System.Object)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Fakes.StubStats.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubStats.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubStats.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubStats.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Fakes.StubStats.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives">
            <summary>Shim-Typ von LeagueSharp.GameFiles.GameClient.Archives</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ArchivesCountGet">
            <summary>Legt die shim von Archives.get_ArchivesCount() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ArchivesCountSetInt32">
            <summary>Legt die shim von Archives.set_ArchivesCount(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ArchivesEntriesGet">
            <summary>Legt die shim von Archives.get_ArchivesEntries() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.FilesGet">
            <summary>Legt die shim von Archives.get_Files() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.StaticConstructor">
            <summary>Legt die shim von Archives.Archives() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives._GetArchiveFilesString">
            <summary>Legt die shim von Archives._GetArchiveFiles(String baseDir) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives._GetHashString">
            <summary>Legt die shim von Archives._GetHash(String inputString) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives._Populate">
            <summary>Legt die shim von Archives._Populate() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives._PopulateIfNeeded">
            <summary>Legt die shim von Archives._PopulateIfNeeded() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives._dbPathGet">
            <summary>Legt die shim von Archives.get__dbPath() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries">
            <summary>Shim-Typ von LeagueSharp.GameFiles.GameClient.Archives+ArchiveFileEntries</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.#ctor(LeagueSharp.GameFiles.GameClient.Archives.ArchiveFileEntries)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.Bind(System.Collections.ICollection)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.Bind(System.Collections.IList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.Bind(System.Collections.Generic.ICollection{LeagueSharp.GameFiles.Tools.ArchiveFileListEntry})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.Bind(System.Collections.Generic.IEnumerable{LeagueSharp.GameFiles.Tools.ArchiveFileListEntry})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.Bind(System.Collections.Generic.IList{LeagueSharp.GameFiles.Tools.ArchiveFileListEntry})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.Bind(System.Collections.Generic.IReadOnlyCollection{LeagueSharp.GameFiles.Tools.ArchiveFileListEntry})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.Bind(System.Collections.Generic.IReadOnlyList{LeagueSharp.GameFiles.Tools.ArchiveFileListEntry})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.Constructor">
            <summary>Legt die shim von ArchiveFileEntries.ArchiveFileEntries() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.DeSerializeString">
            <summary>Legt die shim von ArchiveFileEntries.DeSerialize(String filename) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.SerializeString">
            <summary>Legt die shim von ArchiveFileEntries.Serialize(String filename) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.AllInstances.DeSerializeString">
            <summary>Legt die shim von ArchiveFileEntries.DeSerialize(String filename) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileEntries.AllInstances.SerializeString">
            <summary>Legt die shim von ArchiveFileEntries.Serialize(String filename) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions">
            <summary>Shim-Typ von LeagueSharp.GameFiles.GameClient.Archives+ArchiveFileVersions</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.#ctor(LeagueSharp.GameFiles.GameClient.Archives.ArchiveFileVersions)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.Bind(System.Collections.ICollection)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.Bind(System.Collections.IList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.Bind(System.Collections.Generic.ICollection{System.Int32})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.Bind(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.Bind(System.Collections.Generic.IList{System.Int32})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.Bind(System.Collections.Generic.IReadOnlyCollection{System.Int32})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.Bind(System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.Constructor">
            <summary>Legt die shim von ArchiveFileVersions.ArchiveFileVersions() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.GetLastContent">
            <summary>Legt die shim von ArchiveFileVersions.GetLastContent() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.GetLastRawContent">
            <summary>Legt die shim von ArchiveFileVersions.GetLastRawContent() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.GetLastVersionIndex">
            <summary>Legt die shim von ArchiveFileVersions.GetLastVersionIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.LastVersionGet">
            <summary>Legt die shim von ArchiveFileVersions.get_LastVersion() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.AllInstances.GetLastContent">
            <summary>Legt die shim von ArchiveFileVersions.GetLastContent() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.AllInstances.GetLastRawContent">
            <summary>Legt die shim von ArchiveFileVersions.GetLastRawContent() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.AllInstances.GetLastVersionIndex">
            <summary>Legt die shim von ArchiveFileVersions.GetLastVersionIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFileVersions.AllInstances.LastVersionGet">
            <summary>Legt die shim von ArchiveFileVersions.get_LastVersion() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles">
            <summary>Shim-Typ von LeagueSharp.GameFiles.GameClient.Archives+ArchiveFiles</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.#ctor(LeagueSharp.GameFiles.GameClient.Archives.ArchiveFiles)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.Bind(System.Collections.ICollection)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.Bind(System.Collections.IList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.Bind(System.Collections.Generic.ICollection{System.String})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.Bind(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.Bind(System.Collections.Generic.IList{System.String})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.Bind(System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.Bind(System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.Constructor">
            <summary>Legt die shim von ArchiveFiles.ArchiveFiles() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.DeSerializeString">
            <summary>Legt die shim von ArchiveFiles.DeSerialize(String filename) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.SerializeString">
            <summary>Legt die shim von ArchiveFiles.Serialize(String filename) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.AllInstances.DeSerializeString">
            <summary>Legt die shim von ArchiveFiles.DeSerialize(String filename) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimArchives.ShimArchiveFiles.AllInstances.SerializeString">
            <summary>Legt die shim von ArchiveFiles.Serialize(String filename) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.GameClient.Fakes.ShimConfig">
            <summary>Shim-Typ von LeagueSharp.GameFiles.GameClient.Config</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimConfig.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimConfig.#ctor(LeagueSharp.GameFiles.GameClient.Config)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimConfig.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimConfig.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimConfig.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimConfig.Constructor">
            <summary>Legt die shim von Config.Config() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimConfig.GlobalScaleGet">
            <summary>Legt die shim von Config.get_GlobalScale() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimConfig.GlobalScaleReplayGet">
            <summary>Legt die shim von Config.get_GlobalScaleReplay() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimConfig.HudConfigGet">
            <summary>Legt die shim von Config.get_HudConfig() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimConfig.MinimapScaleGet">
            <summary>Legt die shim von Config.get_MinimapScale() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimConfig.StaticConstructor">
            <summary>Legt die shim von Config.Config() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.GameClient.Fakes.ShimConfig.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.GameClient.Fakes.ShimTranslation">
            <summary>Shim-Typ von LeagueSharp.GameFiles.GameClient.Translation</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimTranslation.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimTranslation.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.ShimTranslation.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimTranslation.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimTranslation.GetLocaleString">
            <summary>Legt die shim von Translation.GetLocale(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimTranslation.GetUniversalString">
            <summary>Legt die shim von Translation.GetUniversal(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimTranslation._GetBracketStringString">
            <summary>Legt die shim von Translation._GetBracketString(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimTranslation._PopulateDictionaryOfStringStringRefString">
            <summary>Legt die shim von Translation._Populate(Dictionary`2&lt;String,String&gt;&amp; target, String archiveFile) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.ShimTranslation._PopulateIfNeeded">
            <summary>Legt die shim von Translation._PopulateIfNeeded() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.GameClient.Fakes.StubConfig">
            <summary>Stub-Typ von LeagueSharp.GameFiles.GameClient.Config</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.StubConfig.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.GameClient.Fakes.StubConfig.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubConfig.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.StubConfig.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.StubConfig.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.GameClient.Fakes.StubConfig.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.ArchiveFileListEntry</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.#ctor(LeagueSharp.GameFiles.Tools.ArchiveFileListEntry)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.ConstructorArchiveReaderBinaryReaderRefUInt32UInt32">
            <summary>Legt die shim von ArchiveFileListEntry.ArchiveFileListEntry(ArchiveReader raf, BinaryReader&amp; m_bReader, UInt32 offsetDirectoryEntry, UInt32 offsetStringTable) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.ConstructorStringVersionUInt32UInt32String">
            <summary>Legt die shim von ArchiveFileListEntry.ArchiveFileListEntry(String RAFFileDataPath, Version version, UInt32 fileOffset, UInt32 fileSize, String FileName) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.FileNameGet">
            <summary>Legt die shim von ArchiveFileListEntry.get_FileName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.FileNameSetString">
            <summary>Legt die shim von ArchiveFileListEntry.set_FileName(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.GetContent">
            <summary>Legt die shim von ArchiveFileListEntry.GetContent() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.GetContentFileStream">
            <summary>Legt die shim von ArchiveFileListEntry.GetContent(FileStream fStream) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.GetRawContent">
            <summary>Legt die shim von ArchiveFileListEntry.GetRawContent() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.GetRawContentFileStream">
            <summary>Legt die shim von ArchiveFileListEntry.GetRawContent(FileStream fStream) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.IsZlibMagicByteArray">
            <summary>Legt die shim von ArchiveFileListEntry.IsZlibMagic(Byte[] magic) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry._GetContentBoolean">
            <summary>Legt die shim von ArchiveFileListEntry._GetContent(Boolean uncompress) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry._GetContentFileStreamBoolean">
            <summary>Legt die shim von ArchiveFileListEntry._GetContent(FileStream fStream, Boolean uncompress) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.fileOffsetGet">
            <summary>Legt die shim von ArchiveFileListEntry.get_fileOffset() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.fileOffsetSetUInt32">
            <summary>Legt die shim von ArchiveFileListEntry.set_fileOffset(UInt32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.fileSizeGet">
            <summary>Legt die shim von ArchiveFileListEntry.get_fileSize() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.fileSizeSetUInt32">
            <summary>Legt die shim von ArchiveFileListEntry.set_fileSize(UInt32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.versionGet">
            <summary>Legt die shim von ArchiveFileListEntry.get_version() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.versionSetVersion">
            <summary>Legt die shim von ArchiveFileListEntry.set_version(Version value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances.FileNameGet">
            <summary>Legt die shim von ArchiveFileListEntry.get_FileName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances.FileNameSetString">
            <summary>Legt die shim von ArchiveFileListEntry.set_FileName(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances.GetContent">
            <summary>Legt die shim von ArchiveFileListEntry.GetContent() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances.GetContentFileStream">
            <summary>Legt die shim von ArchiveFileListEntry.GetContent(FileStream fStream) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances.GetRawContent">
            <summary>Legt die shim von ArchiveFileListEntry.GetRawContent() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances.GetRawContentFileStream">
            <summary>Legt die shim von ArchiveFileListEntry.GetRawContent(FileStream fStream) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances._GetContentBoolean">
            <summary>Legt die shim von ArchiveFileListEntry._GetContent(Boolean uncompress) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances._GetContentFileStreamBoolean">
            <summary>Legt die shim von ArchiveFileListEntry._GetContent(FileStream fStream, Boolean uncompress) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances.fileOffsetGet">
            <summary>Legt die shim von ArchiveFileListEntry.get_fileOffset() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances.fileOffsetSetUInt32">
            <summary>Legt die shim von ArchiveFileListEntry.set_fileOffset(UInt32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances.fileSizeGet">
            <summary>Legt die shim von ArchiveFileListEntry.get_fileSize() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances.fileSizeSetUInt32">
            <summary>Legt die shim von ArchiveFileListEntry.set_fileSize(UInt32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances.versionGet">
            <summary>Legt die shim von ArchiveFileListEntry.get_version() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveFileListEntry.AllInstances.versionSetVersion">
            <summary>Legt die shim von ArchiveFileListEntry.set_version(Version value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.ArchiveReader</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.#ctor(LeagueSharp.GameFiles.Tools.ArchiveReader)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.ConstructorString">
            <summary>Legt die shim von ArchiveReader.ArchiveReader(String rafPath) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.FileDictFullGet">
            <summary>Legt die shim von ArchiveReader.get_FileDictFull() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.FileDictFullSetDictionaryOfStringArchiveFileListEntry">
            <summary>Legt die shim von ArchiveReader.set_FileDictFull(Dictionary`2&lt;String,ArchiveFileListEntry&gt; value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.RAFFileDataPathGet">
            <summary>Legt die shim von ArchiveReader.get_RAFFileDataPath() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.RAFFileDataPathSetString">
            <summary>Legt die shim von ArchiveReader.set_RAFFileDataPath(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.RAFFilePathGet">
            <summary>Legt die shim von ArchiveReader.get_RAFFilePath() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.RAFFilePathSetString">
            <summary>Legt die shim von ArchiveReader.set_RAFFilePath(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.createFileDictsBinaryReaderUInt32UInt32">
            <summary>Legt die shim von ArchiveReader.createFileDicts(BinaryReader m_bReader, UInt32 offsetFileList, UInt32 offsetStringTable) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.loadArchive">
            <summary>Legt die shim von ArchiveReader.loadArchive() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.versionGet">
            <summary>Legt die shim von ArchiveReader.get_version() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.versionSetVersion">
            <summary>Legt die shim von ArchiveReader.set_version(Version value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.AllInstances.FileDictFullGet">
            <summary>Legt die shim von ArchiveReader.get_FileDictFull() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.AllInstances.FileDictFullSetDictionaryOfStringArchiveFileListEntry">
            <summary>Legt die shim von ArchiveReader.set_FileDictFull(Dictionary`2&lt;String,ArchiveFileListEntry&gt; value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.AllInstances.RAFFileDataPathGet">
            <summary>Legt die shim von ArchiveReader.get_RAFFileDataPath() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.AllInstances.RAFFileDataPathSetString">
            <summary>Legt die shim von ArchiveReader.set_RAFFileDataPath(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.AllInstances.RAFFilePathGet">
            <summary>Legt die shim von ArchiveReader.get_RAFFilePath() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.AllInstances.RAFFilePathSetString">
            <summary>Legt die shim von ArchiveReader.set_RAFFilePath(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.AllInstances.createFileDictsBinaryReaderUInt32UInt32">
            <summary>Legt die shim von ArchiveReader.createFileDicts(BinaryReader m_bReader, UInt32 offsetFileList, UInt32 offsetStringTable) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.AllInstances.loadArchive">
            <summary>Legt die shim von ArchiveReader.loadArchive() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.AllInstances.versionGet">
            <summary>Legt die shim von ArchiveReader.get_version() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimArchiveReader.AllInstances.versionSetVersion">
            <summary>Legt die shim von ArchiveReader.set_version(Version value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.ConfigReader</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.#ctor(LeagueSharp.GameFiles.Tools.ConfigReader)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.CategoriesGet">
            <summary>Legt die shim von ConfigReader.get_Categories() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.CategoryKeysString">
            <summary>Legt die shim von ConfigReader.CategoryKeys(String Category) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.ConstructorString">
            <summary>Legt die shim von ConfigReader.ConfigReader(String filename) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.ConstructorStringArray">
            <summary>Legt die shim von ConfigReader.ConfigReader(String[] Lines) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.ItemGetString">
            <summary>Legt die shim von ConfigReader.get_Item(String entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.ItemGetStringString">
            <summary>Legt die shim von ConfigReader.get_Item(String category, String entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.Update">
            <summary>Legt die shim von ConfigReader.Update() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader._AddCategoryString">
            <summary>Legt die shim von ConfigReader._AddCategory(String category) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader._UpdateStringArray">
            <summary>Legt die shim von ConfigReader._Update(String[] Lines) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.AllInstances.CategoriesGet">
            <summary>Legt die shim von ConfigReader.get_Categories() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.AllInstances.CategoryKeysString">
            <summary>Legt die shim von ConfigReader.CategoryKeys(String Category) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.AllInstances.ItemGetString">
            <summary>Legt die shim von ConfigReader.get_Item(String entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.AllInstances.ItemGetStringString">
            <summary>Legt die shim von ConfigReader.get_Item(String category, String entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.AllInstances.Update">
            <summary>Legt die shim von ConfigReader.Update() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.AllInstances._AddCategoryString">
            <summary>Legt die shim von ConfigReader._AddCategory(String category) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimConfigReader.AllInstances._UpdateStringArray">
            <summary>Legt die shim von ConfigReader._Update(String[] Lines) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.IniBinHash</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash.#ctor(LeagueSharp.GameFiles.Tools.IniBinHash)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash.Constructor">
            <summary>Legt die shim von IniBinHash.IniBinHash() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash.GetHashString">
            <summary>Legt die shim von IniBinHash.GetHash(String Key) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash.ItemGetString">
            <summary>Legt die shim von IniBinHash.get_Item(String fullvarname) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash.ItemGetStringString">
            <summary>Legt die shim von IniBinHash.get_Item(String section, String varname) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash.ItemGetStringStringString">
            <summary>Legt die shim von IniBinHash.get_Item(String section, String subsection, String varname) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash.AllInstances.ItemGetString">
            <summary>Legt die shim von IniBinHash.get_Item(String fullvarname) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash.AllInstances.ItemGetStringString">
            <summary>Legt die shim von IniBinHash.get_Item(String section, String varname) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinHash.AllInstances.ItemGetStringStringString">
            <summary>Legt die shim von IniBinHash.get_Item(String section, String subsection, String varname) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinKeys">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.IniBinKeys</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinKeys.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinKeys.#ctor(LeagueSharp.GameFiles.Tools.IniBinKeys)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinKeys.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinKeys.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinKeys.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinKeys.Constructor">
            <summary>Legt die shim von IniBinKeys.IniBinKeys() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinKeys.ContainsKeyUInt32">
            <summary>Legt die shim von IniBinKeys.ContainsKey(UInt32 hash) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinKeys.GetKeyUInt32">
            <summary>Legt die shim von IniBinKeys.GetKey(UInt32 hash) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinKeys.StaticConstructor">
            <summary>Legt die shim von IniBinKeys.IniBinKeys() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinKeys.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinReader">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.IniBinReader</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinReader.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinReader.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinReader.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinReader.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.ShimIniBinReader.GetValuesByteArray">
            <summary>Legt die shim von IniBinReader.GetValues(Byte[] buffer) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.StubArchiveFileListEntry">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.ArchiveFileListEntry</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.StubArchiveFileListEntry.#ctor(LeagueSharp.GameFiles.Tools.ArchiveReader,System.IO.BinaryReader@,System.UInt32,System.UInt32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.StubArchiveFileListEntry.#ctor(System.String,System.Version,System.UInt32,System.UInt32,System.String)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.StubArchiveFileListEntry.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubArchiveFileListEntry.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubArchiveFileListEntry.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubArchiveFileListEntry.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubArchiveFileListEntry.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.StubArchiveReader">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.ArchiveReader</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.StubArchiveReader.#ctor(System.String)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.StubArchiveReader.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubArchiveReader.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubArchiveReader.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubArchiveReader.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubArchiveReader.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.StubConfigReader">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.ConfigReader</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.StubConfigReader.#ctor(System.String)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.StubConfigReader.#ctor(System.String[])">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.StubConfigReader.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubConfigReader.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubConfigReader.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubConfigReader.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubConfigReader.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.StubIniBinHash">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.IniBinHash</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.StubIniBinHash.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.StubIniBinHash.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubIniBinHash.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubIniBinHash.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubIniBinHash.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubIniBinHash.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Fakes.StubIniBinKeys">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.IniBinKeys</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.StubIniBinKeys.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Fakes.StubIniBinKeys.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubIniBinKeys.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubIniBinKeys.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubIniBinKeys.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Fakes.StubIniBinKeys.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.AlwaysLoop</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.AlwaysLoop)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.AddStatementStatement">
            <summary>Legt die shim von AlwaysLoop.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.BreakableGet">
            <summary>Legt die shim von AlwaysLoop.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.ConstructorLFunctionInt32Int32">
            <summary>Legt die shim von AlwaysLoop.AlwaysLoop(LFunction function, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.GetLoopback">
            <summary>Legt die shim von AlwaysLoop.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.IsContainerGet">
            <summary>Legt die shim von AlwaysLoop.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.IsUnprotectedGet">
            <summary>Legt die shim von AlwaysLoop.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.PrintOutput">
            <summary>Legt die shim von AlwaysLoop.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.ScopeEndGet">
            <summary>Legt die shim von AlwaysLoop.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.AllInstances.AddStatementStatement">
            <summary>Legt die shim von AlwaysLoop.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.AllInstances.BreakableGet">
            <summary>Legt die shim von AlwaysLoop.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.AllInstances.GetLoopback">
            <summary>Legt die shim von AlwaysLoop.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.AllInstances.IsContainerGet">
            <summary>Legt die shim von AlwaysLoop.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.AllInstances.IsUnprotectedGet">
            <summary>Legt die shim von AlwaysLoop.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.AllInstances.PrintOutput">
            <summary>Legt die shim von AlwaysLoop.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAlwaysLoop.AllInstances.ScopeEndGet">
            <summary>Legt die shim von AlwaysLoop.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.AndBranch</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.AndBranch)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.AsExpressionRegisters">
            <summary>Legt die shim von AndBranch.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.ConstructorBranchBranch">
            <summary>Legt die shim von AndBranch.AndBranch(Branch left, Branch right) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.GetRegister">
            <summary>Legt die shim von AndBranch.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.Invert">
            <summary>Legt die shim von AndBranch.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.UseExpressionExpression">
            <summary>Legt die shim von AndBranch.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.AllInstances.AsExpressionRegisters">
            <summary>Legt die shim von AndBranch.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.AllInstances.GetRegister">
            <summary>Legt die shim von AndBranch.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.AllInstances.Invert">
            <summary>Legt die shim von AndBranch.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAndBranch.AllInstances.UseExpressionExpression">
            <summary>Legt die shim von AndBranch.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.AssignNode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.AssignNode)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.AsExpressionRegisters">
            <summary>Legt die shim von AssignNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.ConstructorInt32Int32Int32">
            <summary>Legt die shim von AssignNode.AssignNode(Int32 line, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.GetRegister">
            <summary>Legt die shim von AssignNode.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.Invert">
            <summary>Legt die shim von AssignNode.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.UseExpressionExpression">
            <summary>Legt die shim von AssignNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.AllInstances.AsExpressionRegisters">
            <summary>Legt die shim von AssignNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.AllInstances.GetRegister">
            <summary>Legt die shim von AssignNode.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.AllInstances.Invert">
            <summary>Legt die shim von AssignNode.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignNode.AllInstances.UseExpressionExpression">
            <summary>Legt die shim von AssignNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Assignment</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Assignment)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.AddFirstTargetExpression">
            <summary>Legt die shim von Assignment.AddFirst(Target target, Expression value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.AddLastTargetExpression">
            <summary>Legt die shim von Assignment.AddLast(Target target, Expression value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.AssignListEqualsListOfDeclaration">
            <summary>Legt die shim von Assignment.AssignListEquals(List`1&lt;Declaration&gt; decls) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.AssignsTargetDeclaration">
            <summary>Legt die shim von Assignment.AssignsTarget(Declaration decl) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.Constructor">
            <summary>Legt die shim von Assignment.Assignment() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.ConstructorTargetExpression">
            <summary>Legt die shim von Assignment.Assignment(Target target, Expression value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.DeclareInt32">
            <summary>Legt die shim von Assignment.Declare(Int32 declareStart) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.GetArity">
            <summary>Legt die shim von Assignment.GetArity() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.GetFirstTarget">
            <summary>Legt die shim von Assignment.GetFirstTarget() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.GetFirstValue">
            <summary>Legt die shim von Assignment.GetFirstValue() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.PrintOutput">
            <summary>Legt die shim von Assignment.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.AllInstances.AddFirstTargetExpression">
            <summary>Legt die shim von Assignment.AddFirst(Target target, Expression value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.AllInstances.AddLastTargetExpression">
            <summary>Legt die shim von Assignment.AddLast(Target target, Expression value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.AllInstances.AssignListEqualsListOfDeclaration">
            <summary>Legt die shim von Assignment.AssignListEquals(List`1&lt;Declaration&gt; decls) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.AllInstances.AssignsTargetDeclaration">
            <summary>Legt die shim von Assignment.AssignsTarget(Declaration decl) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.AllInstances.DeclareInt32">
            <summary>Legt die shim von Assignment.Declare(Int32 declareStart) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.AllInstances.GetArity">
            <summary>Legt die shim von Assignment.GetArity() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.AllInstances.GetFirstTarget">
            <summary>Legt die shim von Assignment.GetFirstTarget() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.AllInstances.GetFirstValue">
            <summary>Legt die shim von Assignment.GetFirstValue() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimAssignment.AllInstances.PrintOutput">
            <summary>Legt die shim von Assignment.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.BoolGet">
            <summary>Legt die shim von BHeader.get_Bool() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.BoolSetLBooleanType">
            <summary>Legt die shim von BHeader.set_Bool(LBooleanType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.ConstantGet">
            <summary>Legt die shim von BHeader.get_Constant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.ConstantSetLConstantType">
            <summary>Legt die shim von BHeader.set_Constant(LConstantType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.ConstructorStream">
            <summary>Legt die shim von BHeader.BHeader(Stream stream) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.DebugGet">
            <summary>Legt die shim von BHeader.get_Debug() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.DebugSetBoolean">
            <summary>Legt die shim von BHeader.set_Debug(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.FunctionGet">
            <summary>Legt die shim von BHeader.get_Function() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.FunctionSetLFunctionType">
            <summary>Legt die shim von BHeader.set_Function(LFunctionType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.IntegerGet">
            <summary>Legt die shim von BHeader.get_Integer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.IntegerSetBIntegerType">
            <summary>Legt die shim von BHeader.set_Integer(BIntegerType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.LocalGet">
            <summary>Legt die shim von BHeader.get_Local() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.LocalSetLLocalType">
            <summary>Legt die shim von BHeader.set_Local(LLocalType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.NumberGet">
            <summary>Legt die shim von BHeader.get_Number() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.NumberSetLNumberType">
            <summary>Legt die shim von BHeader.set_Number(LNumberType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.SizeTGet">
            <summary>Legt die shim von BHeader.get_SizeT() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.SizeTSetBSizeTType">
            <summary>Legt die shim von BHeader.set_SizeT(BSizeTType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.StaticConstructor">
            <summary>Legt die shim von BHeader.BHeader() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.StringGet">
            <summary>Legt die shim von BHeader.get_String() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.StringSetLStringType">
            <summary>Legt die shim von BHeader.set_String(LStringType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.UpValueGet">
            <summary>Legt die shim von BHeader.get_UpValue() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.UpValueSetLUpvalueType">
            <summary>Legt die shim von BHeader.set_UpValue(LUpvalueType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.VersionGet">
            <summary>Legt die shim von BHeader.get_Version() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.VersionSetLua_Version">
            <summary>Legt die shim von BHeader.set_Version(Lua_Version value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.BoolGet">
            <summary>Legt die shim von BHeader.get_Bool() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.BoolSetLBooleanType">
            <summary>Legt die shim von BHeader.set_Bool(LBooleanType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.ConstantGet">
            <summary>Legt die shim von BHeader.get_Constant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.ConstantSetLConstantType">
            <summary>Legt die shim von BHeader.set_Constant(LConstantType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.DebugGet">
            <summary>Legt die shim von BHeader.get_Debug() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.DebugSetBoolean">
            <summary>Legt die shim von BHeader.set_Debug(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.FunctionGet">
            <summary>Legt die shim von BHeader.get_Function() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.FunctionSetLFunctionType">
            <summary>Legt die shim von BHeader.set_Function(LFunctionType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.IntegerGet">
            <summary>Legt die shim von BHeader.get_Integer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.IntegerSetBIntegerType">
            <summary>Legt die shim von BHeader.set_Integer(BIntegerType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.LocalGet">
            <summary>Legt die shim von BHeader.get_Local() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.LocalSetLLocalType">
            <summary>Legt die shim von BHeader.set_Local(LLocalType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.NumberGet">
            <summary>Legt die shim von BHeader.get_Number() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.NumberSetLNumberType">
            <summary>Legt die shim von BHeader.set_Number(LNumberType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.SizeTGet">
            <summary>Legt die shim von BHeader.get_SizeT() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.SizeTSetBSizeTType">
            <summary>Legt die shim von BHeader.set_SizeT(BSizeTType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.StringGet">
            <summary>Legt die shim von BHeader.get_String() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.StringSetLStringType">
            <summary>Legt die shim von BHeader.set_String(LStringType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.UpValueGet">
            <summary>Legt die shim von BHeader.get_UpValue() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.UpValueSetLUpvalueType">
            <summary>Legt die shim von BHeader.set_UpValue(LUpvalueType value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.VersionGet">
            <summary>Legt die shim von BHeader.get_Version() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBHeader.AllInstances.VersionSetLua_Version">
            <summary>Legt die shim von BHeader.set_Version(Lua_Version value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BInteger</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BInteger)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger.AsInteger">
            <summary>Legt die shim von BInteger.AsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger.ConstructorBInteger">
            <summary>Legt die shim von BInteger.BInteger(BInteger b) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger.ConstructorInt32">
            <summary>Legt die shim von BInteger.BInteger(Int32 number) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger.ConstructorInt64">
            <summary>Legt die shim von BInteger.BInteger(Int64 big) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger.IterateAction">
            <summary>Legt die shim von BInteger.Iterate(Action thunk) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger.StaticConstructor">
            <summary>Legt die shim von BInteger.BInteger() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger.AllInstances.AsInteger">
            <summary>Legt die shim von BInteger.AsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBInteger.AllInstances.IterateAction">
            <summary>Legt die shim von BInteger.Iterate(Action thunk) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BIntegerType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BIntegerType)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.ConstructorInt32">
            <summary>Legt die shim von BIntegerType.BIntegerType(Int32 intSize) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.IntSizeGet">
            <summary>Legt die shim von BIntegerType.get_IntSize() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.IntSizeSetInt32">
            <summary>Legt die shim von BIntegerType.set_IntSize(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.ParseStreamBHeader">
            <summary>Legt die shim von BIntegerType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.RawParseStreamBHeader">
            <summary>Legt die shim von BIntegerType.RawParse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.AllInstances.IntSizeGet">
            <summary>Legt die shim von BIntegerType.get_IntSize() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.AllInstances.IntSizeSetInt32">
            <summary>Legt die shim von BIntegerType.set_IntSize(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.AllInstances.ParseStreamBHeader">
            <summary>Legt die shim von BIntegerType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBIntegerType.AllInstances.RawParseStreamBHeader">
            <summary>Legt die shim von BIntegerType.RawParse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BList`1</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BList{`0})">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.AsArray">
            <summary>Legt die shim von BList`1.AsArray() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.ConstructorBIntegerListOfT0">
            <summary>Legt die shim von BList`1.BList`1(BInteger length, List`1&lt;!0&gt; values) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.ItemGetInt32">
            <summary>Legt die shim von BList`1.get_Item(Int32 index) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.LengthGet">
            <summary>Legt die shim von BList`1.get_Length() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.LengthSetBInteger">
            <summary>Legt die shim von BList`1.set_Length(BInteger value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.AllInstances.AsArray">
            <summary>Legt die shim von BList`1.AsArray() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.AllInstances.ItemGetInt32">
            <summary>Legt die shim von BList`1.get_Item(Int32 index) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.AllInstances.LengthGet">
            <summary>Legt die shim von BList`1.get_Length() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBList`1.AllInstances.LengthSetBInteger">
            <summary>Legt die shim von BList`1.set_Length(BInteger value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObject">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BObject</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObject.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BObject)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObject.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObject.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObject.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObject.Constructor">
            <summary>Legt die shim von BObject.BObject() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObject.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObjectType`1">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BObjectType`1</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObjectType`1.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BObjectType{`0})">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObjectType`1.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObjectType`1.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObjectType`1.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObjectType`1.Constructor">
            <summary>Legt die shim von BObjectType`1.BObjectType`1() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObjectType`1.ParseListStreamBHeader">
            <summary>Legt die shim von BObjectType`1.ParseList(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObjectType`1.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBObjectType`1.AllInstances.ParseListStreamBHeader">
            <summary>Legt die shim von BObjectType`1.ParseList(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeT">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BSizeT</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeT.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeT.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BSizeT)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeT.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeT.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeT.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeT.ConstructorBInteger">
            <summary>Legt die shim von BSizeT.BSizeT(BInteger b) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeT.ConstructorInt32">
            <summary>Legt die shim von BSizeT.BSizeT(Int32 n) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeT.ConstructorInt64">
            <summary>Legt die shim von BSizeT.BSizeT(Int64 n) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeT.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeTType">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BSizeTType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeTType.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeTType.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BSizeTType)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeTType.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeTType.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeTType.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeTType.ConstructorInt32">
            <summary>Legt die shim von BSizeTType.BSizeTType(Int32 sizeTSize) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeTType.ParseStreamBHeader">
            <summary>Legt die shim von BSizeTType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeTType.SizeTSizeGet">
            <summary>Legt die shim von BSizeTType.get_SizeTSize() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeTType.SizeTSizeSetInt32">
            <summary>Legt die shim von BSizeTType.set_SizeTSize(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeTType.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeTType.AllInstances.ParseStreamBHeader">
            <summary>Legt die shim von BSizeTType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeTType.AllInstances.SizeTSizeGet">
            <summary>Legt die shim von BSizeTType.get_SizeTSize() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBSizeTType.AllInstances.SizeTSizeSetInt32">
            <summary>Legt die shim von BSizeTType.set_SizeTSize(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BinaryExpression</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BinaryExpression)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.BeginsWithParenGet">
            <summary>Legt die shim von BinaryExpression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.ConstantIndexGet">
            <summary>Legt die shim von BinaryExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.ConstructorStringExpressionExpressionInt32Int32">
            <summary>Legt die shim von BinaryExpression.BinaryExpression(String op, Expression left, Expression right, Int32 precedence, Int32 associativity) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.LeftGroupGet">
            <summary>Legt die shim von BinaryExpression.get_LeftGroup() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.PrintOutput">
            <summary>Legt die shim von BinaryExpression.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.RightGroupGet">
            <summary>Legt die shim von BinaryExpression.get_RightGroup() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.AllInstances.BeginsWithParenGet">
            <summary>Legt die shim von BinaryExpression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.AllInstances.ConstantIndexGet">
            <summary>Legt die shim von BinaryExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.AllInstances.LeftGroupGet">
            <summary>Legt die shim von BinaryExpression.get_LeftGroup() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.AllInstances.PrintOutput">
            <summary>Legt die shim von BinaryExpression.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBinaryExpression.AllInstances.RightGroupGet">
            <summary>Legt die shim von BinaryExpression.get_RightGroup() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Block</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.BeginGet">
            <summary>Legt die shim von Block.get_Begin() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.BeginSetInt32">
            <summary>Legt die shim von Block.set_Begin(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.CompareToBlock">
            <summary>Legt die shim von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.ConstructorLFunctionInt32Int32">
            <summary>Legt die shim von Block.Block(LFunction function, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.ContainsBlock">
            <summary>Legt die shim von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.ContainsInt32">
            <summary>Legt die shim von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.EndGet">
            <summary>Legt die shim von Block.get_End() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.EndSetInt32">
            <summary>Legt die shim von Block.set_End(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.FunctionGet">
            <summary>Legt die shim von Block.get_Function() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.FunctionSetLFunction">
            <summary>Legt die shim von Block.set_Function(LFunction value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.LoopRedirectAdjustmentGet">
            <summary>Legt die shim von Block.get_LoopRedirectAdjustment() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.LoopRedirectAdjustmentSetBoolean">
            <summary>Legt die shim von Block.set_LoopRedirectAdjustment(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.ProcessDecompiler">
            <summary>Legt die shim von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.ScopeEndGet">
            <summary>Legt die shim von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.AllInstances.BeginGet">
            <summary>Legt die shim von Block.get_Begin() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.AllInstances.BeginSetInt32">
            <summary>Legt die shim von Block.set_Begin(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.AllInstances.CompareToBlock">
            <summary>Legt die shim von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.AllInstances.ContainsBlock">
            <summary>Legt die shim von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.AllInstances.ContainsInt32">
            <summary>Legt die shim von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.AllInstances.EndGet">
            <summary>Legt die shim von Block.get_End() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.AllInstances.EndSetInt32">
            <summary>Legt die shim von Block.set_End(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.AllInstances.FunctionGet">
            <summary>Legt die shim von Block.get_Function() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.AllInstances.FunctionSetLFunction">
            <summary>Legt die shim von Block.set_Function(LFunction value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.AllInstances.LoopRedirectAdjustmentGet">
            <summary>Legt die shim von Block.get_LoopRedirectAdjustment() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.AllInstances.LoopRedirectAdjustmentSetBoolean">
            <summary>Legt die shim von Block.set_LoopRedirectAdjustment(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.AllInstances.ProcessDecompiler">
            <summary>Legt die shim von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBlock.AllInstances.ScopeEndGet">
            <summary>Legt die shim von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BooleanIndicator</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BooleanIndicator)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.AddStatementStatement">
            <summary>Legt die shim von BooleanIndicator.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.BreakableGet">
            <summary>Legt die shim von BooleanIndicator.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.ConstructorLFunctionInt32">
            <summary>Legt die shim von BooleanIndicator.BooleanIndicator(LFunction function, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.GetLoopback">
            <summary>Legt die shim von BooleanIndicator.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.IsContainerGet">
            <summary>Legt die shim von BooleanIndicator.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.IsUnprotectedGet">
            <summary>Legt die shim von BooleanIndicator.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.PrintOutput">
            <summary>Legt die shim von BooleanIndicator.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.AllInstances.AddStatementStatement">
            <summary>Legt die shim von BooleanIndicator.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.AllInstances.BreakableGet">
            <summary>Legt die shim von BooleanIndicator.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.AllInstances.GetLoopback">
            <summary>Legt die shim von BooleanIndicator.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.AllInstances.IsContainerGet">
            <summary>Legt die shim von BooleanIndicator.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.AllInstances.IsUnprotectedGet">
            <summary>Legt die shim von BooleanIndicator.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBooleanIndicator.AllInstances.PrintOutput">
            <summary>Legt die shim von BooleanIndicator.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Branch</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Branch)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.BeginGet">
            <summary>Legt die shim von Branch.get_Begin() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.BeginSetInt32">
            <summary>Legt die shim von Branch.set_Begin(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.ConstructorInt32Int32Int32">
            <summary>Legt die shim von Branch.Branch(Int32 line, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.EndGet">
            <summary>Legt die shim von Branch.get_End() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.EndSetInt32">
            <summary>Legt die shim von Branch.set_End(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.IsCompareSetGet">
            <summary>Legt die shim von Branch.get_IsCompareSet() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.IsCompareSetSetBoolean">
            <summary>Legt die shim von Branch.set_IsCompareSet(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.IsSetGet">
            <summary>Legt die shim von Branch.get_IsSet() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.IsSetSetBoolean">
            <summary>Legt die shim von Branch.set_IsSet(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.IsTestGet">
            <summary>Legt die shim von Branch.get_IsTest() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.IsTestSetBoolean">
            <summary>Legt die shim von Branch.set_IsTest(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.LineGet">
            <summary>Legt die shim von Branch.get_Line() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.LineSetInt32">
            <summary>Legt die shim von Branch.set_Line(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.SetTargetGet">
            <summary>Legt die shim von Branch.get_SetTarget() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.SetTargetSetInt32">
            <summary>Legt die shim von Branch.set_SetTarget(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances.BeginGet">
            <summary>Legt die shim von Branch.get_Begin() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances.BeginSetInt32">
            <summary>Legt die shim von Branch.set_Begin(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances.EndGet">
            <summary>Legt die shim von Branch.get_End() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances.EndSetInt32">
            <summary>Legt die shim von Branch.set_End(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances.IsCompareSetGet">
            <summary>Legt die shim von Branch.get_IsCompareSet() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances.IsCompareSetSetBoolean">
            <summary>Legt die shim von Branch.set_IsCompareSet(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances.IsSetGet">
            <summary>Legt die shim von Branch.get_IsSet() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances.IsSetSetBoolean">
            <summary>Legt die shim von Branch.set_IsSet(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances.IsTestGet">
            <summary>Legt die shim von Branch.get_IsTest() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances.IsTestSetBoolean">
            <summary>Legt die shim von Branch.set_IsTest(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances.LineGet">
            <summary>Legt die shim von Branch.get_Line() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances.LineSetInt32">
            <summary>Legt die shim von Branch.set_Line(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances.SetTargetGet">
            <summary>Legt die shim von Branch.get_SetTarget() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBranch.AllInstances.SetTargetSetInt32">
            <summary>Legt die shim von Branch.set_SetTarget(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Break</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Break)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.AddStatementStatement">
            <summary>Legt die shim von Break.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.BreakableGet">
            <summary>Legt die shim von Break.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.ConstructorLFunctionInt32Int32">
            <summary>Legt die shim von Break.Break(LFunction function, Int32 line, Int32 target) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.GetLoopback">
            <summary>Legt die shim von Break.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.IsContainerGet">
            <summary>Legt die shim von Break.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.IsUnprotectedGet">
            <summary>Legt die shim von Break.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.PrintOutput">
            <summary>Legt die shim von Break.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.PrintTailOutput">
            <summary>Legt die shim von Break.PrintTail(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.TargetGet">
            <summary>Legt die shim von Break.get_Target() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.TargetSetInt32">
            <summary>Legt die shim von Break.set_Target(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.AllInstances.AddStatementStatement">
            <summary>Legt die shim von Break.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.AllInstances.BreakableGet">
            <summary>Legt die shim von Break.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.AllInstances.GetLoopback">
            <summary>Legt die shim von Break.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.AllInstances.IsContainerGet">
            <summary>Legt die shim von Break.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.AllInstances.IsUnprotectedGet">
            <summary>Legt die shim von Break.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.AllInstances.PrintOutput">
            <summary>Legt die shim von Break.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.AllInstances.PrintTailOutput">
            <summary>Legt die shim von Break.PrintTail(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.AllInstances.TargetGet">
            <summary>Legt die shim von Break.get_Target() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimBreak.AllInstances.TargetSetInt32">
            <summary>Legt die shim von Break.set_Target(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCallOperation">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.CallOperation</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCallOperation.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCallOperation.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.CallOperation)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCallOperation.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCallOperation.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCallOperation.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCallOperation.ConstructorInt32FunctionCall">
            <summary>Legt die shim von CallOperation.CallOperation(Int32 line, FunctionCall call) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCallOperation.ProcessRegistersBlock">
            <summary>Legt die shim von CallOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCallOperation.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCallOperation.AllInstances.ProcessRegistersBlock">
            <summary>Legt die shim von CallOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.ClosureExpression</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.ClosureExpression)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.ClosureUpvalueLineGet">
            <summary>Legt die shim von ClosureExpression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.ConstantIndexGet">
            <summary>Legt die shim von ClosureExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.ConstructorLFunctionDeclarationArrayInt32">
            <summary>Legt die shim von ClosureExpression.ClosureExpression(LFunction function, Declaration[] declList, Int32 upvalueLine) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.IsClosureGet">
            <summary>Legt die shim von ClosureExpression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.IsUpvalueOfInt32">
            <summary>Legt die shim von ClosureExpression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.PrintClosureOutputTarget">
            <summary>Legt die shim von ClosureExpression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.PrintMainOutputDecompilerBoolean">
            <summary>Legt die shim von ClosureExpression.PrintMain(Output output, Decompiler d, Boolean includeFirst) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.PrintOutput">
            <summary>Legt die shim von ClosureExpression.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.AllInstances.ClosureUpvalueLineGet">
            <summary>Legt die shim von ClosureExpression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.AllInstances.ConstantIndexGet">
            <summary>Legt die shim von ClosureExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.AllInstances.IsClosureGet">
            <summary>Legt die shim von ClosureExpression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.AllInstances.IsUpvalueOfInt32">
            <summary>Legt die shim von ClosureExpression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.AllInstances.PrintClosureOutputTarget">
            <summary>Legt die shim von ClosureExpression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.AllInstances.PrintMainOutputDecompilerBoolean">
            <summary>Legt die shim von ClosureExpression.PrintMain(Output output, Decompiler d, Boolean includeFirst) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimClosureExpression.AllInstances.PrintOutput">
            <summary>Legt die shim von ClosureExpression.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Code</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Code)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.AInt32">
            <summary>Legt die shim von Code.A(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.BInt32">
            <summary>Legt die shim von Code.B(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.BModeInt32">
            <summary>Legt die shim von Code.BMode(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.BxInt32">
            <summary>Legt die shim von Code.Bx(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.CInt32">
            <summary>Legt die shim von Code.C(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.CModeInt32">
            <summary>Legt die shim von Code.CMode(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.CodePointInt32">
            <summary>Legt die shim von Code.CodePoint(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.ConstructorLFunction">
            <summary>Legt die shim von Code.Code(LFunction function) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.GetArgAInt32">
            <summary>Legt die shim von Code.GetArgA(Int32 codePoint) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.GetArgBInt32">
            <summary>Legt die shim von Code.GetArgB(Int32 codePoint) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.GetArgBxInt32">
            <summary>Legt die shim von Code.GetArgBx(Int32 codePoint) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.GetArgCInt32">
            <summary>Legt die shim von Code.GetArgC(Int32 codePoint) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.GetArgsBXInt32">
            <summary>Legt die shim von Code.GetArgsBX(Int32 codePoint) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.GetOpCodeInt32">
            <summary>Legt die shim von Code.GetOpCode(Int32 codePoint) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.INDEXKInt32">
            <summary>Legt die shim von Code.INDEXK(Int32 r) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.ISKInt32">
            <summary>Legt die shim von Code.ISK(Int32 x) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.MASK0Int32Int32">
            <summary>Legt die shim von Code.MASK0(Int32 n, Int32 p) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.MASK1Int32Int32">
            <summary>Legt die shim von Code.MASK1(Int32 n, Int32 p) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.OpInt32">
            <summary>Legt die shim von Code.Op(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.OpModeInt32">
            <summary>Legt die shim von Code.OpMode(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.StaticConstructor">
            <summary>Legt die shim von Code.Code() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.TestAInt32">
            <summary>Legt die shim von Code.TestA(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.TestTInt32">
            <summary>Legt die shim von Code.TestT(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.sBxInt32">
            <summary>Legt die shim von Code.sBx(Int32 line) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.AllInstances.AInt32">
            <summary>Legt die shim von Code.A(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.AllInstances.BInt32">
            <summary>Legt die shim von Code.B(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.AllInstances.BModeInt32">
            <summary>Legt die shim von Code.BMode(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.AllInstances.BxInt32">
            <summary>Legt die shim von Code.Bx(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.AllInstances.CInt32">
            <summary>Legt die shim von Code.C(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.AllInstances.CModeInt32">
            <summary>Legt die shim von Code.CMode(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.AllInstances.CodePointInt32">
            <summary>Legt die shim von Code.CodePoint(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.AllInstances.OpInt32">
            <summary>Legt die shim von Code.Op(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.AllInstances.OpModeInt32">
            <summary>Legt die shim von Code.OpMode(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.AllInstances.TestAInt32">
            <summary>Legt die shim von Code.TestA(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.AllInstances.TestTInt32">
            <summary>Legt die shim von Code.TestT(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCode.AllInstances.sBxInt32">
            <summary>Legt die shim von Code.sBx(Int32 line) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.CompareBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.CompareBlock)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.AddStatementStatement">
            <summary>Legt die shim von CompareBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.BranchGet">
            <summary>Legt die shim von CompareBlock.get_Branch() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.BranchSetBranch">
            <summary>Legt die shim von CompareBlock.set_Branch(Branch value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.BreakableGet">
            <summary>Legt die shim von CompareBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.ConstructorLFunctionInt32Int32Int32Branch">
            <summary>Legt die shim von CompareBlock.CompareBlock(LFunction function, Int32 begin, Int32 end, Int32 target, Branch branch) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.GetLoopback">
            <summary>Legt die shim von CompareBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.IsContainerGet">
            <summary>Legt die shim von CompareBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.IsUnprotectedGet">
            <summary>Legt die shim von CompareBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.PrintOutput">
            <summary>Legt die shim von CompareBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.ProcessDecompiler">
            <summary>Legt die shim von CompareBlock.Process(Decompiler d) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.TargetGet">
            <summary>Legt die shim von CompareBlock.get_Target() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.TargetSetInt32">
            <summary>Legt die shim von CompareBlock.set_Target(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock._Processb__0RegistersBlock">
            <summary>Legt die shim von CompareBlock.&lt;Process&gt;b__0(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.AllInstances.AddStatementStatement">
            <summary>Legt die shim von CompareBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.AllInstances.BranchGet">
            <summary>Legt die shim von CompareBlock.get_Branch() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.AllInstances.BranchSetBranch">
            <summary>Legt die shim von CompareBlock.set_Branch(Branch value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.AllInstances.BreakableGet">
            <summary>Legt die shim von CompareBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.AllInstances.GetLoopback">
            <summary>Legt die shim von CompareBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.AllInstances.IsContainerGet">
            <summary>Legt die shim von CompareBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.AllInstances.IsUnprotectedGet">
            <summary>Legt die shim von CompareBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.AllInstances.PrintOutput">
            <summary>Legt die shim von CompareBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.AllInstances.ProcessDecompiler">
            <summary>Legt die shim von CompareBlock.Process(Decompiler d) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.AllInstances.TargetGet">
            <summary>Legt die shim von CompareBlock.get_Target() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.AllInstances.TargetSetInt32">
            <summary>Legt die shim von CompareBlock.set_Target(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimCompareBlock.AllInstances._Processb__0RegistersBlock">
            <summary>Legt die shim von CompareBlock.&lt;Process&gt;b__0(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Constant</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Constant)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.AsInteger">
            <summary>Legt die shim von Constant.AsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.AsName">
            <summary>Legt die shim von Constant.AsName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.ConstructorInt32">
            <summary>Legt die shim von Constant.Constant(Int32 constant) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.ConstructorLObject">
            <summary>Legt die shim von Constant.Constant(LObject constant) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.IsBooleanGet">
            <summary>Legt die shim von Constant.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.IsIdentifierGet">
            <summary>Legt die shim von Constant.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.IsIntegerGet">
            <summary>Legt die shim von Constant.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.IsNilGet">
            <summary>Legt die shim von Constant.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.IsNumberGet">
            <summary>Legt die shim von Constant.get_IsNumber() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.IsStringGet">
            <summary>Legt die shim von Constant.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.PrintOutput">
            <summary>Legt die shim von Constant.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.StaticConstructor">
            <summary>Legt die shim von Constant.Constant() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.AllInstances.AsInteger">
            <summary>Legt die shim von Constant.AsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.AllInstances.AsName">
            <summary>Legt die shim von Constant.AsName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.AllInstances.IsBooleanGet">
            <summary>Legt die shim von Constant.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.AllInstances.IsIdentifierGet">
            <summary>Legt die shim von Constant.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.AllInstances.IsIntegerGet">
            <summary>Legt die shim von Constant.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.AllInstances.IsNilGet">
            <summary>Legt die shim von Constant.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.AllInstances.IsNumberGet">
            <summary>Legt die shim von Constant.get_IsNumber() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.AllInstances.IsStringGet">
            <summary>Legt die shim von Constant.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstant.AllInstances.PrintOutput">
            <summary>Legt die shim von Constant.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.ConstantExpression</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.ConstantExpression)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.AsInteger">
            <summary>Legt die shim von ConstantExpression.AsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.AsName">
            <summary>Legt die shim von ConstantExpression.AsName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.ConstantIndexGet">
            <summary>Legt die shim von ConstantExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.ConstructorConstantInt32">
            <summary>Legt die shim von ConstantExpression.ConstantExpression(Constant constant, Int32 index) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.IsBooleanGet">
            <summary>Legt die shim von ConstantExpression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.IsBriefGet">
            <summary>Legt die shim von ConstantExpression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.IsConstantGet">
            <summary>Legt die shim von ConstantExpression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.IsIdentifierGet">
            <summary>Legt die shim von ConstantExpression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.IsIntegerGet">
            <summary>Legt die shim von ConstantExpression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.IsNilGet">
            <summary>Legt die shim von ConstantExpression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.IsStringGet">
            <summary>Legt die shim von ConstantExpression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.PrintOutput">
            <summary>Legt die shim von ConstantExpression.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.AllInstances.AsInteger">
            <summary>Legt die shim von ConstantExpression.AsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.AllInstances.AsName">
            <summary>Legt die shim von ConstantExpression.AsName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.AllInstances.ConstantIndexGet">
            <summary>Legt die shim von ConstantExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.AllInstances.IsBooleanGet">
            <summary>Legt die shim von ConstantExpression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.AllInstances.IsBriefGet">
            <summary>Legt die shim von ConstantExpression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.AllInstances.IsConstantGet">
            <summary>Legt die shim von ConstantExpression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.AllInstances.IsIdentifierGet">
            <summary>Legt die shim von ConstantExpression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.AllInstances.IsIntegerGet">
            <summary>Legt die shim von ConstantExpression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.AllInstances.IsNilGet">
            <summary>Legt die shim von ConstantExpression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.AllInstances.IsStringGet">
            <summary>Legt die shim von ConstantExpression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimConstantExpression.AllInstances.PrintOutput">
            <summary>Legt die shim von ConstantExpression.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Declaration</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Declaration)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.BeginGet">
            <summary>Legt die shim von Declaration.get_Begin() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.BeginSetInt32">
            <summary>Legt die shim von Declaration.set_Begin(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.ConstructorLLocal">
            <summary>Legt die shim von Declaration.Declaration(LLocal local) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.ConstructorStringInt32Int32">
            <summary>Legt die shim von Declaration.Declaration(String name, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.EndGet">
            <summary>Legt die shim von Declaration.get_End() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.EndSetInt32">
            <summary>Legt die shim von Declaration.set_End(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.ForLoopExplicitGet">
            <summary>Legt die shim von Declaration.get_ForLoopExplicit() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.ForLoopExplicitSetBoolean">
            <summary>Legt die shim von Declaration.set_ForLoopExplicit(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.ForLoopGet">
            <summary>Legt die shim von Declaration.get_ForLoop() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.ForLoopSetBoolean">
            <summary>Legt die shim von Declaration.set_ForLoop(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.NameGet">
            <summary>Legt die shim von Declaration.get_Name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.NameSetString">
            <summary>Legt die shim von Declaration.set_Name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.RegisterGet">
            <summary>Legt die shim von Declaration.get_Register() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.RegisterSetInt32">
            <summary>Legt die shim von Declaration.set_Register(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.AllInstances.BeginGet">
            <summary>Legt die shim von Declaration.get_Begin() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.AllInstances.BeginSetInt32">
            <summary>Legt die shim von Declaration.set_Begin(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.AllInstances.EndGet">
            <summary>Legt die shim von Declaration.get_End() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.AllInstances.EndSetInt32">
            <summary>Legt die shim von Declaration.set_End(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.AllInstances.ForLoopExplicitGet">
            <summary>Legt die shim von Declaration.get_ForLoopExplicit() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.AllInstances.ForLoopExplicitSetBoolean">
            <summary>Legt die shim von Declaration.set_ForLoopExplicit(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.AllInstances.ForLoopGet">
            <summary>Legt die shim von Declaration.get_ForLoop() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.AllInstances.ForLoopSetBoolean">
            <summary>Legt die shim von Declaration.set_ForLoop(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.AllInstances.NameGet">
            <summary>Legt die shim von Declaration.get_Name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.AllInstances.NameSetString">
            <summary>Legt die shim von Declaration.set_Name(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.AllInstances.RegisterGet">
            <summary>Legt die shim von Declaration.get_Register() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclaration.AllInstances.RegisterSetInt32">
            <summary>Legt die shim von Declaration.set_Register(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclare">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Declare</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclare.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclare.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Declare)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclare.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclare.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclare.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclare.ConstructorListOfDeclaration">
            <summary>Legt die shim von Declare.Declare(List`1&lt;Declaration&gt; decls) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclare.PrintOutput">
            <summary>Legt die shim von Declare.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclare.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDeclare.AllInstances.PrintOutput">
            <summary>Legt die shim von Declare.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AdjustLineInt32Int32">
            <summary>Legt die shim von Decompiler.AdjustLine(Int32 line, Int32 target) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.BreakTargetInt32">
            <summary>Legt die shim von Decompiler.BreakTarget(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.CodeGet">
            <summary>Legt die shim von Decompiler.get_Code() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.CodeSetCode">
            <summary>Legt die shim von Decompiler.set_Code(Code value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.ConstructorLFunction">
            <summary>Legt die shim von Decompiler.Decompiler(LFunction function) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.DeclListGet">
            <summary>Legt die shim von Decompiler.get_DeclList() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.DeclListSetDeclarationArray">
            <summary>Legt die shim von Decompiler.set_DeclList(Declaration[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.Decompile">
            <summary>Legt die shim von Decompiler.Decompile() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.EnclosingBlockBlock">
            <summary>Legt die shim von Decompiler.EnclosingBlock(Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.EnclosingBlockInt32">
            <summary>Legt die shim von Decompiler.EnclosingBlock(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.EnclosingBreakableBlockInt32">
            <summary>Legt die shim von Decompiler.EnclosingBreakableBlock(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.EnclosingUnprotectedBlockInt32">
            <summary>Legt die shim von Decompiler.EnclosingUnprotectedBlock(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.FGet">
            <summary>Legt die shim von Decompiler.get_F() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.FSetFunction">
            <summary>Legt die shim von Decompiler.set_F(Function value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.FindReverseTargets">
            <summary>Legt die shim von Decompiler.FindReverseTargets() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.FunctionGet">
            <summary>Legt die shim von Decompiler.get_Function() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.FunctionSetLFunction">
            <summary>Legt die shim von Decompiler.set_Function(LFunction value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.GetAssignmentInt32">
            <summary>Legt die shim von Decompiler.GetAssignment(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.GetMoveIntoTargetTargetInt32Int32">
            <summary>Legt die shim von Decompiler.GetMoveIntoTargetTarget(Int32 line, Int32 previous) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.GetMoveIntoTargetValueInt32Int32">
            <summary>Legt die shim von Decompiler.GetMoveIntoTargetValue(Int32 line, Int32 previous) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.HandleBranchesBoolean">
            <summary>Legt die shim von Decompiler.HandleBranches(Boolean first) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.HandleInitialDeclaresOutput">
            <summary>Legt die shim von Decompiler.HandleInitialDeclares(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.IsMoveIntoTargetInt32">
            <summary>Legt die shim von Decompiler.IsMoveIntoTarget(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.IsStatementInt32">
            <summary>Legt die shim von Decompiler.IsStatement(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.IsStatementInt32Int32">
            <summary>Legt die shim von Decompiler.IsStatement(Int32 line, Int32 testRegister) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.PopCompareSetConditionStackOfBranchInt32Int32">
            <summary>Legt die shim von Decompiler.PopCompareSetCondition(Stack`1&lt;Branch&gt; stack, Int32 assignEnd, Int32 target) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.PopConditionStackOfBranch">
            <summary>Legt die shim von Decompiler.PopCondition(Stack`1&lt;Branch&gt; stack) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.PopSetConditionInternalStackOfBranchBooleanInt32Int32">
            <summary>Legt die shim von Decompiler.PopSetConditionInternal(Stack`1&lt;Branch&gt; stack, Boolean invert, Int32 assignEnd, Int32 target) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.PopSetConditionStackOfBranchInt32Int32">
            <summary>Legt die shim von Decompiler.PopSetCondition(Stack`1&lt;Branch&gt; stack, Int32 assignEnd, Int32 target) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.Print">
            <summary>Legt die shim von Decompiler.Print() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.PrintOutput">
            <summary>Legt die shim von Decompiler.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.ProcessLineInt32">
            <summary>Legt die shim von Decompiler.ProcessLine(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.ProcessOperationOperationInt32Int32Block">
            <summary>Legt die shim von Decompiler.ProcessOperation(Operation operation, Int32 line, Int32 nextLine, Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.ProcessSequenceInt32Int32">
            <summary>Legt die shim von Decompiler.ProcessSequence(Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.AdjustLineInt32Int32">
            <summary>Legt die shim von Decompiler.AdjustLine(Int32 line, Int32 target) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.BreakTargetInt32">
            <summary>Legt die shim von Decompiler.BreakTarget(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.CodeGet">
            <summary>Legt die shim von Decompiler.get_Code() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.CodeSetCode">
            <summary>Legt die shim von Decompiler.set_Code(Code value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.DeclListGet">
            <summary>Legt die shim von Decompiler.get_DeclList() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.DeclListSetDeclarationArray">
            <summary>Legt die shim von Decompiler.set_DeclList(Declaration[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.Decompile">
            <summary>Legt die shim von Decompiler.Decompile() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.EnclosingBlockBlock">
            <summary>Legt die shim von Decompiler.EnclosingBlock(Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.EnclosingBlockInt32">
            <summary>Legt die shim von Decompiler.EnclosingBlock(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.EnclosingBreakableBlockInt32">
            <summary>Legt die shim von Decompiler.EnclosingBreakableBlock(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.EnclosingUnprotectedBlockInt32">
            <summary>Legt die shim von Decompiler.EnclosingUnprotectedBlock(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.FGet">
            <summary>Legt die shim von Decompiler.get_F() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.FSetFunction">
            <summary>Legt die shim von Decompiler.set_F(Function value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.FindReverseTargets">
            <summary>Legt die shim von Decompiler.FindReverseTargets() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.FunctionGet">
            <summary>Legt die shim von Decompiler.get_Function() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.FunctionSetLFunction">
            <summary>Legt die shim von Decompiler.set_Function(LFunction value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.GetAssignmentInt32">
            <summary>Legt die shim von Decompiler.GetAssignment(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.GetMoveIntoTargetTargetInt32Int32">
            <summary>Legt die shim von Decompiler.GetMoveIntoTargetTarget(Int32 line, Int32 previous) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.GetMoveIntoTargetValueInt32Int32">
            <summary>Legt die shim von Decompiler.GetMoveIntoTargetValue(Int32 line, Int32 previous) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.HandleBranchesBoolean">
            <summary>Legt die shim von Decompiler.HandleBranches(Boolean first) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.HandleInitialDeclaresOutput">
            <summary>Legt die shim von Decompiler.HandleInitialDeclares(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.IsMoveIntoTargetInt32">
            <summary>Legt die shim von Decompiler.IsMoveIntoTarget(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.IsStatementInt32">
            <summary>Legt die shim von Decompiler.IsStatement(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.IsStatementInt32Int32">
            <summary>Legt die shim von Decompiler.IsStatement(Int32 line, Int32 testRegister) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.PopCompareSetConditionStackOfBranchInt32Int32">
            <summary>Legt die shim von Decompiler.PopCompareSetCondition(Stack`1&lt;Branch&gt; stack, Int32 assignEnd, Int32 target) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.PopConditionStackOfBranch">
            <summary>Legt die shim von Decompiler.PopCondition(Stack`1&lt;Branch&gt; stack) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.PopSetConditionInternalStackOfBranchBooleanInt32Int32">
            <summary>Legt die shim von Decompiler.PopSetConditionInternal(Stack`1&lt;Branch&gt; stack, Boolean invert, Int32 assignEnd, Int32 target) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.PopSetConditionStackOfBranchInt32Int32">
            <summary>Legt die shim von Decompiler.PopSetCondition(Stack`1&lt;Branch&gt; stack, Int32 assignEnd, Int32 target) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.Print">
            <summary>Legt die shim von Decompiler.Print() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.PrintOutput">
            <summary>Legt die shim von Decompiler.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.ProcessLineInt32">
            <summary>Legt die shim von Decompiler.ProcessLine(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.ProcessOperationOperationInt32Int32Block">
            <summary>Legt die shim von Decompiler.ProcessOperation(Operation operation, Int32 line, Int32 nextLine, Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDecompiler.AllInstances.ProcessSequenceInt32Int32">
            <summary>Legt die shim von Decompiler.ProcessSequence(Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.DoEndBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.DoEndBlock)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.AddStatementStatement">
            <summary>Legt die shim von DoEndBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.BreakableGet">
            <summary>Legt die shim von DoEndBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.ConstructorLFunctionInt32Int32">
            <summary>Legt die shim von DoEndBlock.DoEndBlock(LFunction function, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.GetLoopback">
            <summary>Legt die shim von DoEndBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.IsContainerGet">
            <summary>Legt die shim von DoEndBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.IsUnprotectedGet">
            <summary>Legt die shim von DoEndBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.PrintOutput">
            <summary>Legt die shim von DoEndBlock.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.AllInstances.AddStatementStatement">
            <summary>Legt die shim von DoEndBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.AllInstances.BreakableGet">
            <summary>Legt die shim von DoEndBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.AllInstances.GetLoopback">
            <summary>Legt die shim von DoEndBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.AllInstances.IsContainerGet">
            <summary>Legt die shim von DoEndBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.AllInstances.IsUnprotectedGet">
            <summary>Legt die shim von DoEndBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimDoEndBlock.AllInstances.PrintOutput">
            <summary>Legt die shim von DoEndBlock.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.EQNode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.EQNode)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.AsExpressionRegisters">
            <summary>Legt die shim von EQNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.ConstructorInt32Int32BooleanInt32Int32Int32">
            <summary>Legt die shim von EQNode.EQNode(Int32 left, Int32 right, Boolean invert, Int32 line, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.GetRegister">
            <summary>Legt die shim von EQNode.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.Invert">
            <summary>Legt die shim von EQNode.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.UseExpressionExpression">
            <summary>Legt die shim von EQNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.AllInstances.AsExpressionRegisters">
            <summary>Legt die shim von EQNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.AllInstances.GetRegister">
            <summary>Legt die shim von EQNode.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.AllInstances.Invert">
            <summary>Legt die shim von EQNode.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimEQNode.AllInstances.UseExpressionExpression">
            <summary>Legt die shim von EQNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.ElseEndBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.ElseEndBlock)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.AddStatementStatement">
            <summary>Legt die shim von ElseEndBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.BreakableGet">
            <summary>Legt die shim von ElseEndBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.CompareToBlock">
            <summary>Legt die shim von ElseEndBlock.CompareTo(Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.ConstructorLFunctionInt32Int32">
            <summary>Legt die shim von ElseEndBlock.ElseEndBlock(LFunction function, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.GetLoopback">
            <summary>Legt die shim von ElseEndBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.IsContainerGet">
            <summary>Legt die shim von ElseEndBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.IsUnprotectedGet">
            <summary>Legt die shim von ElseEndBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.PartnerGet">
            <summary>Legt die shim von ElseEndBlock.get_Partner() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.PartnerSetIfThenElseBlock">
            <summary>Legt die shim von ElseEndBlock.set_Partner(IfThenElseBlock value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.PrintOutput">
            <summary>Legt die shim von ElseEndBlock.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.AllInstances.AddStatementStatement">
            <summary>Legt die shim von ElseEndBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.AllInstances.BreakableGet">
            <summary>Legt die shim von ElseEndBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.AllInstances.CompareToBlock">
            <summary>Legt die shim von ElseEndBlock.CompareTo(Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.AllInstances.GetLoopback">
            <summary>Legt die shim von ElseEndBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.AllInstances.IsContainerGet">
            <summary>Legt die shim von ElseEndBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.AllInstances.IsUnprotectedGet">
            <summary>Legt die shim von ElseEndBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.AllInstances.PartnerGet">
            <summary>Legt die shim von ElseEndBlock.get_Partner() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.AllInstances.PartnerSetIfThenElseBlock">
            <summary>Legt die shim von ElseEndBlock.set_Partner(IfThenElseBlock value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimElseEndBlock.AllInstances.PrintOutput">
            <summary>Legt die shim von ElseEndBlock.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Expression</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AddEntryTableLiteralEntry">
            <summary>Legt die shim von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AsInteger">
            <summary>Legt die shim von Expression.AsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AsName">
            <summary>Legt die shim von Expression.AsName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.BeginsWithParenGet">
            <summary>Legt die shim von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.ClosureUpvalueLineGet">
            <summary>Legt die shim von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.ConstructorInt32">
            <summary>Legt die shim von Expression.Expression(Int32 precedence) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.GetField">
            <summary>Legt die shim von Expression.GetField() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.GetTable">
            <summary>Legt die shim von Expression.GetTable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.IsBooleanGet">
            <summary>Legt die shim von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.IsBriefGet">
            <summary>Legt die shim von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.IsClosureGet">
            <summary>Legt die shim von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.IsConstantGet">
            <summary>Legt die shim von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.IsDotChainGet">
            <summary>Legt die shim von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.IsIdentifierGet">
            <summary>Legt die shim von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.IsIntegerGet">
            <summary>Legt die shim von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.IsMemberAccessGet">
            <summary>Legt die shim von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.IsMultipleGet">
            <summary>Legt die shim von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.IsNewEntryAllowedGet">
            <summary>Legt die shim von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.IsNilGet">
            <summary>Legt die shim von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.IsStringGet">
            <summary>Legt die shim von Expression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.IsTableLiteralGet">
            <summary>Legt die shim von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.IsUpvalueOfInt32">
            <summary>Legt die shim von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.MakeADDExpressionExpression">
            <summary>Legt die shim von Expression.MakeADD(Expression left, Expression right) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.MakeANDExpressionExpression">
            <summary>Legt die shim von Expression.MakeAND(Expression left, Expression right) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.MakeCONCATExpressionExpression">
            <summary>Legt die shim von Expression.MakeCONCAT(Expression left, Expression right) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.MakeDIVExpressionExpression">
            <summary>Legt die shim von Expression.MakeDIV(Expression left, Expression right) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.MakeLENExpression">
            <summary>Legt die shim von Expression.MakeLEN(Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.MakeMODExpressionExpression">
            <summary>Legt die shim von Expression.MakeMOD(Expression left, Expression right) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.MakeMULExpressionExpression">
            <summary>Legt die shim von Expression.MakeMUL(Expression left, Expression right) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.MakeNOTExpression">
            <summary>Legt die shim von Expression.MakeNOT(Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.MakeORExpressionExpression">
            <summary>Legt die shim von Expression.MakeOR(Expression left, Expression right) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.MakePOWExpressionExpression">
            <summary>Legt die shim von Expression.MakePOW(Expression left, Expression right) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.MakeSUBExpressionExpression">
            <summary>Legt die shim von Expression.MakeSUB(Expression left, Expression right) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.MakeUNMExpression">
            <summary>Legt die shim von Expression.MakeUNM(Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.PrecedenceGet">
            <summary>Legt die shim von Expression.get_Precedence() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.PrecedenceSetInt32">
            <summary>Legt die shim von Expression.set_Precedence(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.PrintBinaryOutputStringExpressionExpression">
            <summary>Legt die shim von Expression.PrintBinary(Output output, String op, Expression left, Expression right) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.PrintClosureOutputTarget">
            <summary>Legt die shim von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.PrintMultipleOutput">
            <summary>Legt die shim von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.PrintSequenceOutputListOfExpressionBooleanBoolean">
            <summary>Legt die shim von Expression.PrintSequence(Output output, List`1&lt;Expression&gt; exprs, Boolean lineBreak, Boolean multiple) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.PrintUnaryOutputStringExpression">
            <summary>Legt die shim von Expression.PrintUnary(Output output, String op, Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.StaticConstructor">
            <summary>Legt die shim von Expression.Expression() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.AddEntryTableLiteralEntry">
            <summary>Legt die shim von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.AsInteger">
            <summary>Legt die shim von Expression.AsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.AsName">
            <summary>Legt die shim von Expression.AsName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.BeginsWithParenGet">
            <summary>Legt die shim von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.ClosureUpvalueLineGet">
            <summary>Legt die shim von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.GetField">
            <summary>Legt die shim von Expression.GetField() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.GetTable">
            <summary>Legt die shim von Expression.GetTable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.IsBooleanGet">
            <summary>Legt die shim von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.IsBriefGet">
            <summary>Legt die shim von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.IsClosureGet">
            <summary>Legt die shim von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.IsConstantGet">
            <summary>Legt die shim von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.IsDotChainGet">
            <summary>Legt die shim von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.IsIdentifierGet">
            <summary>Legt die shim von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.IsIntegerGet">
            <summary>Legt die shim von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.IsMemberAccessGet">
            <summary>Legt die shim von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.IsMultipleGet">
            <summary>Legt die shim von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.IsNewEntryAllowedGet">
            <summary>Legt die shim von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.IsNilGet">
            <summary>Legt die shim von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.IsStringGet">
            <summary>Legt die shim von Expression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.IsTableLiteralGet">
            <summary>Legt die shim von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.IsUpvalueOfInt32">
            <summary>Legt die shim von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.PrecedenceGet">
            <summary>Legt die shim von Expression.get_Precedence() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.PrecedenceSetInt32">
            <summary>Legt die shim von Expression.set_Precedence(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.PrintClosureOutputTarget">
            <summary>Legt die shim von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimExpression.AllInstances.PrintMultipleOutput">
            <summary>Legt die shim von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.ForBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.ForBlock)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.AddStatementStatement">
            <summary>Legt die shim von ForBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.BreakableGet">
            <summary>Legt die shim von ForBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.ConstructorLFunctionInt32Int32Int32Registers">
            <summary>Legt die shim von ForBlock.ForBlock(LFunction function, Int32 begin, Int32 end, Int32 register, Registers r) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.GetLoopback">
            <summary>Legt die shim von ForBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.IsContainerGet">
            <summary>Legt die shim von ForBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.IsUnprotectedGet">
            <summary>Legt die shim von ForBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.PrintOutput">
            <summary>Legt die shim von ForBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.ScopeEndGet">
            <summary>Legt die shim von ForBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.AllInstances.AddStatementStatement">
            <summary>Legt die shim von ForBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.AllInstances.BreakableGet">
            <summary>Legt die shim von ForBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.AllInstances.GetLoopback">
            <summary>Legt die shim von ForBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.AllInstances.IsContainerGet">
            <summary>Legt die shim von ForBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.AllInstances.IsUnprotectedGet">
            <summary>Legt die shim von ForBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.AllInstances.PrintOutput">
            <summary>Legt die shim von ForBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimForBlock.AllInstances.ScopeEndGet">
            <summary>Legt die shim von ForBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunction">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Function</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunction.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunction.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Function)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunction.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunction.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunction.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunction.ConstructorLFunction">
            <summary>Legt die shim von Function.Function(LFunction function) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunction.GetConstantExpressionInt32">
            <summary>Legt die shim von Function.GetConstantExpression(Int32 constantIndex) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunction.GetGlobalExpressionInt32">
            <summary>Legt die shim von Function.GetGlobalExpression(Int32 constantIndex) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunction.GetGlobalNameInt32">
            <summary>Legt die shim von Function.GetGlobalName(Int32 constantIndex) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunction.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunction.AllInstances.GetConstantExpressionInt32">
            <summary>Legt die shim von Function.GetConstantExpression(Int32 constantIndex) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunction.AllInstances.GetGlobalExpressionInt32">
            <summary>Legt die shim von Function.GetGlobalExpression(Int32 constantIndex) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunction.AllInstances.GetGlobalNameInt32">
            <summary>Legt die shim von Function.GetGlobalName(Int32 constantIndex) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.FunctionCall</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.FunctionCall)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.BeginsWithParenGet">
            <summary>Legt die shim von FunctionCall.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.ConstantIndexGet">
            <summary>Legt die shim von FunctionCall.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.ConstructorExpressionExpressionArrayBoolean">
            <summary>Legt die shim von FunctionCall.FunctionCall(Expression function, Expression[] arguments, Boolean multiple) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.IsMethodCallGet">
            <summary>Legt die shim von FunctionCall.get_IsMethodCall() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.IsMultipleGet">
            <summary>Legt die shim von FunctionCall.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.PrintMultipleOutput">
            <summary>Legt die shim von FunctionCall.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.PrintOutput">
            <summary>Legt die shim von FunctionCall.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.AllInstances.BeginsWithParenGet">
            <summary>Legt die shim von FunctionCall.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.AllInstances.ConstantIndexGet">
            <summary>Legt die shim von FunctionCall.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.AllInstances.IsMethodCallGet">
            <summary>Legt die shim von FunctionCall.get_IsMethodCall() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.AllInstances.IsMultipleGet">
            <summary>Legt die shim von FunctionCall.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.AllInstances.PrintMultipleOutput">
            <summary>Legt die shim von FunctionCall.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCall.AllInstances.PrintOutput">
            <summary>Legt die shim von FunctionCall.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCallStatement">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.FunctionCallStatement</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCallStatement.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCallStatement.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.FunctionCallStatement)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCallStatement.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCallStatement.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCallStatement.BeginsWithParenGet">
            <summary>Legt die shim von FunctionCallStatement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCallStatement.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCallStatement.ConstructorFunctionCall">
            <summary>Legt die shim von FunctionCallStatement.FunctionCallStatement(FunctionCall call) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCallStatement.PrintOutput">
            <summary>Legt die shim von FunctionCallStatement.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCallStatement.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCallStatement.AllInstances.BeginsWithParenGet">
            <summary>Legt die shim von FunctionCallStatement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimFunctionCallStatement.AllInstances.PrintOutput">
            <summary>Legt die shim von FunctionCallStatement.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGenericOperation">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.GenericOperation</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGenericOperation.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGenericOperation.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.GenericOperation)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGenericOperation.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGenericOperation.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGenericOperation.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGenericOperation.ConstructorInt32Statement">
            <summary>Legt die shim von GenericOperation.GenericOperation(Int32 line, Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGenericOperation.ProcessRegistersBlock">
            <summary>Legt die shim von GenericOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGenericOperation.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGenericOperation.AllInstances.ProcessRegistersBlock">
            <summary>Legt die shim von GenericOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.GlobalExpression</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.GlobalExpression)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.ConstantIndexGet">
            <summary>Legt die shim von GlobalExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.ConstructorStringInt32">
            <summary>Legt die shim von GlobalExpression.GlobalExpression(String name, Int32 index) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.IsBriefGet">
            <summary>Legt die shim von GlobalExpression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.IsDotChainGet">
            <summary>Legt die shim von GlobalExpression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.PrintOutput">
            <summary>Legt die shim von GlobalExpression.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.AllInstances.ConstantIndexGet">
            <summary>Legt die shim von GlobalExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.AllInstances.IsBriefGet">
            <summary>Legt die shim von GlobalExpression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.AllInstances.IsDotChainGet">
            <summary>Legt die shim von GlobalExpression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalExpression.AllInstances.PrintOutput">
            <summary>Legt die shim von GlobalExpression.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalSet">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.GlobalSet</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalSet.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalSet.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.GlobalSet)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalSet.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalSet.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalSet.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalSet.ConstructorInt32StringExpression">
            <summary>Legt die shim von GlobalSet.GlobalSet(Int32 line, String global, Expression value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalSet.ProcessRegistersBlock">
            <summary>Legt die shim von GlobalSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalSet.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalSet.AllInstances.ProcessRegistersBlock">
            <summary>Legt die shim von GlobalSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalTarget">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.GlobalTarget</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalTarget.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalTarget.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.GlobalTarget)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalTarget.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalTarget.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalTarget.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalTarget.ConstructorString">
            <summary>Legt die shim von GlobalTarget.GlobalTarget(String name) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalTarget.PrintMethodOutput">
            <summary>Legt die shim von GlobalTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalTarget.PrintOutput">
            <summary>Legt die shim von GlobalTarget.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalTarget.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalTarget.AllInstances.PrintMethodOutput">
            <summary>Legt die shim von GlobalTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimGlobalTarget.AllInstances.PrintOutput">
            <summary>Legt die shim von GlobalTarget.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.IfThenElseBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.IfThenElseBlock)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.AddStatementStatement">
            <summary>Legt die shim von IfThenElseBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.BreakableGet">
            <summary>Legt die shim von IfThenElseBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.CompareToBlock">
            <summary>Legt die shim von IfThenElseBlock.CompareTo(Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.ConstructorLFunctionBranchInt32BooleanRegisters">
            <summary>Legt die shim von IfThenElseBlock.IfThenElseBlock(LFunction function, Branch branch, Int32 loopback, Boolean emptyElse, Registers r) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.GetLoopback">
            <summary>Legt die shim von IfThenElseBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.IsContainerGet">
            <summary>Legt die shim von IfThenElseBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.IsUnprotectedGet">
            <summary>Legt die shim von IfThenElseBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.PartnerGet">
            <summary>Legt die shim von IfThenElseBlock.get_Partner() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.PartnerSetElseEndBlock">
            <summary>Legt die shim von IfThenElseBlock.set_Partner(ElseEndBlock value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.PrintOutput">
            <summary>Legt die shim von IfThenElseBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.ScopeEndGet">
            <summary>Legt die shim von IfThenElseBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.AllInstances.AddStatementStatement">
            <summary>Legt die shim von IfThenElseBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.AllInstances.BreakableGet">
            <summary>Legt die shim von IfThenElseBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.AllInstances.CompareToBlock">
            <summary>Legt die shim von IfThenElseBlock.CompareTo(Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.AllInstances.GetLoopback">
            <summary>Legt die shim von IfThenElseBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.AllInstances.IsContainerGet">
            <summary>Legt die shim von IfThenElseBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.AllInstances.IsUnprotectedGet">
            <summary>Legt die shim von IfThenElseBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.AllInstances.PartnerGet">
            <summary>Legt die shim von IfThenElseBlock.get_Partner() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.AllInstances.PartnerSetElseEndBlock">
            <summary>Legt die shim von IfThenElseBlock.set_Partner(ElseEndBlock value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.AllInstances.PrintOutput">
            <summary>Legt die shim von IfThenElseBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenElseBlock.AllInstances.ScopeEndGet">
            <summary>Legt die shim von IfThenElseBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.IfThenEndBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.IfThenEndBlock)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.AddStatementStatement">
            <summary>Legt die shim von IfThenEndBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.BreakableGet">
            <summary>Legt die shim von IfThenEndBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.ConstructorLFunctionBranchRegisters">
            <summary>Legt die shim von IfThenEndBlock.IfThenEndBlock(LFunction function, Branch branch, Registers r) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.ConstructorLFunctionBranchStackOfBranchRegisters">
            <summary>Legt die shim von IfThenEndBlock.IfThenEndBlock(LFunction function, Branch branch, Stack`1&lt;Branch&gt; stack, Registers r) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.GetLoopback">
            <summary>Legt die shim von IfThenEndBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.IsContainerGet">
            <summary>Legt die shim von IfThenEndBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.IsUnprotectedGet">
            <summary>Legt die shim von IfThenEndBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.PrintOutput">
            <summary>Legt die shim von IfThenEndBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.ProcessDecompiler">
            <summary>Legt die shim von IfThenEndBlock.Process(Decompiler d) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.AllInstances.AddStatementStatement">
            <summary>Legt die shim von IfThenEndBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.AllInstances.BreakableGet">
            <summary>Legt die shim von IfThenEndBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.AllInstances.GetLoopback">
            <summary>Legt die shim von IfThenEndBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.AllInstances.IsContainerGet">
            <summary>Legt die shim von IfThenEndBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.AllInstances.IsUnprotectedGet">
            <summary>Legt die shim von IfThenEndBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.AllInstances.PrintOutput">
            <summary>Legt die shim von IfThenEndBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimIfThenEndBlock.AllInstances.ProcessDecompiler">
            <summary>Legt die shim von IfThenEndBlock.Process(Decompiler d) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBoolean">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LBoolean</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBoolean.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBoolean.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LBoolean)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBoolean.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBoolean.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBoolean.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBoolean.ConstructorBoolean">
            <summary>Legt die shim von LBoolean.LBoolean(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBoolean.EqualsObject">
            <summary>Legt die shim von LBoolean.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBoolean.StaticConstructor">
            <summary>Legt die shim von LBoolean.LBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBoolean.ToString">
            <summary>Legt die shim von LBoolean.ToString() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBoolean.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBoolean.AllInstances.EqualsObject">
            <summary>Legt die shim von LBoolean.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBoolean.AllInstances.ToString01">
            <summary>Legt die shim von LBoolean.ToString() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBooleanType">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LBooleanType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBooleanType.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBooleanType.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LBooleanType)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBooleanType.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBooleanType.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBooleanType.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBooleanType.Constructor">
            <summary>Legt die shim von LBooleanType.LBooleanType() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBooleanType.ParseStreamBHeader">
            <summary>Legt die shim von LBooleanType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBooleanType.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLBooleanType.AllInstances.ParseStreamBHeader">
            <summary>Legt die shim von LBooleanType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLConstantType">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LConstantType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLConstantType.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLConstantType.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LConstantType)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLConstantType.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLConstantType.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLConstantType.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLConstantType.Constructor">
            <summary>Legt die shim von LConstantType.LConstantType() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLConstantType.ParseStreamBHeader">
            <summary>Legt die shim von LConstantType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLConstantType.StaticConstructor">
            <summary>Legt die shim von LConstantType.LConstantType() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLConstantType.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLConstantType.AllInstances.ParseStreamBHeader">
            <summary>Legt die shim von LConstantType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LDoubleNumber</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LDoubleNumber)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.ConstructorDouble">
            <summary>Legt die shim von LDoubleNumber.LDoubleNumber(Double number) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.EqualsObject">
            <summary>Legt die shim von LDoubleNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.NumberGet">
            <summary>Legt die shim von LDoubleNumber.get_Number() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.NumberSetDouble">
            <summary>Legt die shim von LDoubleNumber.set_Number(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.ToString">
            <summary>Legt die shim von LDoubleNumber.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.ValueGet">
            <summary>Legt die shim von LDoubleNumber.get_Value() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.AllInstances.EqualsObject">
            <summary>Legt die shim von LDoubleNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.AllInstances.NumberGet">
            <summary>Legt die shim von LDoubleNumber.get_Number() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.AllInstances.NumberSetDouble">
            <summary>Legt die shim von LDoubleNumber.set_Number(Double value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.AllInstances.ToString01">
            <summary>Legt die shim von LDoubleNumber.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLDoubleNumber.AllInstances.ValueGet">
            <summary>Legt die shim von LDoubleNumber.get_Value() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LENode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LENode)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.AsExpressionRegisters">
            <summary>Legt die shim von LENode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.ConstructorInt32Int32BooleanInt32Int32Int32">
            <summary>Legt die shim von LENode.LENode(Int32 left, Int32 right, Boolean invert, Int32 line, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.GetRegister">
            <summary>Legt die shim von LENode.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.Invert">
            <summary>Legt die shim von LENode.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.UseExpressionExpression">
            <summary>Legt die shim von LENode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.AllInstances.AsExpressionRegisters">
            <summary>Legt die shim von LENode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.AllInstances.GetRegister">
            <summary>Legt die shim von LENode.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.AllInstances.Invert">
            <summary>Legt die shim von LENode.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLENode.AllInstances.UseExpressionExpression">
            <summary>Legt die shim von LENode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LFloatNumber</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFloatNumber)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.ConstructorSingle">
            <summary>Legt die shim von LFloatNumber.LFloatNumber(Single number) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.EqualsObject">
            <summary>Legt die shim von LFloatNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.NumberGet">
            <summary>Legt die shim von LFloatNumber.get_Number() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.NumberSetSingle">
            <summary>Legt die shim von LFloatNumber.set_Number(Single value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.ToString">
            <summary>Legt die shim von LFloatNumber.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.ValueGet">
            <summary>Legt die shim von LFloatNumber.get_Value() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.AllInstances.EqualsObject">
            <summary>Legt die shim von LFloatNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.AllInstances.NumberGet">
            <summary>Legt die shim von LFloatNumber.get_Number() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.AllInstances.NumberSetSingle">
            <summary>Legt die shim von LFloatNumber.set_Number(Single value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.AllInstances.ToString01">
            <summary>Legt die shim von LFloatNumber.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFloatNumber.AllInstances.ValueGet">
            <summary>Legt die shim von LFloatNumber.get_Value() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.CodeGet">
            <summary>Legt die shim von LFunction.get_Code() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.CodeSetInt32Array">
            <summary>Legt die shim von LFunction.set_Code(Int32[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.ConstantsGet">
            <summary>Legt die shim von LFunction.get_Constants() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.ConstantsSetLObjectArray">
            <summary>Legt die shim von LFunction.set_Constants(LObject[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.ConstructorBHeaderInt32ArrayLLocalArrayLObjectArrayLUpvalueArrayLFunctionArrayInt32Int32Int32Int32">
            <summary>Legt die shim von LFunction.LFunction(BHeader header, Int32[] code, LLocal[] locals, LObject[] constants, LUpvalue[] upvalues, LFunction[] functions, Int32 maximumStackSize, Int32 numUpValues, Int32 numParams, Int32 vararg) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.FunctionsGet">
            <summary>Legt die shim von LFunction.get_Functions() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.FunctionsSetLFunctionArray">
            <summary>Legt die shim von LFunction.set_Functions(LFunction[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.HeaderGet">
            <summary>Legt die shim von LFunction.get_Header() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.HeaderSetBHeader">
            <summary>Legt die shim von LFunction.set_Header(BHeader value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.LocalsGet">
            <summary>Legt die shim von LFunction.get_Locals() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.LocalsSetLLocalArray">
            <summary>Legt die shim von LFunction.set_Locals(LLocal[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.MaxStackSizeGet">
            <summary>Legt die shim von LFunction.get_MaxStackSize() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.MaxStackSizeSetInt32">
            <summary>Legt die shim von LFunction.set_MaxStackSize(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.NumParamsGet">
            <summary>Legt die shim von LFunction.get_NumParams() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.NumParamsSetInt32">
            <summary>Legt die shim von LFunction.set_NumParams(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.NumUpValuesGet">
            <summary>Legt die shim von LFunction.get_NumUpValues() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.NumUpValuesSetInt32">
            <summary>Legt die shim von LFunction.set_NumUpValues(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.UpValuesGet">
            <summary>Legt die shim von LFunction.get_UpValues() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.UpValuesSetLUpvalueArray">
            <summary>Legt die shim von LFunction.set_UpValues(LUpvalue[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.VarArgGet">
            <summary>Legt die shim von LFunction.get_VarArg() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.VarArgSetInt32">
            <summary>Legt die shim von LFunction.set_VarArg(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.CodeGet">
            <summary>Legt die shim von LFunction.get_Code() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.CodeSetInt32Array">
            <summary>Legt die shim von LFunction.set_Code(Int32[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.ConstantsGet">
            <summary>Legt die shim von LFunction.get_Constants() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.ConstantsSetLObjectArray">
            <summary>Legt die shim von LFunction.set_Constants(LObject[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.FunctionsGet">
            <summary>Legt die shim von LFunction.get_Functions() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.FunctionsSetLFunctionArray">
            <summary>Legt die shim von LFunction.set_Functions(LFunction[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.HeaderGet">
            <summary>Legt die shim von LFunction.get_Header() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.HeaderSetBHeader">
            <summary>Legt die shim von LFunction.set_Header(BHeader value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.LocalsGet">
            <summary>Legt die shim von LFunction.get_Locals() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.LocalsSetLLocalArray">
            <summary>Legt die shim von LFunction.set_Locals(LLocal[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.MaxStackSizeGet">
            <summary>Legt die shim von LFunction.get_MaxStackSize() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.MaxStackSizeSetInt32">
            <summary>Legt die shim von LFunction.set_MaxStackSize(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.NumParamsGet">
            <summary>Legt die shim von LFunction.get_NumParams() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.NumParamsSetInt32">
            <summary>Legt die shim von LFunction.set_NumParams(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.NumUpValuesGet">
            <summary>Legt die shim von LFunction.get_NumUpValues() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.NumUpValuesSetInt32">
            <summary>Legt die shim von LFunction.set_NumUpValues(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.UpValuesGet">
            <summary>Legt die shim von LFunction.get_UpValues() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.UpValuesSetLUpvalueArray">
            <summary>Legt die shim von LFunction.set_UpValues(LUpvalue[] value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.VarArgGet">
            <summary>Legt die shim von LFunction.get_VarArg() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunction.AllInstances.VarArgSetInt32">
            <summary>Legt die shim von LFunction.set_VarArg(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType.Constructor">
            <summary>Legt die shim von LFunctionType.LFunctionType() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType.ParseStreamBHeader">
            <summary>Legt die shim von LFunctionType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType.StaticConstructor">
            <summary>Legt die shim von LFunctionType.LFunctionType() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType.AllInstances.ParseStreamBHeader">
            <summary>Legt die shim von LFunctionType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType52">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType52</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType52.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType52.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType52)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType52.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType52.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType52.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType52.Constructor">
            <summary>Legt die shim von LFunctionType52.LFunctionType52() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLFunctionType52.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LInstruction</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LInstruction)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.AGet">
            <summary>Legt die shim von LInstruction.get_A() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.ASetInt32">
            <summary>Legt die shim von LInstruction.set_A(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.BGet">
            <summary>Legt die shim von LInstruction.get_B() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.BSetInt32">
            <summary>Legt die shim von LInstruction.set_B(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.BxGet">
            <summary>Legt die shim von LInstruction.get_Bx() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.BxSetInt32">
            <summary>Legt die shim von LInstruction.set_Bx(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.CGet">
            <summary>Legt die shim von LInstruction.get_C() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.CSetInt32">
            <summary>Legt die shim von LInstruction.set_C(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.ConstructorInt32">
            <summary>Legt die shim von LInstruction.LInstruction(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.ConstructorOpInt32Int32">
            <summary>Legt die shim von LInstruction.LInstruction(Op op, Int32 a, Int32 bx) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.ConstructorOpInt32Int32Int32">
            <summary>Legt die shim von LInstruction.LInstruction(Op op, Int32 a, Int32 b, Int32 c) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.CreateABCOpInt32Int32Int32">
            <summary>Legt die shim von LInstruction.CreateABC(Op op, Int32 a, Int32 b, Int32 c) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.CreateABxOpInt32Int32">
            <summary>Legt die shim von LInstruction.CreateABx(Op op, Int32 a, Int32 bx) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.GetArgAInt32">
            <summary>Legt die shim von LInstruction.GetArgA(Int32 codePoint) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.GetArgBInt32">
            <summary>Legt die shim von LInstruction.GetArgB(Int32 codePoint) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.GetArgBxInt32">
            <summary>Legt die shim von LInstruction.GetArgBx(Int32 codePoint) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.GetArgCInt32">
            <summary>Legt die shim von LInstruction.GetArgC(Int32 codePoint) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.GetArgsBXInt32">
            <summary>Legt die shim von LInstruction.GetArgsBX(Int32 codePoint) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.GetOpCodeInt32">
            <summary>Legt die shim von LInstruction.GetOpCode(Int32 codePoint) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.INDEXKInt32">
            <summary>Legt die shim von LInstruction.INDEXK(Int32 r) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.ISKInt32">
            <summary>Legt die shim von LInstruction.ISK(Int32 x) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.ImplicitOpInt32LInstruction">
            <summary>Legt die shim von LInstruction.op_Implicit(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.ImplicitOpLInstructionInt32">
            <summary>Legt die shim von LInstruction.op_Implicit(LInstruction value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.MASK0Int32Int32">
            <summary>Legt die shim von LInstruction.MASK0(Int32 n, Int32 p) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.MASK1Int32Int32">
            <summary>Legt die shim von LInstruction.MASK1(Int32 n, Int32 p) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.OpGet">
            <summary>Legt die shim von LInstruction.get_Op() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.OpSetOp">
            <summary>Legt die shim von LInstruction.set_Op(Op value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.StaticConstructor">
            <summary>Legt die shim von LInstruction.LInstruction() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.sBxGet">
            <summary>Legt die shim von LInstruction.get_sBx() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.sBxSetInt32">
            <summary>Legt die shim von LInstruction.set_sBx(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.AllInstances.AGet">
            <summary>Legt die shim von LInstruction.get_A() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.AllInstances.ASetInt32">
            <summary>Legt die shim von LInstruction.set_A(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.AllInstances.BGet">
            <summary>Legt die shim von LInstruction.get_B() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.AllInstances.BSetInt32">
            <summary>Legt die shim von LInstruction.set_B(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.AllInstances.BxGet">
            <summary>Legt die shim von LInstruction.get_Bx() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.AllInstances.BxSetInt32">
            <summary>Legt die shim von LInstruction.set_Bx(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.AllInstances.CGet">
            <summary>Legt die shim von LInstruction.get_C() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.AllInstances.CSetInt32">
            <summary>Legt die shim von LInstruction.set_C(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.AllInstances.OpGet">
            <summary>Legt die shim von LInstruction.get_Op() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.AllInstances.OpSetOp">
            <summary>Legt die shim von LInstruction.set_Op(Op value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.AllInstances.sBxGet">
            <summary>Legt die shim von LInstruction.get_sBx() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLInstruction.AllInstances.sBxSetInt32">
            <summary>Legt die shim von LInstruction.set_sBx(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LIntNumber</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LIntNumber)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.ConstructorInt32">
            <summary>Legt die shim von LIntNumber.LIntNumber(Int32 number) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.EqualsObject">
            <summary>Legt die shim von LIntNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.NumberGet">
            <summary>Legt die shim von LIntNumber.get_Number() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.NumberSetInt32">
            <summary>Legt die shim von LIntNumber.set_Number(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.ToString">
            <summary>Legt die shim von LIntNumber.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.ValueGet">
            <summary>Legt die shim von LIntNumber.get_Value() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.AllInstances.EqualsObject">
            <summary>Legt die shim von LIntNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.AllInstances.NumberGet">
            <summary>Legt die shim von LIntNumber.get_Number() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.AllInstances.NumberSetInt32">
            <summary>Legt die shim von LIntNumber.set_Number(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.AllInstances.ToString01">
            <summary>Legt die shim von LIntNumber.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLIntNumber.AllInstances.ValueGet">
            <summary>Legt die shim von LIntNumber.get_Value() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LLocal</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LLocal)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.ConstructorLStringBIntegerBInteger">
            <summary>Legt die shim von LLocal.LLocal(LString name, BInteger start, BInteger end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.EndGet">
            <summary>Legt die shim von LLocal.get_End() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.EndSetInt32">
            <summary>Legt die shim von LLocal.set_End(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.ForLoopGet">
            <summary>Legt die shim von LLocal.get_ForLoop() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.ForLoopSetBoolean">
            <summary>Legt die shim von LLocal.set_ForLoop(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.NameGet">
            <summary>Legt die shim von LLocal.get_Name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.NameSetLString">
            <summary>Legt die shim von LLocal.set_Name(LString value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.StartGet">
            <summary>Legt die shim von LLocal.get_Start() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.StartSetInt32">
            <summary>Legt die shim von LLocal.set_Start(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.ToString">
            <summary>Legt die shim von LLocal.ToString() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.AllInstances.EndGet">
            <summary>Legt die shim von LLocal.get_End() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.AllInstances.EndSetInt32">
            <summary>Legt die shim von LLocal.set_End(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.AllInstances.ForLoopGet">
            <summary>Legt die shim von LLocal.get_ForLoop() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.AllInstances.ForLoopSetBoolean">
            <summary>Legt die shim von LLocal.set_ForLoop(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.AllInstances.NameGet">
            <summary>Legt die shim von LLocal.get_Name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.AllInstances.NameSetLString">
            <summary>Legt die shim von LLocal.set_Name(LString value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.AllInstances.StartGet">
            <summary>Legt die shim von LLocal.get_Start() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.AllInstances.StartSetInt32">
            <summary>Legt die shim von LLocal.set_Start(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocal.AllInstances.ToString01">
            <summary>Legt die shim von LLocal.ToString() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocalType">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LLocalType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocalType.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocalType.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LLocalType)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocalType.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocalType.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocalType.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocalType.Constructor">
            <summary>Legt die shim von LLocalType.LLocalType() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocalType.ParseStreamBHeader">
            <summary>Legt die shim von LLocalType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocalType.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLocalType.AllInstances.ParseStreamBHeader">
            <summary>Legt die shim von LLocalType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LLongNumber</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LLongNumber)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.ConstructorInt64">
            <summary>Legt die shim von LLongNumber.LLongNumber(Int64 number) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.EqualsObject">
            <summary>Legt die shim von LLongNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.NumberGet">
            <summary>Legt die shim von LLongNumber.get_Number() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.NumberSetInt64">
            <summary>Legt die shim von LLongNumber.set_Number(Int64 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.ToString">
            <summary>Legt die shim von LLongNumber.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.ValueGet">
            <summary>Legt die shim von LLongNumber.get_Value() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.AllInstances.EqualsObject">
            <summary>Legt die shim von LLongNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.AllInstances.NumberGet">
            <summary>Legt die shim von LLongNumber.get_Number() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.AllInstances.NumberSetInt64">
            <summary>Legt die shim von LLongNumber.set_Number(Int64 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.AllInstances.ToString01">
            <summary>Legt die shim von LLongNumber.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLLongNumber.AllInstances.ValueGet">
            <summary>Legt die shim von LLongNumber.get_Value() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNil">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LNil</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNil.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNil.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LNil)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNil.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNil.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNil.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNil.Constructor">
            <summary>Legt die shim von LNil.LNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNil.EqualsObject">
            <summary>Legt die shim von LNil.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNil.StaticConstructor">
            <summary>Legt die shim von LNil.LNil() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNil.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNil.AllInstances.EqualsObject">
            <summary>Legt die shim von LNil.Equals(Object obj) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumber">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LNumber</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumber.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LNumber)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumber.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumber.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumber.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumber.Constructor">
            <summary>Legt die shim von LNumber.LNumber() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumber.EqualsObject">
            <summary>Legt die shim von LNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumber.MakeIntegerInt32">
            <summary>Legt die shim von LNumber.MakeInteger(Int32 number) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumber.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumber.AllInstances.EqualsObject">
            <summary>Legt die shim von LNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LNumberType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LNumberType)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.ConstructorInt32Boolean">
            <summary>Legt die shim von LNumberType.LNumberType(Int32 size, Boolean integral) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.IntegralGet">
            <summary>Legt die shim von LNumberType.get_Integral() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.IntegralSetBoolean">
            <summary>Legt die shim von LNumberType.set_Integral(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.ParseStreamBHeader">
            <summary>Legt die shim von LNumberType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.SizeGet">
            <summary>Legt die shim von LNumberType.get_Size() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.SizeSetInt32">
            <summary>Legt die shim von LNumberType.set_Size(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.AllInstances.IntegralGet">
            <summary>Legt die shim von LNumberType.get_Integral() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.AllInstances.IntegralSetBoolean">
            <summary>Legt die shim von LNumberType.set_Integral(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.AllInstances.ParseStreamBHeader">
            <summary>Legt die shim von LNumberType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.AllInstances.SizeGet">
            <summary>Legt die shim von LNumberType.get_Size() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLNumberType.AllInstances.SizeSetInt32">
            <summary>Legt die shim von LNumberType.set_Size(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLObject">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LObject</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLObject.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LObject)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLObject.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLObject.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLObject.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLObject.Constructor">
            <summary>Legt die shim von LObject.LObject() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLObject.DeRef">
            <summary>Legt die shim von LObject.DeRef() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLObject.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLObject.AllInstances.DeRef">
            <summary>Legt die shim von LObject.DeRef() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLSourceLines">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LSourceLines</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLSourceLines.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLSourceLines.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LSourceLines)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLSourceLines.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLSourceLines.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLSourceLines.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLSourceLines.Constructor">
            <summary>Legt die shim von LSourceLines.LSourceLines() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLSourceLines.ParseStream">
            <summary>Legt die shim von LSourceLines.Parse(Stream stream) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLSourceLines.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LString</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LString)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.ConstructorBSizeTString">
            <summary>Legt die shim von LString.LString(BSizeT size, String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.DeRef">
            <summary>Legt die shim von LString.DeRef() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.EqualsObject">
            <summary>Legt die shim von LString.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.SizeGet">
            <summary>Legt die shim von LString.get_Size() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.SizeSetBSizeT">
            <summary>Legt die shim von LString.set_Size(BSizeT value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.ToString">
            <summary>Legt die shim von LString.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.ValueGet">
            <summary>Legt die shim von LString.get_Value() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.ValueSetString">
            <summary>Legt die shim von LString.set_Value(String value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.AllInstances.DeRef">
            <summary>Legt die shim von LString.DeRef() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.AllInstances.EqualsObject">
            <summary>Legt die shim von LString.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.AllInstances.SizeGet">
            <summary>Legt die shim von LString.get_Size() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.AllInstances.SizeSetBSizeT">
            <summary>Legt die shim von LString.set_Size(BSizeT value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.AllInstances.ToString01">
            <summary>Legt die shim von LString.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.AllInstances.ValueGet">
            <summary>Legt die shim von LString.get_Value() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLString.AllInstances.ValueSetString">
            <summary>Legt die shim von LString.set_Value(String value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLStringType">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LStringType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLStringType.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLStringType.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LStringType)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLStringType.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLStringType.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLStringType.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLStringType.Constructor">
            <summary>Legt die shim von LStringType.LStringType() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLStringType.ParseStreamBHeader">
            <summary>Legt die shim von LStringType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLStringType.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLStringType.AllInstances.ParseStreamBHeader">
            <summary>Legt die shim von LStringType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LTNode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LTNode)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.AsExpressionRegisters">
            <summary>Legt die shim von LTNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.ConstructorInt32Int32BooleanInt32Int32Int32">
            <summary>Legt die shim von LTNode.LTNode(Int32 left, Int32 right, Boolean invert, Int32 line, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.GetRegister">
            <summary>Legt die shim von LTNode.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.Invert">
            <summary>Legt die shim von LTNode.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.UseExpressionExpression">
            <summary>Legt die shim von LTNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.AllInstances.AsExpressionRegisters">
            <summary>Legt die shim von LTNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.AllInstances.GetRegister">
            <summary>Legt die shim von LTNode.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.AllInstances.Invert">
            <summary>Legt die shim von LTNode.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLTNode.AllInstances.UseExpressionExpression">
            <summary>Legt die shim von LTNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LUpvalue</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LUpvalue)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.Constructor">
            <summary>Legt die shim von LUpvalue.LUpvalue() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.EqualsObject">
            <summary>Legt die shim von LUpvalue.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.InStackGet">
            <summary>Legt die shim von LUpvalue.get_InStack() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.InStackSetBoolean">
            <summary>Legt die shim von LUpvalue.set_InStack(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.IndexGet">
            <summary>Legt die shim von LUpvalue.get_Index() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.IndexSetInt32">
            <summary>Legt die shim von LUpvalue.set_Index(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.NameGet">
            <summary>Legt die shim von LUpvalue.get_Name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.NameSetString">
            <summary>Legt die shim von LUpvalue.set_Name(String value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.AllInstances.EqualsObject">
            <summary>Legt die shim von LUpvalue.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.AllInstances.InStackGet">
            <summary>Legt die shim von LUpvalue.get_InStack() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.AllInstances.InStackSetBoolean">
            <summary>Legt die shim von LUpvalue.set_InStack(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.AllInstances.IndexGet">
            <summary>Legt die shim von LUpvalue.get_Index() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.AllInstances.IndexSetInt32">
            <summary>Legt die shim von LUpvalue.set_Index(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.AllInstances.NameGet">
            <summary>Legt die shim von LUpvalue.get_Name() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalue.AllInstances.NameSetString">
            <summary>Legt die shim von LUpvalue.set_Name(String value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalueType">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LUpvalueType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalueType.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalueType.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LUpvalueType)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalueType.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalueType.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalueType.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalueType.Constructor">
            <summary>Legt die shim von LUpvalueType.LUpvalueType() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalueType.ParseStreamBHeader">
            <summary>Legt die shim von LUpvalueType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalueType.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLUpvalueType.AllInstances.ParseStreamBHeader">
            <summary>Legt die shim von LUpvalueType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLambdaOperation">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LambdaOperation</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLambdaOperation.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLambdaOperation.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LambdaOperation)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLambdaOperation.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLambdaOperation.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLambdaOperation.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLambdaOperation.ConstructorInt32FuncOfRegistersBlockStatement">
            <summary>Legt die shim von LambdaOperation.LambdaOperation(Int32 line, Func`3&lt;Registers,Block,Statement&gt; func) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLambdaOperation.ProcessRegistersBlock">
            <summary>Legt die shim von LambdaOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLambdaOperation.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLambdaOperation.AllInstances.ProcessRegistersBlock">
            <summary>Legt die shim von LambdaOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LocalVariable</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LocalVariable)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.ConstantIndexGet">
            <summary>Legt die shim von LocalVariable.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.ConstructorDeclaration">
            <summary>Legt die shim von LocalVariable.LocalVariable(Declaration decl) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.IsBriefGet">
            <summary>Legt die shim von LocalVariable.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.IsDotChainGet">
            <summary>Legt die shim von LocalVariable.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.PrintOutput">
            <summary>Legt die shim von LocalVariable.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.AllInstances.ConstantIndexGet">
            <summary>Legt die shim von LocalVariable.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.AllInstances.IsBriefGet">
            <summary>Legt die shim von LocalVariable.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.AllInstances.IsDotChainGet">
            <summary>Legt die shim von LocalVariable.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLocalVariable.AllInstances.PrintOutput">
            <summary>Legt die shim von LocalVariable.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLua_Version">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Lua_Version</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLua_Version.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Lua_Version)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLua_Version.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLua_Version.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLua_Version.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLua_Version.ConstructorInt32">
            <summary>Legt die shim von Lua_Version.Lua_Version(Int32 versionNumber) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLua_Version.GetOpcodeMap">
            <summary>Legt die shim von Lua_Version.GetOpcodeMap() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLua_Version.StaticConstructor">
            <summary>Legt die shim von Lua_Version.Lua_Version() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLua_Version.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimLua_Version.AllInstances.GetOpcodeMap">
            <summary>Legt die shim von Lua_Version.GetOpcodeMap() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.NotBranch</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.NotBranch)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.AsExpressionRegisters">
            <summary>Legt die shim von NotBranch.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.ConstructorBranch">
            <summary>Legt die shim von NotBranch.NotBranch(Branch branch) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.GetRegister">
            <summary>Legt die shim von NotBranch.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.Invert">
            <summary>Legt die shim von NotBranch.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.UseExpressionExpression">
            <summary>Legt die shim von NotBranch.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.AllInstances.AsExpressionRegisters">
            <summary>Legt die shim von NotBranch.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.AllInstances.GetRegister">
            <summary>Legt die shim von NotBranch.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.AllInstances.Invert">
            <summary>Legt die shim von NotBranch.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimNotBranch.AllInstances.UseExpressionExpression">
            <summary>Legt die shim von NotBranch.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcode">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Opcode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcode.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcode.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Opcode)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcode.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcode.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcode.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcode.CodePointToStringOpLInstruction">
            <summary>Legt die shim von Opcode.CodePointToString(Op opcode, LInstruction code) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcode.Constructor">
            <summary>Legt die shim von Opcode.Opcode() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcode.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.OpcodeMap</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.OpcodeMap)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.ConstructorInt32">
            <summary>Legt die shim von OpcodeMap.OpcodeMap(Int32 version) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.GetBModeInt32">
            <summary>Legt die shim von OpcodeMap.GetBMode(Int32 m) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.GetCModeInt32">
            <summary>Legt die shim von OpcodeMap.GetCMode(Int32 m) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.GetOpInt32">
            <summary>Legt die shim von OpcodeMap.GetOp(Int32 opcode) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.GetOpModeInt32">
            <summary>Legt die shim von OpcodeMap.GetOpMode(Int32 m) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.ItemGetInt32">
            <summary>Legt die shim von OpcodeMap.get_Item(Int32 opcode) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.TestAModeInt32">
            <summary>Legt die shim von OpcodeMap.TestAMode(Int32 m) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.TestTModeInt32">
            <summary>Legt die shim von OpcodeMap.TestTMode(Int32 m) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.opmodeByteByteOpArgMaskOpArgMaskOpMode">
            <summary>Legt die shim von OpcodeMap.opmode(Byte T, Byte A, OpArgMask B, OpArgMask C, OpMode M) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.AllInstances.GetBModeInt32">
            <summary>Legt die shim von OpcodeMap.GetBMode(Int32 m) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.AllInstances.GetCModeInt32">
            <summary>Legt die shim von OpcodeMap.GetCMode(Int32 m) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.AllInstances.GetOpInt32">
            <summary>Legt die shim von OpcodeMap.GetOp(Int32 opcode) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.AllInstances.GetOpModeInt32">
            <summary>Legt die shim von OpcodeMap.GetOpMode(Int32 m) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.AllInstances.ItemGetInt32">
            <summary>Legt die shim von OpcodeMap.get_Item(Int32 opcode) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.AllInstances.TestAModeInt32">
            <summary>Legt die shim von OpcodeMap.TestAMode(Int32 m) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOpcodeMap.AllInstances.TestTModeInt32">
            <summary>Legt die shim von OpcodeMap.TestTMode(Int32 m) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOperation">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Operation</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOperation.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Operation)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOperation.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOperation.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOperation.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOperation.ConstructorInt32">
            <summary>Legt die shim von Operation.Operation(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOperation.LineGet">
            <summary>Legt die shim von Operation.get_Line() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOperation.LineSetInt32">
            <summary>Legt die shim von Operation.set_Line(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOperation.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOperation.AllInstances.LineGet">
            <summary>Legt die shim von Operation.get_Line() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOperation.AllInstances.LineSetInt32">
            <summary>Legt die shim von Operation.set_Line(Int32 value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.OrBranch</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.OrBranch)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.AsExpressionRegisters">
            <summary>Legt die shim von OrBranch.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.ConstructorBranchBranch">
            <summary>Legt die shim von OrBranch.OrBranch(Branch left, Branch right) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.GetRegister">
            <summary>Legt die shim von OrBranch.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.Invert">
            <summary>Legt die shim von OrBranch.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.UseExpressionExpression">
            <summary>Legt die shim von OrBranch.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.AllInstances.AsExpressionRegisters">
            <summary>Legt die shim von OrBranch.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.AllInstances.GetRegister">
            <summary>Legt die shim von OrBranch.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.AllInstances.Invert">
            <summary>Legt die shim von OrBranch.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOrBranch.AllInstances.UseExpressionExpression">
            <summary>Legt die shim von OrBranch.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.OuterBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.OuterBlock)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.AddStatementStatement">
            <summary>Legt die shim von OuterBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.BreakableGet">
            <summary>Legt die shim von OuterBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.ConstructorLFunctionInt32">
            <summary>Legt die shim von OuterBlock.OuterBlock(LFunction function, Int32 length) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.GetLoopback">
            <summary>Legt die shim von OuterBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.IsContainerGet">
            <summary>Legt die shim von OuterBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.IsUnprotectedGet">
            <summary>Legt die shim von OuterBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.PrintOutput">
            <summary>Legt die shim von OuterBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.ScopeEndGet">
            <summary>Legt die shim von OuterBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.AllInstances.AddStatementStatement">
            <summary>Legt die shim von OuterBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.AllInstances.BreakableGet">
            <summary>Legt die shim von OuterBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.AllInstances.GetLoopback">
            <summary>Legt die shim von OuterBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.AllInstances.IsContainerGet">
            <summary>Legt die shim von OuterBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.AllInstances.IsUnprotectedGet">
            <summary>Legt die shim von OuterBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.AllInstances.PrintOutput">
            <summary>Legt die shim von OuterBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOuterBlock.AllInstances.ScopeEndGet">
            <summary>Legt die shim von OuterBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Output</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.Constructor">
            <summary>Legt die shim von Output.Output() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.ConstructorTextWriter">
            <summary>Legt die shim von Output.Output(TextWriter writer) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.DecreaseIndent">
            <summary>Legt die shim von Output.DecreaseIndent() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.IncreaseIndent">
            <summary>Legt die shim von Output.IncreaseIndent() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.IndentationLevelGet">
            <summary>Legt die shim von Output.get_IndentationLevel() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.IndentationLevelSetInt32">
            <summary>Legt die shim von Output.set_IndentationLevel(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.PositionGet">
            <summary>Legt die shim von Output.get_Position() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.PrintLine">
            <summary>Legt die shim von Output.PrintLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.PrintLineString">
            <summary>Legt die shim von Output.PrintLine(String str) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.PrintString">
            <summary>Legt die shim von Output.Print(String str) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.Start">
            <summary>Legt die shim von Output.Start() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.AllInstances.DecreaseIndent">
            <summary>Legt die shim von Output.DecreaseIndent() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.AllInstances.IncreaseIndent">
            <summary>Legt die shim von Output.IncreaseIndent() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.AllInstances.IndentationLevelGet">
            <summary>Legt die shim von Output.get_IndentationLevel() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.AllInstances.IndentationLevelSetInt32">
            <summary>Legt die shim von Output.set_IndentationLevel(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.AllInstances.PositionGet">
            <summary>Legt die shim von Output.get_Position() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.AllInstances.PrintLine">
            <summary>Legt die shim von Output.PrintLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.AllInstances.PrintLineString">
            <summary>Legt die shim von Output.PrintLine(String str) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.AllInstances.PrintString">
            <summary>Legt die shim von Output.Print(String str) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimOutput.AllInstances.Start">
            <summary>Legt die shim von Output.Start() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.RegisterSet</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.RegisterSet)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.ConstructorInt32Int32Expression">
            <summary>Legt die shim von RegisterSet.RegisterSet(Int32 line, Int32 register, Expression value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.ProcessRegistersBlock">
            <summary>Legt die shim von RegisterSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.RegisterGet">
            <summary>Legt die shim von RegisterSet.get_Register() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.RegisterSetInt32">
            <summary>Legt die shim von RegisterSet.set_Register(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.ValueGet">
            <summary>Legt die shim von RegisterSet.get_Value() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.ValueSetExpression">
            <summary>Legt die shim von RegisterSet.set_Value(Expression value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.AllInstances.ProcessRegistersBlock">
            <summary>Legt die shim von RegisterSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.AllInstances.RegisterGet">
            <summary>Legt die shim von RegisterSet.get_Register() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.AllInstances.RegisterSetInt32">
            <summary>Legt die shim von RegisterSet.set_Register(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.AllInstances.ValueGet">
            <summary>Legt die shim von RegisterSet.get_Value() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisterSet.AllInstances.ValueSetExpression">
            <summary>Legt die shim von RegisterSet.set_Value(Expression value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Registers</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.ConstructorInt32Int32DeclarationArrayFunction">
            <summary>Legt die shim von Registers.Registers(Int32 registers, Int32 length, Declaration[] declList, Function func) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.GetDeclarationInt32Int32">
            <summary>Legt die shim von Registers.GetDeclaration(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.GetExpressionInt32Int32">
            <summary>Legt die shim von Registers.GetExpression(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.GetKExpressionInt32Int32">
            <summary>Legt die shim von Registers.GetKExpression(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.GetNewLocalsInt32">
            <summary>Legt die shim von Registers.GetNewLocals(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.GetTargetInt32Int32">
            <summary>Legt die shim von Registers.GetTarget(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.GetUpdatedInt32Int32">
            <summary>Legt die shim von Registers.GetUpdated(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.GetValueInt32Int32">
            <summary>Legt die shim von Registers.GetValue(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.IsAssignableInt32Int32">
            <summary>Legt die shim von Registers.IsAssignable(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.IsLocalInt32Int32">
            <summary>Legt die shim von Registers.IsLocal(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.IsNewLocalInt32Int32">
            <summary>Legt die shim von Registers.IsNewLocal(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.LengthGet">
            <summary>Legt die shim von Registers.get_Length() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.LengthSetInt32">
            <summary>Legt die shim von Registers.set_Length(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.NewDeclarationDeclarationInt32Int32Int32">
            <summary>Legt die shim von Registers.NewDeclaration(Declaration decl, Int32 register, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.NumRegistersGet">
            <summary>Legt die shim von Registers.get_NumRegisters() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.NumRegistersSetInt32">
            <summary>Legt die shim von Registers.set_NumRegisters(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.SetExplicitLoopVariableInt32Int32Int32">
            <summary>Legt die shim von Registers.SetExplicitLoopVariable(Int32 register, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.SetInternalLoopVariableInt32Int32Int32">
            <summary>Legt die shim von Registers.SetInternalLoopVariable(Int32 register, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.SetValueInt32Int32Expression">
            <summary>Legt die shim von Registers.SetValue(Int32 register, Int32 line, Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.StartLineInt32">
            <summary>Legt die shim von Registers.StartLine(Int32 line) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.GetDeclarationInt32Int32">
            <summary>Legt die shim von Registers.GetDeclaration(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.GetExpressionInt32Int32">
            <summary>Legt die shim von Registers.GetExpression(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.GetKExpressionInt32Int32">
            <summary>Legt die shim von Registers.GetKExpression(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.GetNewLocalsInt32">
            <summary>Legt die shim von Registers.GetNewLocals(Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.GetTargetInt32Int32">
            <summary>Legt die shim von Registers.GetTarget(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.GetUpdatedInt32Int32">
            <summary>Legt die shim von Registers.GetUpdated(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.GetValueInt32Int32">
            <summary>Legt die shim von Registers.GetValue(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.IsAssignableInt32Int32">
            <summary>Legt die shim von Registers.IsAssignable(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.IsLocalInt32Int32">
            <summary>Legt die shim von Registers.IsLocal(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.IsNewLocalInt32Int32">
            <summary>Legt die shim von Registers.IsNewLocal(Int32 register, Int32 line) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.LengthGet">
            <summary>Legt die shim von Registers.get_Length() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.LengthSetInt32">
            <summary>Legt die shim von Registers.set_Length(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.NewDeclarationDeclarationInt32Int32Int32">
            <summary>Legt die shim von Registers.NewDeclaration(Declaration decl, Int32 register, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.NumRegistersGet">
            <summary>Legt die shim von Registers.get_NumRegisters() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.NumRegistersSetInt32">
            <summary>Legt die shim von Registers.set_NumRegisters(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.SetExplicitLoopVariableInt32Int32Int32">
            <summary>Legt die shim von Registers.SetExplicitLoopVariable(Int32 register, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.SetInternalLoopVariableInt32Int32Int32">
            <summary>Legt die shim von Registers.SetInternalLoopVariable(Int32 register, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.SetValueInt32Int32Expression">
            <summary>Legt die shim von Registers.SetValue(Int32 register, Int32 line, Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRegisters.AllInstances.StartLineInt32">
            <summary>Legt die shim von Registers.StartLine(Int32 line) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.RepeatBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.RepeatBlock)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.AddStatementStatement">
            <summary>Legt die shim von RepeatBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.BreakableGet">
            <summary>Legt die shim von RepeatBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.ConstructorLFunctionBranchRegisters">
            <summary>Legt die shim von RepeatBlock.RepeatBlock(LFunction function, Branch branch, Registers r) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.GetLoopback">
            <summary>Legt die shim von RepeatBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.IsContainerGet">
            <summary>Legt die shim von RepeatBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.IsUnprotectedGet">
            <summary>Legt die shim von RepeatBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.PrintOutput">
            <summary>Legt die shim von RepeatBlock.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.AllInstances.AddStatementStatement">
            <summary>Legt die shim von RepeatBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.AllInstances.BreakableGet">
            <summary>Legt die shim von RepeatBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.AllInstances.GetLoopback">
            <summary>Legt die shim von RepeatBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.AllInstances.IsContainerGet">
            <summary>Legt die shim von RepeatBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.AllInstances.IsUnprotectedGet">
            <summary>Legt die shim von RepeatBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimRepeatBlock.AllInstances.PrintOutput">
            <summary>Legt die shim von RepeatBlock.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturn">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Return</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturn.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturn.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Return)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturn.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturn.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturn.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturn.Constructor">
            <summary>Legt die shim von Return.Return() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturn.ConstructorExpression">
            <summary>Legt die shim von Return.Return(Expression value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturn.ConstructorExpressionArray">
            <summary>Legt die shim von Return.Return(Expression[] values) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturn.PrintOutput">
            <summary>Legt die shim von Return.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturn.PrintTailOutput">
            <summary>Legt die shim von Return.PrintTail(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturn.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturn.AllInstances.PrintOutput">
            <summary>Legt die shim von Return.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturn.AllInstances.PrintTailOutput">
            <summary>Legt die shim von Return.PrintTail(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturnOperation">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.ReturnOperation</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturnOperation.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturnOperation.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.ReturnOperation)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturnOperation.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturnOperation.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturnOperation.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturnOperation.ConstructorInt32Expression">
            <summary>Legt die shim von ReturnOperation.ReturnOperation(Int32 line, Expression value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturnOperation.ConstructorInt32ExpressionArray">
            <summary>Legt die shim von ReturnOperation.ReturnOperation(Int32 line, Expression[] values) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturnOperation.ProcessRegistersBlock">
            <summary>Legt die shim von ReturnOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturnOperation.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimReturnOperation.AllInstances.ProcessRegistersBlock">
            <summary>Legt die shim von ReturnOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.SetBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.SetBlock)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AddStatementStatement">
            <summary>Legt die shim von SetBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.BranchGet">
            <summary>Legt die shim von SetBlock.get_Branch() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.BranchSetBranch">
            <summary>Legt die shim von SetBlock.set_Branch(Branch value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.BreakableGet">
            <summary>Legt die shim von SetBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.ConstructorLFunctionBranchInt32Int32Int32Int32BooleanRegisters">
            <summary>Legt die shim von SetBlock.SetBlock(LFunction function, Branch branch, Int32 target, Int32 line, Int32 begin, Int32 end, Boolean empty, Registers r) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.GetLoopback">
            <summary>Legt die shim von SetBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.GetValue">
            <summary>Legt die shim von SetBlock.GetValue() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.IsContainerGet">
            <summary>Legt die shim von SetBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.IsUnprotectedGet">
            <summary>Legt die shim von SetBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.PrintOutput">
            <summary>Legt die shim von SetBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.ProcessDecompiler">
            <summary>Legt die shim von SetBlock.Process(Decompiler d) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.TargetGet">
            <summary>Legt die shim von SetBlock.get_Target() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.TargetSetInt32">
            <summary>Legt die shim von SetBlock.set_Target(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.UseAssignmentAssignment">
            <summary>Legt die shim von SetBlock.UseAssignment(Assignment assignment) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AllInstances.AddStatementStatement">
            <summary>Legt die shim von SetBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AllInstances.BranchGet">
            <summary>Legt die shim von SetBlock.get_Branch() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AllInstances.BranchSetBranch">
            <summary>Legt die shim von SetBlock.set_Branch(Branch value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AllInstances.BreakableGet">
            <summary>Legt die shim von SetBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AllInstances.GetLoopback">
            <summary>Legt die shim von SetBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AllInstances.GetValue">
            <summary>Legt die shim von SetBlock.GetValue() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AllInstances.IsContainerGet">
            <summary>Legt die shim von SetBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AllInstances.IsUnprotectedGet">
            <summary>Legt die shim von SetBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AllInstances.PrintOutput">
            <summary>Legt die shim von SetBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AllInstances.ProcessDecompiler">
            <summary>Legt die shim von SetBlock.Process(Decompiler d) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AllInstances.TargetGet">
            <summary>Legt die shim von SetBlock.get_Target() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AllInstances.TargetSetInt32">
            <summary>Legt die shim von SetBlock.set_Target(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimSetBlock.AllInstances.UseAssignmentAssignment">
            <summary>Legt die shim von SetBlock.UseAssignment(Assignment assignment) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Statement</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.BeginsWithParenGet">
            <summary>Legt die shim von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.CommentGet">
            <summary>Legt die shim von Statement.get_Comment() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.CommentSetString">
            <summary>Legt die shim von Statement.set_Comment(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.Constructor">
            <summary>Legt die shim von Statement.Statement() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.PrintSequenceOutputListOfStatement">
            <summary>Legt die shim von Statement.PrintSequence(Output output, List`1&lt;Statement&gt; statements) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.PrintTailOutput">
            <summary>Legt die shim von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.AllInstances.BeginsWithParenGet">
            <summary>Legt die shim von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.AllInstances.CommentGet">
            <summary>Legt die shim von Statement.get_Comment() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.AllInstances.CommentSetString">
            <summary>Legt die shim von Statement.set_Comment(String value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimStatement.AllInstances.PrintTailOutput">
            <summary>Legt die shim von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TForBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.TForBlock)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.AddStatementStatement">
            <summary>Legt die shim von TForBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.BreakableGet">
            <summary>Legt die shim von TForBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.ConstructorLFunctionInt32Int32Int32Int32Registers">
            <summary>Legt die shim von TForBlock.TForBlock(LFunction function, Int32 begin, Int32 end, Int32 register, Int32 length, Registers r) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.GetLoopback">
            <summary>Legt die shim von TForBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.IsContainerGet">
            <summary>Legt die shim von TForBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.IsUnprotectedGet">
            <summary>Legt die shim von TForBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.PrintOutput">
            <summary>Legt die shim von TForBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.ScopeEndGet">
            <summary>Legt die shim von TForBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.AllInstances.AddStatementStatement">
            <summary>Legt die shim von TForBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.AllInstances.BreakableGet">
            <summary>Legt die shim von TForBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.AllInstances.GetLoopback">
            <summary>Legt die shim von TForBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.AllInstances.IsContainerGet">
            <summary>Legt die shim von TForBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.AllInstances.IsUnprotectedGet">
            <summary>Legt die shim von TForBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.AllInstances.PrintOutput">
            <summary>Legt die shim von TForBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTForBlock.AllInstances.ScopeEndGet">
            <summary>Legt die shim von TForBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.AddEntryTableLiteralEntry">
            <summary>Legt die shim von TableLiteral.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ConstantIndexGet">
            <summary>Legt die shim von TableLiteral.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ConstructorInt32Int32">
            <summary>Legt die shim von TableLiteral.TableLiteral(Int32 arraySize, Int32 hashSize) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.IsBriefGet">
            <summary>Legt die shim von TableLiteral.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.IsNewEntryAllowedGet">
            <summary>Legt die shim von TableLiteral.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.IsTableLiteralGet">
            <summary>Legt die shim von TableLiteral.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.PrintEntryInt32Output">
            <summary>Legt die shim von TableLiteral.PrintEntry(Int32 index, Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.PrintOutput">
            <summary>Legt die shim von TableLiteral.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.AllInstances.AddEntryTableLiteralEntry">
            <summary>Legt die shim von TableLiteral.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.AllInstances.ConstantIndexGet">
            <summary>Legt die shim von TableLiteral.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.AllInstances.IsBriefGet">
            <summary>Legt die shim von TableLiteral.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.AllInstances.IsNewEntryAllowedGet">
            <summary>Legt die shim von TableLiteral.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.AllInstances.IsTableLiteralGet">
            <summary>Legt die shim von TableLiteral.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.AllInstances.PrintEntryInt32Output">
            <summary>Legt die shim von TableLiteral.PrintEntry(Int32 index, Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.AllInstances.PrintOutput">
            <summary>Legt die shim von TableLiteral.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral+Entry</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral.Entry)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral.Entry})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.CompareToTableLiteralEntry">
            <summary>Legt die shim von Entry.CompareTo(Entry e) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.ConstructorExpressionExpressionBooleanInt32">
            <summary>Legt die shim von Entry.Entry(Expression key, Expression value, Boolean isList, Int32 timestamp) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.IsListGet">
            <summary>Legt die shim von Entry.get_IsList() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.IsListSetBoolean">
            <summary>Legt die shim von Entry.set_IsList(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.KeyGet">
            <summary>Legt die shim von Entry.get_Key() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.KeySetExpression">
            <summary>Legt die shim von Entry.set_Key(Expression value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.TimestampGet">
            <summary>Legt die shim von Entry.get_Timestamp() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.TimestampSetInt32">
            <summary>Legt die shim von Entry.set_Timestamp(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.ValueGet">
            <summary>Legt die shim von Entry.get_Value() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.ValueSetExpression">
            <summary>Legt die shim von Entry.set_Value(Expression value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.AllInstances.CompareToTableLiteralEntry">
            <summary>Legt die shim von Entry.CompareTo(Entry e) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.AllInstances.IsListGet">
            <summary>Legt die shim von Entry.get_IsList() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.AllInstances.IsListSetBoolean">
            <summary>Legt die shim von Entry.set_IsList(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.AllInstances.KeyGet">
            <summary>Legt die shim von Entry.get_Key() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.AllInstances.KeySetExpression">
            <summary>Legt die shim von Entry.set_Key(Expression value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.AllInstances.TimestampGet">
            <summary>Legt die shim von Entry.get_Timestamp() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.AllInstances.TimestampSetInt32">
            <summary>Legt die shim von Entry.set_Timestamp(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.AllInstances.ValueGet">
            <summary>Legt die shim von Entry.get_Value() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableLiteral.ShimEntry.AllInstances.ValueSetExpression">
            <summary>Legt die shim von Entry.set_Value(Expression value) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TableReference</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.TableReference)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.ConstantIndexGet">
            <summary>Legt die shim von TableReference.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.ConstructorExpressionExpression">
            <summary>Legt die shim von TableReference.TableReference(Expression table, Expression index) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.GetField">
            <summary>Legt die shim von TableReference.GetField() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.GetTable">
            <summary>Legt die shim von TableReference.GetTable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.IsDotChainGet">
            <summary>Legt die shim von TableReference.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.IsMemberAccessGet">
            <summary>Legt die shim von TableReference.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.PrintOutput">
            <summary>Legt die shim von TableReference.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.AllInstances.ConstantIndexGet">
            <summary>Legt die shim von TableReference.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.AllInstances.GetField">
            <summary>Legt die shim von TableReference.GetField() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.AllInstances.GetTable">
            <summary>Legt die shim von TableReference.GetTable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.AllInstances.IsDotChainGet">
            <summary>Legt die shim von TableReference.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.AllInstances.IsMemberAccessGet">
            <summary>Legt die shim von TableReference.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableReference.AllInstances.PrintOutput">
            <summary>Legt die shim von TableReference.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableSet">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TableSet</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableSet.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableSet.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.TableSet)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableSet.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableSet.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableSet.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableSet.ConstructorInt32ExpressionExpressionExpressionBooleanInt32">
            <summary>Legt die shim von TableSet.TableSet(Int32 line, Expression table, Expression index, Expression value, Boolean isTable, Int32 timestamp) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableSet.ProcessRegistersBlock">
            <summary>Legt die shim von TableSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableSet.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableSet.AllInstances.ProcessRegistersBlock">
            <summary>Legt die shim von TableSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableTarget">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TableTarget</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableTarget.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableTarget.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.TableTarget)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableTarget.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableTarget.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableTarget.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableTarget.ConstructorExpressionExpression">
            <summary>Legt die shim von TableTarget.TableTarget(Expression table, Expression index) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableTarget.IsFunctionNameGet">
            <summary>Legt die shim von TableTarget.get_IsFunctionName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableTarget.PrintMethodOutput">
            <summary>Legt die shim von TableTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableTarget.PrintOutput">
            <summary>Legt die shim von TableTarget.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableTarget.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableTarget.AllInstances.IsFunctionNameGet">
            <summary>Legt die shim von TableTarget.get_IsFunctionName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableTarget.AllInstances.PrintMethodOutput">
            <summary>Legt die shim von TableTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTableTarget.AllInstances.PrintOutput">
            <summary>Legt die shim von TableTarget.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Target</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Target)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget.Constructor">
            <summary>Legt die shim von Target.Target() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget.GetIndex">
            <summary>Legt die shim von Target.GetIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget.IsDeclarationDeclaration">
            <summary>Legt die shim von Target.IsDeclaration(Declaration decl) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget.IsFunctionNameGet">
            <summary>Legt die shim von Target.get_IsFunctionName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget.IsLocalGet">
            <summary>Legt die shim von Target.get_IsLocal() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget.AllInstances.GetIndex">
            <summary>Legt die shim von Target.GetIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget.AllInstances.IsDeclarationDeclaration">
            <summary>Legt die shim von Target.IsDeclaration(Declaration decl) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget.AllInstances.IsFunctionNameGet">
            <summary>Legt die shim von Target.get_IsFunctionName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTarget.AllInstances.IsLocalGet">
            <summary>Legt die shim von Target.get_IsLocal() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TestNode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.TestNode)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.AsExpressionRegisters">
            <summary>Legt die shim von TestNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.ConstructorInt32BooleanInt32Int32Int32">
            <summary>Legt die shim von TestNode.TestNode(Int32 test, Boolean inverted, Int32 line, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.GetRegister">
            <summary>Legt die shim von TestNode.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.Invert">
            <summary>Legt die shim von TestNode.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.InvertedGet">
            <summary>Legt die shim von TestNode.get_Inverted() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.InvertedSetBoolean">
            <summary>Legt die shim von TestNode.set_Inverted(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.TestGet">
            <summary>Legt die shim von TestNode.get_Test() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.TestSetInt32">
            <summary>Legt die shim von TestNode.set_Test(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.ToString">
            <summary>Legt die shim von TestNode.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.UseExpressionExpression">
            <summary>Legt die shim von TestNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.AllInstances.AsExpressionRegisters">
            <summary>Legt die shim von TestNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.AllInstances.GetRegister">
            <summary>Legt die shim von TestNode.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.AllInstances.Invert">
            <summary>Legt die shim von TestNode.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.AllInstances.InvertedGet">
            <summary>Legt die shim von TestNode.get_Inverted() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.AllInstances.InvertedSetBoolean">
            <summary>Legt die shim von TestNode.set_Inverted(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.AllInstances.TestGet">
            <summary>Legt die shim von TestNode.get_Test() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.AllInstances.TestSetInt32">
            <summary>Legt die shim von TestNode.set_Test(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.AllInstances.ToString01">
            <summary>Legt die shim von TestNode.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestNode.AllInstances.UseExpressionExpression">
            <summary>Legt die shim von TestNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TestSetNode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.TestSetNode)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.AsExpressionRegisters">
            <summary>Legt die shim von TestSetNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.ConstructorInt32Int32BooleanInt32Int32Int32">
            <summary>Legt die shim von TestSetNode.TestSetNode(Int32 target, Int32 test, Boolean inverted, Int32 line, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.GetRegister">
            <summary>Legt die shim von TestSetNode.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.Invert">
            <summary>Legt die shim von TestSetNode.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.ToString">
            <summary>Legt die shim von TestSetNode.ToString() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.AllInstances.AsExpressionRegisters">
            <summary>Legt die shim von TestSetNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.AllInstances.GetRegister">
            <summary>Legt die shim von TestSetNode.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.AllInstances.Invert">
            <summary>Legt die shim von TestSetNode.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTestSetNode.AllInstances.ToString01">
            <summary>Legt die shim von TestSetNode.ToString() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TrueNode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.TrueNode)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.AsExpressionRegisters">
            <summary>Legt die shim von TrueNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.ConstructorInt32BooleanInt32Int32Int32">
            <summary>Legt die shim von TrueNode.TrueNode(Int32 register, Boolean inverted, Int32 line, Int32 begin, Int32 end) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.GetRegister">
            <summary>Legt die shim von TrueNode.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.Invert">
            <summary>Legt die shim von TrueNode.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.InvertedGet">
            <summary>Legt die shim von TrueNode.get_Inverted() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.InvertedSetBoolean">
            <summary>Legt die shim von TrueNode.set_Inverted(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.RegisterGet">
            <summary>Legt die shim von TrueNode.get_Register() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.RegisterSetInt32">
            <summary>Legt die shim von TrueNode.set_Register(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.ToString">
            <summary>Legt die shim von TrueNode.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.UseExpressionExpression">
            <summary>Legt die shim von TrueNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.AllInstances.AsExpressionRegisters">
            <summary>Legt die shim von TrueNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.AllInstances.GetRegister">
            <summary>Legt die shim von TrueNode.GetRegister() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.AllInstances.Invert">
            <summary>Legt die shim von TrueNode.Invert() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.AllInstances.InvertedGet">
            <summary>Legt die shim von TrueNode.get_Inverted() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.AllInstances.InvertedSetBoolean">
            <summary>Legt die shim von TrueNode.set_Inverted(Boolean value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.AllInstances.RegisterGet">
            <summary>Legt die shim von TrueNode.get_Register() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.AllInstances.RegisterSetInt32">
            <summary>Legt die shim von TrueNode.set_Register(Int32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.AllInstances.ToString01">
            <summary>Legt die shim von TrueNode.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimTrueNode.AllInstances.UseExpressionExpression">
            <summary>Legt die shim von TrueNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUnaryExpression">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.UnaryExpression</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUnaryExpression.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUnaryExpression.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.UnaryExpression)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUnaryExpression.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUnaryExpression.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUnaryExpression.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUnaryExpression.ConstantIndexGet">
            <summary>Legt die shim von UnaryExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUnaryExpression.ConstructorStringExpressionInt32">
            <summary>Legt die shim von UnaryExpression.UnaryExpression(String op, Expression expression, Int32 precedence) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUnaryExpression.PrintOutput">
            <summary>Legt die shim von UnaryExpression.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUnaryExpression.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUnaryExpression.AllInstances.ConstantIndexGet">
            <summary>Legt die shim von UnaryExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUnaryExpression.AllInstances.PrintOutput">
            <summary>Legt die shim von UnaryExpression.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.UpvalueExpression</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.UpvalueExpression)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.ConstantIndexGet">
            <summary>Legt die shim von UpvalueExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.ConstructorString">
            <summary>Legt die shim von UpvalueExpression.UpvalueExpression(String name) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.IsBriefGet">
            <summary>Legt die shim von UpvalueExpression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.IsDotChainGet">
            <summary>Legt die shim von UpvalueExpression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.PrintOutput">
            <summary>Legt die shim von UpvalueExpression.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.AllInstances.ConstantIndexGet">
            <summary>Legt die shim von UpvalueExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.AllInstances.IsBriefGet">
            <summary>Legt die shim von UpvalueExpression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.AllInstances.IsDotChainGet">
            <summary>Legt die shim von UpvalueExpression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueExpression.AllInstances.PrintOutput">
            <summary>Legt die shim von UpvalueExpression.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueSet">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.UpvalueSet</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueSet.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueSet.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.UpvalueSet)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueSet.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueSet.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueSet.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueSet.ConstructorInt32StringExpression">
            <summary>Legt die shim von UpvalueSet.UpvalueSet(Int32 line, String upvalue, Expression value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueSet.ProcessRegistersBlock">
            <summary>Legt die shim von UpvalueSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueSet.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueSet.AllInstances.ProcessRegistersBlock">
            <summary>Legt die shim von UpvalueSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueTarget">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.UpvalueTarget</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueTarget.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueTarget.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.UpvalueTarget)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueTarget.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueTarget.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueTarget.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueTarget.ConstructorString">
            <summary>Legt die shim von UpvalueTarget.UpvalueTarget(String name) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueTarget.PrintMethodOutput">
            <summary>Legt die shim von UpvalueTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueTarget.PrintOutput">
            <summary>Legt die shim von UpvalueTarget.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueTarget.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueTarget.AllInstances.PrintMethodOutput">
            <summary>Legt die shim von UpvalueTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalueTarget.AllInstances.PrintOutput">
            <summary>Legt die shim von UpvalueTarget.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalues">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Upvalues</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalues.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalues.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Upvalues)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalues.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalues.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalues.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalues.ConstructorLUpvalueArray">
            <summary>Legt die shim von Upvalues.Upvalues(LUpvalue[] upvalues) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalues.GetExpressionInt32">
            <summary>Legt die shim von Upvalues.GetExpression(Int32 index) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalues.GetNameInt32">
            <summary>Legt die shim von Upvalues.GetName(Int32 idx) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalues.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalues.AllInstances.GetExpressionInt32">
            <summary>Legt die shim von Upvalues.GetExpression(Int32 index) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimUpvalues.AllInstances.GetNameInt32">
            <summary>Legt die shim von Upvalues.GetName(Int32 idx) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Vararg</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Vararg)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.ConstantIndexGet">
            <summary>Legt die shim von Vararg.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.ConstructorInt32Boolean">
            <summary>Legt die shim von Vararg.Vararg(Int32 length, Boolean multiple) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.IsMultipleGet">
            <summary>Legt die shim von Vararg.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.PrintMultipleOutput">
            <summary>Legt die shim von Vararg.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.PrintOutput">
            <summary>Legt die shim von Vararg.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.AllInstances.ConstantIndexGet">
            <summary>Legt die shim von Vararg.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.AllInstances.IsMultipleGet">
            <summary>Legt die shim von Vararg.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.AllInstances.PrintMultipleOutput">
            <summary>Legt die shim von Vararg.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVararg.AllInstances.PrintOutput">
            <summary>Legt die shim von Vararg.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.VariableTarget</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.VariableTarget)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.ConstructorDeclaration">
            <summary>Legt die shim von VariableTarget.VariableTarget(Declaration decl) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.DeclarationGet">
            <summary>Legt die shim von VariableTarget.get_Declaration() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.DeclarationSetDeclaration">
            <summary>Legt die shim von VariableTarget.set_Declaration(Declaration value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.EqualsObject">
            <summary>Legt die shim von VariableTarget.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.GetIndex">
            <summary>Legt die shim von VariableTarget.GetIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.IsDeclarationDeclaration">
            <summary>Legt die shim von VariableTarget.IsDeclaration(Declaration decl) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.IsLocalGet">
            <summary>Legt die shim von VariableTarget.get_IsLocal() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.PrintMethodOutput">
            <summary>Legt die shim von VariableTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.PrintOutput">
            <summary>Legt die shim von VariableTarget.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.AllInstances.DeclarationGet">
            <summary>Legt die shim von VariableTarget.get_Declaration() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.AllInstances.DeclarationSetDeclaration">
            <summary>Legt die shim von VariableTarget.set_Declaration(Declaration value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.AllInstances.EqualsObject">
            <summary>Legt die shim von VariableTarget.Equals(Object obj) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.AllInstances.GetIndex">
            <summary>Legt die shim von VariableTarget.GetIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.AllInstances.IsDeclarationDeclaration">
            <summary>Legt die shim von VariableTarget.IsDeclaration(Declaration decl) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.AllInstances.IsLocalGet">
            <summary>Legt die shim von VariableTarget.get_IsLocal() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.AllInstances.PrintMethodOutput">
            <summary>Legt die shim von VariableTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVariableTarget.AllInstances.PrintOutput">
            <summary>Legt die shim von VariableTarget.Print(Output output) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Version51</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Version51)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.Constructor">
            <summary>Legt die shim von Version51.Version51() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.GetLFunctionType">
            <summary>Legt die shim von Version51.GetLFunctionType() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.HasHeaderTailGet">
            <summary>Legt die shim von Version51.get_HasHeaderTail() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.IsBreakableLoopEndOp">
            <summary>Legt die shim von Version51.IsBreakableLoopEnd(Op op) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.OuterBlockScopeAdjustmentGet">
            <summary>Legt die shim von Version51.get_OuterBlockScopeAdjustment() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.TForTargetGet">
            <summary>Legt die shim von Version51.get_TForTarget() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.UsesInlineUpvalueDeclaritionsGet">
            <summary>Legt die shim von Version51.get_UsesInlineUpvalueDeclaritions() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.UsesOldLoadNilEncodingGet">
            <summary>Legt die shim von Version51.get_UsesOldLoadNilEncoding() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.AllInstances.GetLFunctionType">
            <summary>Legt die shim von Version51.GetLFunctionType() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.AllInstances.HasHeaderTailGet">
            <summary>Legt die shim von Version51.get_HasHeaderTail() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.AllInstances.IsBreakableLoopEndOp">
            <summary>Legt die shim von Version51.IsBreakableLoopEnd(Op op) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.AllInstances.OuterBlockScopeAdjustmentGet">
            <summary>Legt die shim von Version51.get_OuterBlockScopeAdjustment() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.AllInstances.TForTargetGet">
            <summary>Legt die shim von Version51.get_TForTarget() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.AllInstances.UsesInlineUpvalueDeclaritionsGet">
            <summary>Legt die shim von Version51.get_UsesInlineUpvalueDeclaritions() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion51.AllInstances.UsesOldLoadNilEncodingGet">
            <summary>Legt die shim von Version51.get_UsesOldLoadNilEncoding() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Version52</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Version52)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.Constructor">
            <summary>Legt die shim von Version52.Version52() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.GetLFunctionType">
            <summary>Legt die shim von Version52.GetLFunctionType() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.HasHeaderTailGet">
            <summary>Legt die shim von Version52.get_HasHeaderTail() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.IsBreakableLoopEndOp">
            <summary>Legt die shim von Version52.IsBreakableLoopEnd(Op op) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.OuterBlockScopeAdjustmentGet">
            <summary>Legt die shim von Version52.get_OuterBlockScopeAdjustment() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.TForTargetGet">
            <summary>Legt die shim von Version52.get_TForTarget() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.UsesInlineUpvalueDeclaritionsGet">
            <summary>Legt die shim von Version52.get_UsesInlineUpvalueDeclaritions() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.UsesOldLoadNilEncodingGet">
            <summary>Legt die shim von Version52.get_UsesOldLoadNilEncoding() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.AllInstances.GetLFunctionType">
            <summary>Legt die shim von Version52.GetLFunctionType() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.AllInstances.HasHeaderTailGet">
            <summary>Legt die shim von Version52.get_HasHeaderTail() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.AllInstances.IsBreakableLoopEndOp">
            <summary>Legt die shim von Version52.IsBreakableLoopEnd(Op op) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.AllInstances.OuterBlockScopeAdjustmentGet">
            <summary>Legt die shim von Version52.get_OuterBlockScopeAdjustment() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.AllInstances.TForTargetGet">
            <summary>Legt die shim von Version52.get_TForTarget() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.AllInstances.UsesInlineUpvalueDeclaritionsGet">
            <summary>Legt die shim von Version52.get_UsesInlineUpvalueDeclaritions() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimVersion52.AllInstances.UsesOldLoadNilEncodingGet">
            <summary>Legt die shim von Version52.get_UsesOldLoadNilEncoding() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.WhileBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.WhileBlock)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.Bind(System.IComparable{LeagueSharp.GameFiles.Tools.LuaObjReader.Block})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.AddStatementStatement">
            <summary>Legt die shim von WhileBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.BreakableGet">
            <summary>Legt die shim von WhileBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.ConstructorLFunctionBranchInt32Registers">
            <summary>Legt die shim von WhileBlock.WhileBlock(LFunction function, Branch branch, Int32 loopback, Registers registers) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.GetLoopback">
            <summary>Legt die shim von WhileBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.IsContainerGet">
            <summary>Legt die shim von WhileBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.IsUnprotectedGet">
            <summary>Legt die shim von WhileBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.PrintOutput">
            <summary>Legt die shim von WhileBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.ScopeEndGet">
            <summary>Legt die shim von WhileBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.AllInstances.AddStatementStatement">
            <summary>Legt die shim von WhileBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.AllInstances.BreakableGet">
            <summary>Legt die shim von WhileBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.AllInstances.GetLoopback">
            <summary>Legt die shim von WhileBlock.GetLoopback() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.AllInstances.IsContainerGet">
            <summary>Legt die shim von WhileBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.AllInstances.IsUnprotectedGet">
            <summary>Legt die shim von WhileBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.AllInstances.PrintOutput">
            <summary>Legt die shim von WhileBlock.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.ShimWhileBlock.AllInstances.ScopeEndGet">
            <summary>Legt die shim von WhileBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.AlwaysLoop</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von AlwaysLoop.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.AddStatementStatement">
            <summary>Legt die stub von AlwaysLoop.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.BreakableGet">
            <summary>Legt die stub von AlwaysLoop.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.CompareToBlock">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.GetLoopback">
            <summary>Legt die stub von AlwaysLoop.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.GetLoopback01">
            <summary>Legt die stub von AlwaysLoop.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubAlwaysLoop.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.IsContainerGet">
            <summary>Legt die stub von AlwaysLoop.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.IsUnprotectedGet">
            <summary>Legt die stub von AlwaysLoop.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von AlwaysLoop.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.PrintOutput">
            <summary>Legt die stub von AlwaysLoop.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.ProcessDecompiler">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.ScopeEndGet">
            <summary>Legt die stub von AlwaysLoop.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.Breakable">
            <summary>Legt die stub von AlwaysLoop.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.IsContainer">
            <summary>Legt die stub von AlwaysLoop.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.IsUnprotected">
            <summary>Legt die stub von AlwaysLoop.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAlwaysLoop.ScopeEnd">
            <summary>Legt die stub von AlwaysLoop.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAndBranch">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.AndBranch</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAndBranch.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Branch,LeagueSharp.GameFiles.Tools.LuaObjReader.Branch)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAndBranch.AsExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Legt die stub von AndBranch.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAndBranch.AsExpressionRegisters">
            <summary>Legt die stub von AndBranch.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAndBranch.GetRegister">
            <summary>Legt die stub von AndBranch.GetRegister() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAndBranch.GetRegister01">
            <summary>Legt die stub von AndBranch.GetRegister() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAndBranch.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubAndBranch.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAndBranch.Invert">
            <summary>Legt die stub von AndBranch.Invert() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAndBranch.Invert01">
            <summary>Legt die stub von AndBranch.Invert() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAndBranch.UseExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Legt die stub von AndBranch.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAndBranch.UseExpressionExpression">
            <summary>Legt die stub von AndBranch.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAndBranch.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAndBranch.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAndBranch.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignNode">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.AssignNode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignNode.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignNode.AsExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Legt die stub von AssignNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignNode.AsExpressionRegisters">
            <summary>Legt die stub von AssignNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignNode.GetRegister">
            <summary>Legt die stub von AssignNode.GetRegister() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignNode.GetRegister01">
            <summary>Legt die stub von AssignNode.GetRegister() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignNode.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubAssignNode.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignNode.Invert">
            <summary>Legt die stub von AssignNode.Invert() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignNode.Invert01">
            <summary>Legt die stub von AssignNode.Invert() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignNode.UseExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Legt die stub von AssignNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignNode.UseExpressionExpression">
            <summary>Legt die stub von AssignNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignNode.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignNode.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignNode.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignment">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Assignment</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignment.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignment.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Target,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignment.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignment.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubAssignment.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignment.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Assignment.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignment.PrintOutput">
            <summary>Legt die stub von Assignment.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignment.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignment.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignment.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignment.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignment.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubAssignment.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBHeader">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBHeader.#ctor(System.IO.Stream)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBHeader.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubBHeader.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBHeader.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBHeader.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBHeader.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBInteger">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BInteger</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBInteger.#ctor(System.Int64)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBInteger.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BInteger)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBInteger.#ctor(System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBInteger.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubBInteger.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBInteger.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBInteger.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBInteger.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBIntegerType">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BIntegerType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBIntegerType.#ctor(System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBIntegerType.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubBIntegerType.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBIntegerType.Parse(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader)">
            <summary>Legt die stub von BIntegerType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBIntegerType.ParseStreamBHeader">
            <summary>Legt die stub von BIntegerType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBIntegerType.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBIntegerType.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBIntegerType.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBList`1">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BList`1</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBList`1.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BInteger,System.Collections.Generic.List{`0})">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBList`1.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubBList.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBList`1.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBList`1.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBList`1.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBObject">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BObject</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBObject.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBObject.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubBObject.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBObject.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBObject.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBObject.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBObjectType`1">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BObjectType`1</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBObjectType`1.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBObjectType`1.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubBObjectType.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBObjectType`1.Parse(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader)">
            <summary>Legt die stub von BObjectType`1.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBObjectType`1.ParseStreamBHeader">
            <summary>Legt die stub von BObjectType`1.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBObjectType`1.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBObjectType`1.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBObjectType`1.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeT">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BSizeT</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeT.#ctor(System.Int64)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeT.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BInteger)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeT.#ctor(System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeT.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubBSizeT.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeT.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeT.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeT.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeTType">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BSizeTType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeTType.#ctor(System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeTType.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubBSizeTType.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeTType.Parse(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader)">
            <summary>Legt die stub von BSizeTType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeTType.ParseStreamBHeader">
            <summary>Legt die stub von BSizeTType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeTType.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeTType.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBSizeTType.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BinaryExpression</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.#ctor(System.String,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.AddEntry(LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral.Entry)">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.AddEntryTableLiteralEntry">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.AsInteger">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.AsInteger01">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.AsName">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.AsName01">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.BeginsWithParenGet">
            <summary>Legt die stub von BinaryExpression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.ClosureUpvalueLineGet">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.ConstantIndexGet">
            <summary>Legt die stub von BinaryExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.GetField">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.GetField01">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.GetTable">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.GetTable01">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubBinaryExpression.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsBooleanGet">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsBriefGet">
            <summary>Legt die stub von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsClosureGet">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsConstantGet">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsDotChainGet">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsIdentifierGet">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsIntegerGet">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsMemberAccessGet">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsMultipleGet">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsNewEntryAllowedGet">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsNilGet">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsStringGet">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsTableLiteralGet">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsUpvalueOf(System.Int32)">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsUpvalueOfInt32">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von BinaryExpression.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.PrintClosure(LeagueSharp.GameFiles.Tools.LuaObjReader.Output,LeagueSharp.GameFiles.Tools.LuaObjReader.Target)">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.PrintClosureOutputTarget">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.PrintMultiple(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.PrintMultipleOutput">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.PrintOutput">
            <summary>Legt die stub von BinaryExpression.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.BeginsWithParen">
            <summary>Legt die stub von BinaryExpression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.ClosureUpvalueLine">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.ConstantIndex">
            <summary>Legt die stub von BinaryExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsBoolean">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsBrief">
            <summary>Legt die stub von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsClosure">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsConstant">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsDotChain">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsIdentifier">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsInteger">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsMemberAccess">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsMultiple">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsNewEntryAllowed">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsNil">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsString">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBinaryExpression.IsTableLiteral">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Block</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von Block.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.AddStatementStatement">
            <summary>Legt die stub von Block.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.BreakableGet">
            <summary>Legt die stub von Block.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.CompareToBlock">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.GetLoopback">
            <summary>Legt die stub von Block.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.GetLoopback01">
            <summary>Legt die stub von Block.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubBlock.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.IsContainerGet">
            <summary>Legt die stub von Block.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.IsUnprotectedGet">
            <summary>Legt die stub von Block.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.PrintOutput">
            <summary>Legt die stub von Statement.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.ProcessDecompiler">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.ScopeEndGet">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.Breakable">
            <summary>Legt die stub von Block.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.IsContainer">
            <summary>Legt die stub von Block.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.IsUnprotected">
            <summary>Legt die stub von Block.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBlock.ScopeEnd">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.BooleanIndicator</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von BooleanIndicator.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.AddStatementStatement">
            <summary>Legt die stub von BooleanIndicator.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.BreakableGet">
            <summary>Legt die stub von BooleanIndicator.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.CompareToBlock">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.GetLoopback">
            <summary>Legt die stub von BooleanIndicator.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.GetLoopback01">
            <summary>Legt die stub von BooleanIndicator.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubBooleanIndicator.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.IsContainerGet">
            <summary>Legt die stub von BooleanIndicator.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.IsUnprotectedGet">
            <summary>Legt die stub von BooleanIndicator.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von BooleanIndicator.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.PrintOutput">
            <summary>Legt die stub von BooleanIndicator.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.ProcessDecompiler">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.ScopeEndGet">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.Breakable">
            <summary>Legt die stub von BooleanIndicator.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.IsContainer">
            <summary>Legt die stub von BooleanIndicator.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.IsUnprotected">
            <summary>Legt die stub von BooleanIndicator.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBooleanIndicator.ScopeEnd">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBranch">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Branch</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBranch.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBranch.AsExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Legt die stub von Branch.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBranch.AsExpressionRegisters">
            <summary>Legt die stub von Branch.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBranch.GetRegister">
            <summary>Legt die stub von Branch.GetRegister() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBranch.GetRegister01">
            <summary>Legt die stub von Branch.GetRegister() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBranch.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubBranch.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBranch.Invert">
            <summary>Legt die stub von Branch.Invert() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBranch.Invert01">
            <summary>Legt die stub von Branch.Invert() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBranch.UseExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Legt die stub von Branch.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBranch.UseExpressionExpression">
            <summary>Legt die stub von Branch.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBranch.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBranch.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBranch.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Break</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von Break.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.AddStatementStatement">
            <summary>Legt die stub von Break.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.BreakableGet">
            <summary>Legt die stub von Break.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.CompareToBlock">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.GetLoopback">
            <summary>Legt die stub von Break.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.GetLoopback01">
            <summary>Legt die stub von Break.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubBreak.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.IsContainerGet">
            <summary>Legt die stub von Break.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.IsUnprotectedGet">
            <summary>Legt die stub von Break.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Break.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.PrintOutput">
            <summary>Legt die stub von Break.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Break.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.PrintTailOutput">
            <summary>Legt die stub von Break.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.ProcessDecompiler">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.ScopeEndGet">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.Breakable">
            <summary>Legt die stub von Break.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.IsContainer">
            <summary>Legt die stub von Break.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.IsUnprotected">
            <summary>Legt die stub von Break.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubBreak.ScopeEnd">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCallOperation">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.CallOperation</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCallOperation.#ctor(System.Int32,LeagueSharp.GameFiles.Tools.LuaObjReader.FunctionCall)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCallOperation.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubCallOperation.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCallOperation.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers,LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von CallOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCallOperation.ProcessRegistersBlock">
            <summary>Legt die stub von CallOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCallOperation.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCallOperation.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCallOperation.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.ClosureExpression</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,LeagueSharp.GameFiles.Tools.LuaObjReader.Declaration[],System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.AddEntry(LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral.Entry)">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.AddEntryTableLiteralEntry">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.AsInteger">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.AsInteger01">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.AsName">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.AsName01">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.BeginsWithParenGet">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.ClosureUpvalueLineGet">
            <summary>Legt die stub von ClosureExpression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.ConstantIndexGet">
            <summary>Legt die stub von ClosureExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.GetField">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.GetField01">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.GetTable">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.GetTable01">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubClosureExpression.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsBooleanGet">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsBriefGet">
            <summary>Legt die stub von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsClosureGet">
            <summary>Legt die stub von ClosureExpression.get_IsClosure() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsConstantGet">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsDotChainGet">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsIdentifierGet">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsIntegerGet">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsMemberAccessGet">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsMultipleGet">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsNewEntryAllowedGet">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsNilGet">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsStringGet">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsTableLiteralGet">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsUpvalueOf(System.Int32)">
            <summary>Legt die stub von ClosureExpression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsUpvalueOfInt32">
            <summary>Legt die stub von ClosureExpression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von ClosureExpression.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.PrintClosure(LeagueSharp.GameFiles.Tools.LuaObjReader.Output,LeagueSharp.GameFiles.Tools.LuaObjReader.Target)">
            <summary>Legt die stub von ClosureExpression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.PrintClosureOutputTarget">
            <summary>Legt die stub von ClosureExpression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.PrintMultiple(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.PrintMultipleOutput">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.PrintOutput">
            <summary>Legt die stub von ClosureExpression.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.BeginsWithParen">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.ClosureUpvalueLine">
            <summary>Legt die stub von ClosureExpression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.ConstantIndex">
            <summary>Legt die stub von ClosureExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsBoolean">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsBrief">
            <summary>Legt die stub von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsClosure">
            <summary>Legt die stub von ClosureExpression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsConstant">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsDotChain">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsIdentifier">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsInteger">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsMemberAccess">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsMultiple">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsNewEntryAllowed">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsNil">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsString">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubClosureExpression.IsTableLiteral">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCode">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Code</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCode.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCode.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubCode.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCode.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCode.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCode.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.CompareBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,System.Int32,System.Int32,System.Int32,LeagueSharp.GameFiles.Tools.LuaObjReader.Branch)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von CompareBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.AddStatementStatement">
            <summary>Legt die stub von CompareBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.BreakableGet">
            <summary>Legt die stub von CompareBlock.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.CompareToBlock">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.GetLoopback">
            <summary>Legt die stub von CompareBlock.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.GetLoopback01">
            <summary>Legt die stub von CompareBlock.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubCompareBlock.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.IsContainerGet">
            <summary>Legt die stub von CompareBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.IsUnprotectedGet">
            <summary>Legt die stub von CompareBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von CompareBlock.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.PrintOutput">
            <summary>Legt die stub von CompareBlock.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von CompareBlock.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.ProcessDecompiler">
            <summary>Legt die stub von CompareBlock.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.ScopeEndGet">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.Breakable">
            <summary>Legt die stub von CompareBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.IsContainer">
            <summary>Legt die stub von CompareBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.IsUnprotected">
            <summary>Legt die stub von CompareBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubCompareBlock.ScopeEnd">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstant">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Constant</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstant.#ctor(System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstant.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LObject)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstant.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubConstant.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstant.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstant.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstant.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.ConstantExpression</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Constant,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.AddEntry(LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral.Entry)">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.AddEntryTableLiteralEntry">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.AsInteger">
            <summary>Legt die stub von ConstantExpression.AsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.AsInteger01">
            <summary>Legt die stub von ConstantExpression.AsInteger() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.AsName">
            <summary>Legt die stub von ConstantExpression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.AsName01">
            <summary>Legt die stub von ConstantExpression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.BeginsWithParenGet">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.ClosureUpvalueLineGet">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.ConstantIndexGet">
            <summary>Legt die stub von ConstantExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.GetField">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.GetField01">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.GetTable">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.GetTable01">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubConstantExpression.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsBooleanGet">
            <summary>Legt die stub von ConstantExpression.get_IsBoolean() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsBriefGet">
            <summary>Legt die stub von ConstantExpression.get_IsBrief() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsClosureGet">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsConstantGet">
            <summary>Legt die stub von ConstantExpression.get_IsConstant() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsDotChainGet">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsIdentifierGet">
            <summary>Legt die stub von ConstantExpression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsIntegerGet">
            <summary>Legt die stub von ConstantExpression.get_IsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsMemberAccessGet">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsMultipleGet">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsNewEntryAllowedGet">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsNilGet">
            <summary>Legt die stub von ConstantExpression.get_IsNil() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsStringGet">
            <summary>Legt die stub von ConstantExpression.get_IsString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsTableLiteralGet">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsUpvalueOf(System.Int32)">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsUpvalueOfInt32">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von ConstantExpression.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.PrintClosure(LeagueSharp.GameFiles.Tools.LuaObjReader.Output,LeagueSharp.GameFiles.Tools.LuaObjReader.Target)">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.PrintClosureOutputTarget">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.PrintMultiple(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.PrintMultipleOutput">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.PrintOutput">
            <summary>Legt die stub von ConstantExpression.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.BeginsWithParen">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.ClosureUpvalueLine">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.ConstantIndex">
            <summary>Legt die stub von ConstantExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsBoolean">
            <summary>Legt die stub von ConstantExpression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsBrief">
            <summary>Legt die stub von ConstantExpression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsClosure">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsConstant">
            <summary>Legt die stub von ConstantExpression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsDotChain">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsIdentifier">
            <summary>Legt die stub von ConstantExpression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsInteger">
            <summary>Legt die stub von ConstantExpression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsMemberAccess">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsMultiple">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsNewEntryAllowed">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsNil">
            <summary>Legt die stub von ConstantExpression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsString">
            <summary>Legt die stub von ConstantExpression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubConstantExpression.IsTableLiteral">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclaration">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Declaration</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclaration.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LLocal)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclaration.#ctor(System.String,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclaration.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubDeclaration.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclaration.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclaration.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclaration.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclare">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Declare</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclare.#ctor(System.Collections.Generic.List{LeagueSharp.GameFiles.Tools.LuaObjReader.Declaration})">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclare.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclare.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubDeclare.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclare.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Declare.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclare.PrintOutput">
            <summary>Legt die stub von Declare.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclare.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclare.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclare.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclare.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclare.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDeclare.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDecompiler">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDecompiler.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDecompiler.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubDecompiler.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDecompiler.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDecompiler.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDecompiler.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.DoEndBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von DoEndBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.AddStatementStatement">
            <summary>Legt die stub von DoEndBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.BreakableGet">
            <summary>Legt die stub von DoEndBlock.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.CompareToBlock">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.GetLoopback">
            <summary>Legt die stub von DoEndBlock.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.GetLoopback01">
            <summary>Legt die stub von DoEndBlock.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubDoEndBlock.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.IsContainerGet">
            <summary>Legt die stub von DoEndBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.IsUnprotectedGet">
            <summary>Legt die stub von DoEndBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von DoEndBlock.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.PrintOutput">
            <summary>Legt die stub von DoEndBlock.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.ProcessDecompiler">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.ScopeEndGet">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.Breakable">
            <summary>Legt die stub von DoEndBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.IsContainer">
            <summary>Legt die stub von DoEndBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.IsUnprotected">
            <summary>Legt die stub von DoEndBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubDoEndBlock.ScopeEnd">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubEQNode">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.EQNode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubEQNode.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubEQNode.AsExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Legt die stub von EQNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubEQNode.AsExpressionRegisters">
            <summary>Legt die stub von EQNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubEQNode.GetRegister">
            <summary>Legt die stub von EQNode.GetRegister() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubEQNode.GetRegister01">
            <summary>Legt die stub von EQNode.GetRegister() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubEQNode.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubEQNode.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubEQNode.Invert">
            <summary>Legt die stub von EQNode.Invert() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubEQNode.Invert01">
            <summary>Legt die stub von EQNode.Invert() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubEQNode.UseExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Legt die stub von EQNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubEQNode.UseExpressionExpression">
            <summary>Legt die stub von EQNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubEQNode.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubEQNode.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubEQNode.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.ElseEndBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von ElseEndBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.AddStatementStatement">
            <summary>Legt die stub von ElseEndBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.BreakableGet">
            <summary>Legt die stub von ElseEndBlock.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von ElseEndBlock.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.CompareToBlock">
            <summary>Legt die stub von ElseEndBlock.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.GetLoopback">
            <summary>Legt die stub von ElseEndBlock.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.GetLoopback01">
            <summary>Legt die stub von ElseEndBlock.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubElseEndBlock.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.IsContainerGet">
            <summary>Legt die stub von ElseEndBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.IsUnprotectedGet">
            <summary>Legt die stub von ElseEndBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von ElseEndBlock.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.PrintOutput">
            <summary>Legt die stub von ElseEndBlock.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.ProcessDecompiler">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.ScopeEndGet">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.Breakable">
            <summary>Legt die stub von ElseEndBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.IsContainer">
            <summary>Legt die stub von ElseEndBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.IsUnprotected">
            <summary>Legt die stub von ElseEndBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubElseEndBlock.ScopeEnd">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Expression</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.#ctor(System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.AddEntry(LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral.Entry)">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.AddEntryTableLiteralEntry">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.AsInteger">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.AsInteger01">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.AsName">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.AsName01">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.BeginsWithParenGet">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.ClosureUpvalueLineGet">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.ConstantIndexGet">
            <summary>Legt die stub von Expression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.GetField">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.GetField01">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.GetTable">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.GetTable01">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubExpression.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsBooleanGet">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsBriefGet">
            <summary>Legt die stub von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsClosureGet">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsConstantGet">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsDotChainGet">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsIdentifierGet">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsIntegerGet">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsMemberAccessGet">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsMultipleGet">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsNewEntryAllowedGet">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsNilGet">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsStringGet">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsTableLiteralGet">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsUpvalueOf(System.Int32)">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsUpvalueOfInt32">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Expression.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.PrintClosure(LeagueSharp.GameFiles.Tools.LuaObjReader.Output,LeagueSharp.GameFiles.Tools.LuaObjReader.Target)">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.PrintClosureOutputTarget">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.PrintMultiple(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.PrintMultipleOutput">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.PrintOutput">
            <summary>Legt die stub von Expression.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.BeginsWithParen">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.ClosureUpvalueLine">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.ConstantIndex">
            <summary>Legt die stub von Expression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsBoolean">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsBrief">
            <summary>Legt die stub von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsClosure">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsConstant">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsDotChain">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsIdentifier">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsInteger">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsMemberAccess">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsMultiple">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsNewEntryAllowed">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsNil">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsString">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubExpression.IsTableLiteral">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.ForBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,System.Int32,System.Int32,System.Int32,LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von ForBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.AddStatementStatement">
            <summary>Legt die stub von ForBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.BreakableGet">
            <summary>Legt die stub von ForBlock.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.CompareToBlock">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.GetLoopback">
            <summary>Legt die stub von ForBlock.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.GetLoopback01">
            <summary>Legt die stub von ForBlock.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubForBlock.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.IsContainerGet">
            <summary>Legt die stub von ForBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.IsUnprotectedGet">
            <summary>Legt die stub von ForBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von ForBlock.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.PrintOutput">
            <summary>Legt die stub von ForBlock.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.ProcessDecompiler">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.ScopeEndGet">
            <summary>Legt die stub von ForBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.Breakable">
            <summary>Legt die stub von ForBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.IsContainer">
            <summary>Legt die stub von ForBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.IsUnprotected">
            <summary>Legt die stub von ForBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubForBlock.ScopeEnd">
            <summary>Legt die stub von ForBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunction">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Function</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunction.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunction.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubFunction.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunction.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunction.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunction.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.FunctionCall</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression[],System.Boolean)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.AddEntry(LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral.Entry)">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.AddEntryTableLiteralEntry">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.AsInteger">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.AsInteger01">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.AsName">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.AsName01">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.BeginsWithParenGet">
            <summary>Legt die stub von FunctionCall.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.ClosureUpvalueLineGet">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.ConstantIndexGet">
            <summary>Legt die stub von FunctionCall.get_ConstantIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.GetField">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.GetField01">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.GetTable">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.GetTable01">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubFunctionCall.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsBooleanGet">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsBriefGet">
            <summary>Legt die stub von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsClosureGet">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsConstantGet">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsDotChainGet">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsIdentifierGet">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsIntegerGet">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsMemberAccessGet">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsMultipleGet">
            <summary>Legt die stub von FunctionCall.get_IsMultiple() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsNewEntryAllowedGet">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsNilGet">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsStringGet">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsTableLiteralGet">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsUpvalueOf(System.Int32)">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsUpvalueOfInt32">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von FunctionCall.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.PrintClosure(LeagueSharp.GameFiles.Tools.LuaObjReader.Output,LeagueSharp.GameFiles.Tools.LuaObjReader.Target)">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.PrintClosureOutputTarget">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.PrintMultiple(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von FunctionCall.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.PrintMultipleOutput">
            <summary>Legt die stub von FunctionCall.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.PrintOutput">
            <summary>Legt die stub von FunctionCall.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.BeginsWithParen">
            <summary>Legt die stub von FunctionCall.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.ClosureUpvalueLine">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.ConstantIndex">
            <summary>Legt die stub von FunctionCall.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsBoolean">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsBrief">
            <summary>Legt die stub von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsClosure">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsConstant">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsDotChain">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsIdentifier">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsInteger">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsMemberAccess">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsMultiple">
            <summary>Legt die stub von FunctionCall.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsNewEntryAllowed">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsNil">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsString">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCall.IsTableLiteral">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCallStatement">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.FunctionCallStatement</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCallStatement.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.FunctionCall)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCallStatement.BeginsWithParenGet">
            <summary>Legt die stub von FunctionCallStatement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCallStatement.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubFunctionCallStatement.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCallStatement.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von FunctionCallStatement.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCallStatement.PrintOutput">
            <summary>Legt die stub von FunctionCallStatement.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCallStatement.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCallStatement.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCallStatement.BeginsWithParen">
            <summary>Legt die stub von FunctionCallStatement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCallStatement.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCallStatement.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubFunctionCallStatement.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGenericOperation">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.GenericOperation</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGenericOperation.#ctor(System.Int32,LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGenericOperation.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubGenericOperation.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGenericOperation.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers,LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von GenericOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGenericOperation.ProcessRegistersBlock">
            <summary>Legt die stub von GenericOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGenericOperation.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGenericOperation.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGenericOperation.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.GlobalExpression</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.#ctor(System.String,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.AddEntry(LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral.Entry)">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.AddEntryTableLiteralEntry">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.AsInteger">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.AsInteger01">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.AsName">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.AsName01">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.BeginsWithParenGet">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.ClosureUpvalueLineGet">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.ConstantIndexGet">
            <summary>Legt die stub von GlobalExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.GetField">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.GetField01">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.GetTable">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.GetTable01">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubGlobalExpression.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsBooleanGet">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsBriefGet">
            <summary>Legt die stub von GlobalExpression.get_IsBrief() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsClosureGet">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsConstantGet">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsDotChainGet">
            <summary>Legt die stub von GlobalExpression.get_IsDotChain() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsIdentifierGet">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsIntegerGet">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsMemberAccessGet">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsMultipleGet">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsNewEntryAllowedGet">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsNilGet">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsStringGet">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsTableLiteralGet">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsUpvalueOf(System.Int32)">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsUpvalueOfInt32">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von GlobalExpression.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.PrintClosure(LeagueSharp.GameFiles.Tools.LuaObjReader.Output,LeagueSharp.GameFiles.Tools.LuaObjReader.Target)">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.PrintClosureOutputTarget">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.PrintMultiple(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.PrintMultipleOutput">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.PrintOutput">
            <summary>Legt die stub von GlobalExpression.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.BeginsWithParen">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.ClosureUpvalueLine">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.ConstantIndex">
            <summary>Legt die stub von GlobalExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsBoolean">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsBrief">
            <summary>Legt die stub von GlobalExpression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsClosure">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsConstant">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsDotChain">
            <summary>Legt die stub von GlobalExpression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsIdentifier">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsInteger">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsMemberAccess">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsMultiple">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsNewEntryAllowed">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsNil">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsString">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalExpression.IsTableLiteral">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalSet">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.GlobalSet</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalSet.#ctor(System.Int32,System.String,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalSet.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubGlobalSet.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalSet.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers,LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von GlobalSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalSet.ProcessRegistersBlock">
            <summary>Legt die stub von GlobalSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalSet.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalSet.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalSet.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.GlobalTarget</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.#ctor(System.String)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.GetIndex">
            <summary>Legt die stub von Target.GetIndex() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.GetIndex01">
            <summary>Legt die stub von Target.GetIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubGlobalTarget.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.IsDeclaration(LeagueSharp.GameFiles.Tools.LuaObjReader.Declaration)">
            <summary>Legt die stub von Target.IsDeclaration(Declaration decl) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.IsDeclarationDeclaration">
            <summary>Legt die stub von Target.IsDeclaration(Declaration decl) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.IsFunctionNameGet">
            <summary>Legt die stub von Target.get_IsFunctionName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.IsLocalGet">
            <summary>Legt die stub von Target.get_IsLocal() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von GlobalTarget.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.PrintMethod(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von GlobalTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.PrintMethodOutput">
            <summary>Legt die stub von GlobalTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.PrintOutput">
            <summary>Legt die stub von GlobalTarget.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.IsFunctionName">
            <summary>Legt die stub von Target.get_IsFunctionName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubGlobalTarget.IsLocal">
            <summary>Legt die stub von Target.get_IsLocal() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.IfThenElseBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,LeagueSharp.GameFiles.Tools.LuaObjReader.Branch,System.Int32,System.Boolean,LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von IfThenElseBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.AddStatementStatement">
            <summary>Legt die stub von IfThenElseBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.BreakableGet">
            <summary>Legt die stub von IfThenElseBlock.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von IfThenElseBlock.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.CompareToBlock">
            <summary>Legt die stub von IfThenElseBlock.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.GetLoopback">
            <summary>Legt die stub von IfThenElseBlock.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.GetLoopback01">
            <summary>Legt die stub von IfThenElseBlock.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubIfThenElseBlock.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.IsContainerGet">
            <summary>Legt die stub von IfThenElseBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.IsUnprotectedGet">
            <summary>Legt die stub von IfThenElseBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von IfThenElseBlock.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.PrintOutput">
            <summary>Legt die stub von IfThenElseBlock.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.ProcessDecompiler">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.ScopeEndGet">
            <summary>Legt die stub von IfThenElseBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.Breakable">
            <summary>Legt die stub von IfThenElseBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.IsContainer">
            <summary>Legt die stub von IfThenElseBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.IsUnprotected">
            <summary>Legt die stub von IfThenElseBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenElseBlock.ScopeEnd">
            <summary>Legt die stub von IfThenElseBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.IfThenEndBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,LeagueSharp.GameFiles.Tools.LuaObjReader.Branch,LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,LeagueSharp.GameFiles.Tools.LuaObjReader.Branch,System.Collections.Generic.Stack{LeagueSharp.GameFiles.Tools.LuaObjReader.Branch},LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von IfThenEndBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.AddStatementStatement">
            <summary>Legt die stub von IfThenEndBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.BreakableGet">
            <summary>Legt die stub von IfThenEndBlock.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.CompareToBlock">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.GetLoopback">
            <summary>Legt die stub von IfThenEndBlock.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.GetLoopback01">
            <summary>Legt die stub von IfThenEndBlock.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubIfThenEndBlock.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.IsContainerGet">
            <summary>Legt die stub von IfThenEndBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.IsUnprotectedGet">
            <summary>Legt die stub von IfThenEndBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von IfThenEndBlock.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.PrintOutput">
            <summary>Legt die stub von IfThenEndBlock.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von IfThenEndBlock.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.ProcessDecompiler">
            <summary>Legt die stub von IfThenEndBlock.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.ScopeEndGet">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.Breakable">
            <summary>Legt die stub von IfThenEndBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.IsContainer">
            <summary>Legt die stub von IfThenEndBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.IsUnprotected">
            <summary>Legt die stub von IfThenEndBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubIfThenEndBlock.ScopeEnd">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLBooleanType">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LBooleanType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLBooleanType.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLBooleanType.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLBooleanType.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLBooleanType.Parse(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader)">
            <summary>Legt die stub von LBooleanType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLBooleanType.ParseStreamBHeader">
            <summary>Legt die stub von LBooleanType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLBooleanType.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLBooleanType.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLBooleanType.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLConstantType">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LConstantType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLConstantType.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLConstantType.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLConstantType.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLConstantType.Parse(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader)">
            <summary>Legt die stub von LConstantType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLConstantType.ParseStreamBHeader">
            <summary>Legt die stub von LConstantType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLConstantType.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLConstantType.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLConstantType.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLDoubleNumber">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LDoubleNumber</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLDoubleNumber.#ctor(System.Double)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLDoubleNumber.DeRef">
            <summary>Legt die stub von LObject.DeRef() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLDoubleNumber.DeRef01">
            <summary>Legt die stub von LObject.DeRef() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLDoubleNumber.Equals(System.Object)">
            <summary>Legt die stub von LDoubleNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLDoubleNumber.EqualsObject">
            <summary>Legt die stub von LDoubleNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLDoubleNumber.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLDoubleNumber.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLDoubleNumber.ToString">
            <summary>Legt die stub von LDoubleNumber.ToString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLDoubleNumber.ToString01">
            <summary>Legt die stub von LDoubleNumber.ToString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLDoubleNumber.ValueGet">
            <summary>Legt die stub von LDoubleNumber.get_Value() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLDoubleNumber.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLDoubleNumber.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLDoubleNumber.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLDoubleNumber.Value">
            <summary>Legt die stub von LDoubleNumber.get_Value() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLENode">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LENode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLENode.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLENode.AsExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Legt die stub von LENode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLENode.AsExpressionRegisters">
            <summary>Legt die stub von LENode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLENode.GetRegister">
            <summary>Legt die stub von LENode.GetRegister() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLENode.GetRegister01">
            <summary>Legt die stub von LENode.GetRegister() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLENode.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLENode.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLENode.Invert">
            <summary>Legt die stub von LENode.Invert() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLENode.Invert01">
            <summary>Legt die stub von LENode.Invert() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLENode.UseExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Legt die stub von LENode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLENode.UseExpressionExpression">
            <summary>Legt die stub von LENode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLENode.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLENode.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLENode.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFloatNumber">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LFloatNumber</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFloatNumber.#ctor(System.Single)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFloatNumber.DeRef">
            <summary>Legt die stub von LObject.DeRef() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFloatNumber.DeRef01">
            <summary>Legt die stub von LObject.DeRef() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFloatNumber.Equals(System.Object)">
            <summary>Legt die stub von LFloatNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFloatNumber.EqualsObject">
            <summary>Legt die stub von LFloatNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFloatNumber.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLFloatNumber.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFloatNumber.ToString">
            <summary>Legt die stub von LFloatNumber.ToString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFloatNumber.ToString01">
            <summary>Legt die stub von LFloatNumber.ToString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFloatNumber.ValueGet">
            <summary>Legt die stub von LFloatNumber.get_Value() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFloatNumber.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFloatNumber.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFloatNumber.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFloatNumber.Value">
            <summary>Legt die stub von LFloatNumber.get_Value() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunction">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunction.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader,System.Int32[],LeagueSharp.GameFiles.Tools.LuaObjReader.LLocal[],LeagueSharp.GameFiles.Tools.LuaObjReader.LObject[],LeagueSharp.GameFiles.Tools.LuaObjReader.LUpvalue[],LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunction.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLFunction.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunction.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunction.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunction.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLFunctionType.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.Parse(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader)">
            <summary>Legt die stub von LFunctionType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.ParseCode(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader,LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType.LFunctionParseState)">
            <summary>Legt die stub von LFunctionType.ParseCode(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.ParseCodeStreamBHeaderLFunctionTypeLFunctionParseState">
            <summary>Legt die stub von LFunctionType.ParseCode(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.ParseConstants(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader,LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType.LFunctionParseState)">
            <summary>Legt die stub von LFunctionType.ParseConstants(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.ParseConstantsStreamBHeaderLFunctionTypeLFunctionParseState">
            <summary>Legt die stub von LFunctionType.ParseConstants(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.ParseDebug(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader,LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType.LFunctionParseState)">
            <summary>Legt die stub von LFunctionType.ParseDebug(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.ParseDebugStreamBHeaderLFunctionTypeLFunctionParseState">
            <summary>Legt die stub von LFunctionType.ParseDebug(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.ParseMain(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader,LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType.LFunctionParseState)">
            <summary>Legt die stub von LFunctionType.ParseMain(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.ParseMainStreamBHeaderLFunctionTypeLFunctionParseState">
            <summary>Legt die stub von LFunctionType.ParseMain(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.ParseStreamBHeader">
            <summary>Legt die stub von LFunctionType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.ParseUpvalues(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader,LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType.LFunctionParseState)">
            <summary>Legt die stub von LFunctionType.ParseUpvalues(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.ParseUpvaluesStreamBHeaderLFunctionTypeLFunctionParseState">
            <summary>Legt die stub von LFunctionType.ParseUpvalues(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType52</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLFunctionType52.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.Parse(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader)">
            <summary>Legt die stub von LFunctionType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.ParseCode(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader,LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType.LFunctionParseState)">
            <summary>Legt die stub von LFunctionType.ParseCode(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.ParseCodeStreamBHeaderLFunctionTypeLFunctionParseState">
            <summary>Legt die stub von LFunctionType.ParseCode(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.ParseConstants(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader,LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType.LFunctionParseState)">
            <summary>Legt die stub von LFunctionType.ParseConstants(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.ParseConstantsStreamBHeaderLFunctionTypeLFunctionParseState">
            <summary>Legt die stub von LFunctionType.ParseConstants(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.ParseDebug(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader,LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType.LFunctionParseState)">
            <summary>Legt die stub von LFunctionType52.ParseDebug(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.ParseDebugStreamBHeaderLFunctionTypeLFunctionParseState">
            <summary>Legt die stub von LFunctionType52.ParseDebug(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.ParseMain(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader,LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType.LFunctionParseState)">
            <summary>Legt die stub von LFunctionType52.ParseMain(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.ParseMainStreamBHeaderLFunctionTypeLFunctionParseState">
            <summary>Legt die stub von LFunctionType52.ParseMain(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.ParseStreamBHeader">
            <summary>Legt die stub von LFunctionType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.ParseUpvalues(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader,LeagueSharp.GameFiles.Tools.LuaObjReader.LFunctionType.LFunctionParseState)">
            <summary>Legt die stub von LFunctionType52.ParseUpvalues(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.ParseUpvaluesStreamBHeaderLFunctionTypeLFunctionParseState">
            <summary>Legt die stub von LFunctionType52.ParseUpvalues(Stream stream, BHeader header, LFunctionParseState s) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLFunctionType52.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLIntNumber">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LIntNumber</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLIntNumber.#ctor(System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLIntNumber.DeRef">
            <summary>Legt die stub von LObject.DeRef() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLIntNumber.DeRef01">
            <summary>Legt die stub von LObject.DeRef() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLIntNumber.Equals(System.Object)">
            <summary>Legt die stub von LIntNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLIntNumber.EqualsObject">
            <summary>Legt die stub von LIntNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLIntNumber.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLIntNumber.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLIntNumber.ToString">
            <summary>Legt die stub von LIntNumber.ToString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLIntNumber.ToString01">
            <summary>Legt die stub von LIntNumber.ToString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLIntNumber.ValueGet">
            <summary>Legt die stub von LIntNumber.get_Value() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLIntNumber.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLIntNumber.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLIntNumber.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLIntNumber.Value">
            <summary>Legt die stub von LIntNumber.get_Value() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocal">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LLocal</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocal.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LString,LeagueSharp.GameFiles.Tools.LuaObjReader.BInteger,LeagueSharp.GameFiles.Tools.LuaObjReader.BInteger)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocal.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLLocal.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocal.ToString">
            <summary>Legt die stub von LLocal.ToString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocal.ToString01">
            <summary>Legt die stub von LLocal.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocal.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocal.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocal.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocalType">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LLocalType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocalType.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocalType.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLLocalType.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocalType.Parse(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader)">
            <summary>Legt die stub von LLocalType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocalType.ParseStreamBHeader">
            <summary>Legt die stub von LLocalType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocalType.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocalType.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLocalType.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLongNumber">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LLongNumber</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLongNumber.#ctor(System.Int64)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLongNumber.DeRef">
            <summary>Legt die stub von LObject.DeRef() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLongNumber.DeRef01">
            <summary>Legt die stub von LObject.DeRef() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLongNumber.Equals(System.Object)">
            <summary>Legt die stub von LLongNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLongNumber.EqualsObject">
            <summary>Legt die stub von LLongNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLongNumber.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLLongNumber.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLongNumber.ToString">
            <summary>Legt die stub von LLongNumber.ToString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLongNumber.ToString01">
            <summary>Legt die stub von LLongNumber.ToString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLongNumber.ValueGet">
            <summary>Legt die stub von LLongNumber.get_Value() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLongNumber.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLongNumber.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLongNumber.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLLongNumber.Value">
            <summary>Legt die stub von LLongNumber.get_Value() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumber">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LNumber</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumber.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumber.DeRef">
            <summary>Legt die stub von LObject.DeRef() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumber.DeRef01">
            <summary>Legt die stub von LObject.DeRef() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumber.Equals(System.Object)">
            <summary>Legt die stub von LNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumber.EqualsObject">
            <summary>Legt die stub von LNumber.Equals(Object obj) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumber.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLNumber.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumber.ValueGet">
            <summary>Legt die stub von LNumber.get_Value() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumber.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumber.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumber.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumber.Value">
            <summary>Legt die stub von LNumber.get_Value() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumberType">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LNumberType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumberType.#ctor(System.Int32,System.Boolean)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumberType.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLNumberType.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumberType.Parse(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader)">
            <summary>Legt die stub von LNumberType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumberType.ParseStreamBHeader">
            <summary>Legt die stub von LNumberType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumberType.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumberType.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLNumberType.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLObject">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LObject</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLObject.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLObject.DeRef">
            <summary>Legt die stub von LObject.DeRef() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLObject.DeRef01">
            <summary>Legt die stub von LObject.DeRef() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLObject.Equals(System.Object)">
            <summary>Legt die stub von LObject.Equals(Object obj) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLObject.EqualsObject">
            <summary>Legt die stub von LObject.Equals(Object obj) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLObject.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLObject.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLObject.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLObject.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLObject.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLSourceLines">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LSourceLines</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLSourceLines.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLSourceLines.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLSourceLines.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLSourceLines.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLSourceLines.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLSourceLines.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLString">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LString</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLString.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.BSizeT,System.String)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLString.DeRef">
            <summary>Legt die stub von LString.DeRef() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLString.DeRef01">
            <summary>Legt die stub von LString.DeRef() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLString.Equals(System.Object)">
            <summary>Legt die stub von LString.Equals(Object obj) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLString.EqualsObject">
            <summary>Legt die stub von LString.Equals(Object obj) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLString.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLString.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLString.ToString">
            <summary>Legt die stub von LString.ToString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLString.ToString01">
            <summary>Legt die stub von LString.ToString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLString.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLString.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLString.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLStringType">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LStringType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLStringType.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLStringType.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLStringType.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLStringType.Parse(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader)">
            <summary>Legt die stub von LStringType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLStringType.ParseStreamBHeader">
            <summary>Legt die stub von LStringType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLStringType.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLStringType.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLStringType.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLTNode">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LTNode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLTNode.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLTNode.AsExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Legt die stub von LTNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLTNode.AsExpressionRegisters">
            <summary>Legt die stub von LTNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLTNode.GetRegister">
            <summary>Legt die stub von LTNode.GetRegister() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLTNode.GetRegister01">
            <summary>Legt die stub von LTNode.GetRegister() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLTNode.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLTNode.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLTNode.Invert">
            <summary>Legt die stub von LTNode.Invert() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLTNode.Invert01">
            <summary>Legt die stub von LTNode.Invert() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLTNode.UseExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Legt die stub von LTNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLTNode.UseExpressionExpression">
            <summary>Legt die stub von LTNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLTNode.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLTNode.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLTNode.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalue">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LUpvalue</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalue.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalue.Equals(System.Object)">
            <summary>Legt die stub von LUpvalue.Equals(Object obj) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalue.EqualsObject">
            <summary>Legt die stub von LUpvalue.Equals(Object obj) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalue.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLUpvalue.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalue.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalue.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalue.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalueType">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LUpvalueType</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalueType.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalueType.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLUpvalueType.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalueType.Parse(System.IO.Stream,LeagueSharp.GameFiles.Tools.LuaObjReader.BHeader)">
            <summary>Legt die stub von LUpvalueType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalueType.ParseStreamBHeader">
            <summary>Legt die stub von LUpvalueType.Parse(Stream stream, BHeader header) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalueType.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalueType.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLUpvalueType.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLambdaOperation">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LambdaOperation</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLambdaOperation.#ctor(System.Int32,System.Func{LeagueSharp.GameFiles.Tools.LuaObjReader.Registers,LeagueSharp.GameFiles.Tools.LuaObjReader.Block,LeagueSharp.GameFiles.Tools.LuaObjReader.Statement})">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLambdaOperation.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLambdaOperation.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLambdaOperation.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers,LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von LambdaOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLambdaOperation.ProcessRegistersBlock">
            <summary>Legt die stub von LambdaOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLambdaOperation.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLambdaOperation.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLambdaOperation.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.LocalVariable</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Declaration)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.AddEntry(LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral.Entry)">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.AddEntryTableLiteralEntry">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.AsInteger">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.AsInteger01">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.AsName">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.AsName01">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.BeginsWithParenGet">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.ClosureUpvalueLineGet">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.ConstantIndexGet">
            <summary>Legt die stub von LocalVariable.get_ConstantIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.GetField">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.GetField01">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.GetTable">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.GetTable01">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLocalVariable.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsBooleanGet">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsBriefGet">
            <summary>Legt die stub von LocalVariable.get_IsBrief() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsClosureGet">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsConstantGet">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsDotChainGet">
            <summary>Legt die stub von LocalVariable.get_IsDotChain() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsIdentifierGet">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsIntegerGet">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsMemberAccessGet">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsMultipleGet">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsNewEntryAllowedGet">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsNilGet">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsStringGet">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsTableLiteralGet">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsUpvalueOf(System.Int32)">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsUpvalueOfInt32">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von LocalVariable.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.PrintClosure(LeagueSharp.GameFiles.Tools.LuaObjReader.Output,LeagueSharp.GameFiles.Tools.LuaObjReader.Target)">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.PrintClosureOutputTarget">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.PrintMultiple(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.PrintMultipleOutput">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.PrintOutput">
            <summary>Legt die stub von LocalVariable.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.BeginsWithParen">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.ClosureUpvalueLine">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.ConstantIndex">
            <summary>Legt die stub von LocalVariable.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsBoolean">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsBrief">
            <summary>Legt die stub von LocalVariable.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsClosure">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsConstant">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsDotChain">
            <summary>Legt die stub von LocalVariable.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsIdentifier">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsInteger">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsMemberAccess">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsMultiple">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsNewEntryAllowed">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsNil">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsString">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLocalVariable.IsTableLiteral">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Lua_Version</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.#ctor(System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.GetLFunctionType">
            <summary>Legt die stub von Lua_Version.GetLFunctionType() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.GetLFunctionType01">
            <summary>Legt die stub von Lua_Version.GetLFunctionType() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.HasHeaderTailGet">
            <summary>Legt die stub von Lua_Version.get_HasHeaderTail() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubLua_Version.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.IsBreakableLoopEnd(LeagueSharp.GameFiles.Tools.LuaObjReader.Op)">
            <summary>Legt die stub von Lua_Version.IsBreakableLoopEnd(Op op) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.IsBreakableLoopEndOp">
            <summary>Legt die stub von Lua_Version.IsBreakableLoopEnd(Op op) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.OuterBlockScopeAdjustmentGet">
            <summary>Legt die stub von Lua_Version.get_OuterBlockScopeAdjustment() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.TForTargetGet">
            <summary>Legt die stub von Lua_Version.get_TForTarget() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.UsesInlineUpvalueDeclaritionsGet">
            <summary>Legt die stub von Lua_Version.get_UsesInlineUpvalueDeclaritions() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.UsesOldLoadNilEncodingGet">
            <summary>Legt die stub von Lua_Version.get_UsesOldLoadNilEncoding() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.HasHeaderTail">
            <summary>Legt die stub von Lua_Version.get_HasHeaderTail() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.OuterBlockScopeAdjustment">
            <summary>Legt die stub von Lua_Version.get_OuterBlockScopeAdjustment() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.TForTarget">
            <summary>Legt die stub von Lua_Version.get_TForTarget() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.UsesInlineUpvalueDeclaritions">
            <summary>Legt die stub von Lua_Version.get_UsesInlineUpvalueDeclaritions() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubLua_Version.UsesOldLoadNilEncoding">
            <summary>Legt die stub von Lua_Version.get_UsesOldLoadNilEncoding() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubNotBranch">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.NotBranch</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubNotBranch.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Branch)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubNotBranch.AsExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Legt die stub von NotBranch.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubNotBranch.AsExpressionRegisters">
            <summary>Legt die stub von NotBranch.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubNotBranch.GetRegister">
            <summary>Legt die stub von NotBranch.GetRegister() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubNotBranch.GetRegister01">
            <summary>Legt die stub von NotBranch.GetRegister() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubNotBranch.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubNotBranch.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubNotBranch.Invert">
            <summary>Legt die stub von NotBranch.Invert() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubNotBranch.Invert01">
            <summary>Legt die stub von NotBranch.Invert() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubNotBranch.UseExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Legt die stub von NotBranch.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubNotBranch.UseExpressionExpression">
            <summary>Legt die stub von NotBranch.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubNotBranch.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubNotBranch.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubNotBranch.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOpcodeMap">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.OpcodeMap</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOpcodeMap.#ctor(System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOpcodeMap.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubOpcodeMap.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOpcodeMap.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOpcodeMap.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOpcodeMap.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOperation">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Operation</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOperation.#ctor(System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOperation.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubOperation.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOperation.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers,LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Operation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOperation.ProcessRegistersBlock">
            <summary>Legt die stub von Operation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOperation.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOperation.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOperation.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOrBranch">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.OrBranch</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOrBranch.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Branch,LeagueSharp.GameFiles.Tools.LuaObjReader.Branch)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOrBranch.AsExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Legt die stub von OrBranch.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOrBranch.AsExpressionRegisters">
            <summary>Legt die stub von OrBranch.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOrBranch.GetRegister">
            <summary>Legt die stub von OrBranch.GetRegister() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOrBranch.GetRegister01">
            <summary>Legt die stub von OrBranch.GetRegister() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOrBranch.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubOrBranch.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOrBranch.Invert">
            <summary>Legt die stub von OrBranch.Invert() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOrBranch.Invert01">
            <summary>Legt die stub von OrBranch.Invert() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOrBranch.UseExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Legt die stub von OrBranch.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOrBranch.UseExpressionExpression">
            <summary>Legt die stub von OrBranch.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOrBranch.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOrBranch.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOrBranch.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.OuterBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von OuterBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.AddStatementStatement">
            <summary>Legt die stub von OuterBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.BreakableGet">
            <summary>Legt die stub von OuterBlock.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.CompareToBlock">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.GetLoopback">
            <summary>Legt die stub von OuterBlock.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.GetLoopback01">
            <summary>Legt die stub von OuterBlock.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubOuterBlock.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.IsContainerGet">
            <summary>Legt die stub von OuterBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.IsUnprotectedGet">
            <summary>Legt die stub von OuterBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von OuterBlock.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.PrintOutput">
            <summary>Legt die stub von OuterBlock.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.ProcessDecompiler">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.ScopeEndGet">
            <summary>Legt die stub von OuterBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.Breakable">
            <summary>Legt die stub von OuterBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.IsContainer">
            <summary>Legt die stub von OuterBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.IsUnprotected">
            <summary>Legt die stub von OuterBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOuterBlock.ScopeEnd">
            <summary>Legt die stub von OuterBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOutput">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Output</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOutput.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOutput.#ctor(System.IO.TextWriter)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOutput.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubOutput.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOutput.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOutput.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubOutput.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRegisterSet">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.RegisterSet</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRegisterSet.#ctor(System.Int32,System.Int32,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRegisterSet.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubRegisterSet.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRegisterSet.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers,LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von RegisterSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRegisterSet.ProcessRegistersBlock">
            <summary>Legt die stub von RegisterSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRegisterSet.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRegisterSet.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRegisterSet.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRegisters">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Registers</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRegisters.#ctor(System.Int32,System.Int32,LeagueSharp.GameFiles.Tools.LuaObjReader.Declaration[],LeagueSharp.GameFiles.Tools.LuaObjReader.Function)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRegisters.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubRegisters.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRegisters.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRegisters.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRegisters.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.RepeatBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,LeagueSharp.GameFiles.Tools.LuaObjReader.Branch,LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von RepeatBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.AddStatementStatement">
            <summary>Legt die stub von RepeatBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.BreakableGet">
            <summary>Legt die stub von RepeatBlock.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.CompareToBlock">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.GetLoopback">
            <summary>Legt die stub von RepeatBlock.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.GetLoopback01">
            <summary>Legt die stub von RepeatBlock.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubRepeatBlock.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.IsContainerGet">
            <summary>Legt die stub von RepeatBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.IsUnprotectedGet">
            <summary>Legt die stub von RepeatBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von RepeatBlock.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.PrintOutput">
            <summary>Legt die stub von RepeatBlock.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.ProcessDecompiler">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.ScopeEndGet">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.Breakable">
            <summary>Legt die stub von RepeatBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.IsContainer">
            <summary>Legt die stub von RepeatBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.IsUnprotected">
            <summary>Legt die stub von RepeatBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubRepeatBlock.ScopeEnd">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturn">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Return</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturn.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturn.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturn.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression[])">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturn.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturn.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubReturn.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturn.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Return.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturn.PrintOutput">
            <summary>Legt die stub von Return.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturn.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Return.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturn.PrintTailOutput">
            <summary>Legt die stub von Return.PrintTail(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturn.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturn.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturn.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturn.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturnOperation">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.ReturnOperation</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturnOperation.#ctor(System.Int32,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression[])">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturnOperation.#ctor(System.Int32,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturnOperation.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubReturnOperation.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturnOperation.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers,LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von ReturnOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturnOperation.ProcessRegistersBlock">
            <summary>Legt die stub von ReturnOperation.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturnOperation.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturnOperation.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubReturnOperation.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.SetBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,LeagueSharp.GameFiles.Tools.LuaObjReader.Branch,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von SetBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.AddStatementStatement">
            <summary>Legt die stub von SetBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.BreakableGet">
            <summary>Legt die stub von SetBlock.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.CompareToBlock">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.GetLoopback">
            <summary>Legt die stub von SetBlock.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.GetLoopback01">
            <summary>Legt die stub von SetBlock.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubSetBlock.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.IsContainerGet">
            <summary>Legt die stub von SetBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.IsUnprotectedGet">
            <summary>Legt die stub von SetBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von SetBlock.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.PrintOutput">
            <summary>Legt die stub von SetBlock.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von SetBlock.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.ProcessDecompiler">
            <summary>Legt die stub von SetBlock.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.ScopeEndGet">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.Breakable">
            <summary>Legt die stub von SetBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.IsContainer">
            <summary>Legt die stub von SetBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.IsUnprotected">
            <summary>Legt die stub von SetBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubSetBlock.ScopeEnd">
            <summary>Legt die stub von Block.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubStatement">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Statement</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubStatement.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubStatement.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubStatement.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubStatement.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubStatement.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubStatement.PrintOutput">
            <summary>Legt die stub von Statement.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubStatement.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubStatement.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubStatement.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubStatement.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubStatement.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubStatement.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TForBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,System.Int32,System.Int32,System.Int32,System.Int32,LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von TForBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.AddStatementStatement">
            <summary>Legt die stub von TForBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.BreakableGet">
            <summary>Legt die stub von TForBlock.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.CompareToBlock">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.GetLoopback">
            <summary>Legt die stub von TForBlock.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.GetLoopback01">
            <summary>Legt die stub von TForBlock.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubTForBlock.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.IsContainerGet">
            <summary>Legt die stub von TForBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.IsUnprotectedGet">
            <summary>Legt die stub von TForBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von TForBlock.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.PrintOutput">
            <summary>Legt die stub von TForBlock.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.ProcessDecompiler">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.ScopeEndGet">
            <summary>Legt die stub von TForBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.Breakable">
            <summary>Legt die stub von TForBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.IsContainer">
            <summary>Legt die stub von TForBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.IsUnprotected">
            <summary>Legt die stub von TForBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTForBlock.ScopeEnd">
            <summary>Legt die stub von TForBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.#ctor(System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.AddEntry(LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral.Entry)">
            <summary>Legt die stub von TableLiteral.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.AddEntryTableLiteralEntry">
            <summary>Legt die stub von TableLiteral.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.AsInteger">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.AsInteger01">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.AsName">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.AsName01">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.BeginsWithParenGet">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.ClosureUpvalueLineGet">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.ConstantIndexGet">
            <summary>Legt die stub von TableLiteral.get_ConstantIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.GetField">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.GetField01">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.GetTable">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.GetTable01">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubTableLiteral.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsBooleanGet">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsBriefGet">
            <summary>Legt die stub von TableLiteral.get_IsBrief() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsClosureGet">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsConstantGet">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsDotChainGet">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsIdentifierGet">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsIntegerGet">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsMemberAccessGet">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsMultipleGet">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsNewEntryAllowedGet">
            <summary>Legt die stub von TableLiteral.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsNilGet">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsStringGet">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsTableLiteralGet">
            <summary>Legt die stub von TableLiteral.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsUpvalueOf(System.Int32)">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsUpvalueOfInt32">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von TableLiteral.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.PrintClosure(LeagueSharp.GameFiles.Tools.LuaObjReader.Output,LeagueSharp.GameFiles.Tools.LuaObjReader.Target)">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.PrintClosureOutputTarget">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.PrintMultiple(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.PrintMultipleOutput">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.PrintOutput">
            <summary>Legt die stub von TableLiteral.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.BeginsWithParen">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.ClosureUpvalueLine">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.ConstantIndex">
            <summary>Legt die stub von TableLiteral.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsBoolean">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsBrief">
            <summary>Legt die stub von TableLiteral.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsClosure">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsConstant">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsDotChain">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsIdentifier">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsInteger">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsMemberAccess">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsMultiple">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsNewEntryAllowed">
            <summary>Legt die stub von TableLiteral.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsNil">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsString">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableLiteral.IsTableLiteral">
            <summary>Legt die stub von TableLiteral.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TableReference</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.AddEntry(LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral.Entry)">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.AddEntryTableLiteralEntry">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.AsInteger">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.AsInteger01">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.AsName">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.AsName01">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.BeginsWithParenGet">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.ClosureUpvalueLineGet">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.ConstantIndexGet">
            <summary>Legt die stub von TableReference.get_ConstantIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.GetField">
            <summary>Legt die stub von TableReference.GetField() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.GetField01">
            <summary>Legt die stub von TableReference.GetField() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.GetTable">
            <summary>Legt die stub von TableReference.GetTable() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.GetTable01">
            <summary>Legt die stub von TableReference.GetTable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubTableReference.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsBooleanGet">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsBriefGet">
            <summary>Legt die stub von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsClosureGet">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsConstantGet">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsDotChainGet">
            <summary>Legt die stub von TableReference.get_IsDotChain() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsIdentifierGet">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsIntegerGet">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsMemberAccessGet">
            <summary>Legt die stub von TableReference.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsMultipleGet">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsNewEntryAllowedGet">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsNilGet">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsStringGet">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsTableLiteralGet">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsUpvalueOf(System.Int32)">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsUpvalueOfInt32">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von TableReference.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.PrintClosure(LeagueSharp.GameFiles.Tools.LuaObjReader.Output,LeagueSharp.GameFiles.Tools.LuaObjReader.Target)">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.PrintClosureOutputTarget">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.PrintMultiple(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.PrintMultipleOutput">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.PrintOutput">
            <summary>Legt die stub von TableReference.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.BeginsWithParen">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.ClosureUpvalueLine">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.ConstantIndex">
            <summary>Legt die stub von TableReference.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsBoolean">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsBrief">
            <summary>Legt die stub von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsClosure">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsConstant">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsDotChain">
            <summary>Legt die stub von TableReference.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsIdentifier">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsInteger">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsMemberAccess">
            <summary>Legt die stub von TableReference.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsMultiple">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsNewEntryAllowed">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsNil">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsString">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableReference.IsTableLiteral">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableSet">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TableSet</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableSet.#ctor(System.Int32,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression,System.Boolean,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableSet.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubTableSet.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableSet.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers,LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von TableSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableSet.ProcessRegistersBlock">
            <summary>Legt die stub von TableSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableSet.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableSet.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableSet.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TableTarget</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.GetIndex">
            <summary>Legt die stub von Target.GetIndex() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.GetIndex01">
            <summary>Legt die stub von Target.GetIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubTableTarget.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.IsDeclaration(LeagueSharp.GameFiles.Tools.LuaObjReader.Declaration)">
            <summary>Legt die stub von Target.IsDeclaration(Declaration decl) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.IsDeclarationDeclaration">
            <summary>Legt die stub von Target.IsDeclaration(Declaration decl) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.IsFunctionNameGet">
            <summary>Legt die stub von TableTarget.get_IsFunctionName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.IsLocalGet">
            <summary>Legt die stub von Target.get_IsLocal() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von TableTarget.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.PrintMethod(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von TableTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.PrintMethodOutput">
            <summary>Legt die stub von TableTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.PrintOutput">
            <summary>Legt die stub von TableTarget.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.IsFunctionName">
            <summary>Legt die stub von TableTarget.get_IsFunctionName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTableTarget.IsLocal">
            <summary>Legt die stub von Target.get_IsLocal() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Target</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.GetIndex">
            <summary>Legt die stub von Target.GetIndex() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.GetIndex01">
            <summary>Legt die stub von Target.GetIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubTarget.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.IsDeclaration(LeagueSharp.GameFiles.Tools.LuaObjReader.Declaration)">
            <summary>Legt die stub von Target.IsDeclaration(Declaration decl) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.IsDeclarationDeclaration">
            <summary>Legt die stub von Target.IsDeclaration(Declaration decl) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.IsFunctionNameGet">
            <summary>Legt die stub von Target.get_IsFunctionName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.IsLocalGet">
            <summary>Legt die stub von Target.get_IsLocal() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Target.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.PrintMethod(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Target.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.PrintMethodOutput">
            <summary>Legt die stub von Target.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.PrintOutput">
            <summary>Legt die stub von Target.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.IsFunctionName">
            <summary>Legt die stub von Target.get_IsFunctionName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTarget.IsLocal">
            <summary>Legt die stub von Target.get_IsLocal() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TestNode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.#ctor(System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.AsExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Legt die stub von TestNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.AsExpressionRegisters">
            <summary>Legt die stub von TestNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.GetRegister">
            <summary>Legt die stub von TestNode.GetRegister() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.GetRegister01">
            <summary>Legt die stub von TestNode.GetRegister() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubTestNode.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.Invert">
            <summary>Legt die stub von TestNode.Invert() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.Invert01">
            <summary>Legt die stub von TestNode.Invert() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.ToString">
            <summary>Legt die stub von TestNode.ToString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.ToString01">
            <summary>Legt die stub von TestNode.ToString() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.UseExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Legt die stub von TestNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.UseExpressionExpression">
            <summary>Legt die stub von TestNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestNode.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TestSetNode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.AsExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Legt die stub von TestSetNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.AsExpressionRegisters">
            <summary>Legt die stub von TestSetNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.GetRegister">
            <summary>Legt die stub von TestSetNode.GetRegister() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.GetRegister01">
            <summary>Legt die stub von TestSetNode.GetRegister() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubTestSetNode.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.Invert">
            <summary>Legt die stub von TestSetNode.Invert() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.Invert01">
            <summary>Legt die stub von TestSetNode.Invert() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.ToString">
            <summary>Legt die stub von TestSetNode.ToString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.ToString01">
            <summary>Legt die stub von TestSetNode.ToString() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.UseExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Legt die stub von TestNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.UseExpressionExpression">
            <summary>Legt die stub von TestNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTestSetNode.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.TrueNode</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.#ctor(System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.AsExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Legt die stub von TrueNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.AsExpressionRegisters">
            <summary>Legt die stub von TrueNode.AsExpression(Registers registers) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.GetRegister">
            <summary>Legt die stub von TrueNode.GetRegister() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.GetRegister01">
            <summary>Legt die stub von TrueNode.GetRegister() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubTrueNode.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.Invert">
            <summary>Legt die stub von TrueNode.Invert() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.Invert01">
            <summary>Legt die stub von TrueNode.Invert() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.ToString">
            <summary>Legt die stub von TrueNode.ToString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.ToString01">
            <summary>Legt die stub von TrueNode.ToString() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.UseExpression(LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Legt die stub von TrueNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.UseExpressionExpression">
            <summary>Legt die stub von TrueNode.UseExpression(Expression expression) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubTrueNode.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.UnaryExpression</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.#ctor(System.String,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression,System.Int32)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.AddEntry(LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral.Entry)">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.AddEntryTableLiteralEntry">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.AsInteger">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.AsInteger01">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.AsName">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.AsName01">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.BeginsWithParenGet">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.ClosureUpvalueLineGet">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.ConstantIndexGet">
            <summary>Legt die stub von UnaryExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.GetField">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.GetField01">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.GetTable">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.GetTable01">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubUnaryExpression.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsBooleanGet">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsBriefGet">
            <summary>Legt die stub von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsClosureGet">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsConstantGet">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsDotChainGet">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsIdentifierGet">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsIntegerGet">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsMemberAccessGet">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsMultipleGet">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsNewEntryAllowedGet">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsNilGet">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsStringGet">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsTableLiteralGet">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsUpvalueOf(System.Int32)">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsUpvalueOfInt32">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von UnaryExpression.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.PrintClosure(LeagueSharp.GameFiles.Tools.LuaObjReader.Output,LeagueSharp.GameFiles.Tools.LuaObjReader.Target)">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.PrintClosureOutputTarget">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.PrintMultiple(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.PrintMultipleOutput">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.PrintOutput">
            <summary>Legt die stub von UnaryExpression.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.BeginsWithParen">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.ClosureUpvalueLine">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.ConstantIndex">
            <summary>Legt die stub von UnaryExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsBoolean">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsBrief">
            <summary>Legt die stub von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsClosure">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsConstant">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsDotChain">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsIdentifier">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsInteger">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsMemberAccess">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsMultiple">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsNewEntryAllowed">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsNil">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsString">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUnaryExpression.IsTableLiteral">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.UpvalueExpression</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.#ctor(System.String)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.AddEntry(LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral.Entry)">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.AddEntryTableLiteralEntry">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.AsInteger">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.AsInteger01">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.AsName">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.AsName01">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.BeginsWithParenGet">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.ClosureUpvalueLineGet">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.ConstantIndexGet">
            <summary>Legt die stub von UpvalueExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.GetField">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.GetField01">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.GetTable">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.GetTable01">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubUpvalueExpression.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsBooleanGet">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsBriefGet">
            <summary>Legt die stub von UpvalueExpression.get_IsBrief() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsClosureGet">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsConstantGet">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsDotChainGet">
            <summary>Legt die stub von UpvalueExpression.get_IsDotChain() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsIdentifierGet">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsIntegerGet">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsMemberAccessGet">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsMultipleGet">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsNewEntryAllowedGet">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsNilGet">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsStringGet">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsTableLiteralGet">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsUpvalueOf(System.Int32)">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsUpvalueOfInt32">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von UpvalueExpression.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.PrintClosure(LeagueSharp.GameFiles.Tools.LuaObjReader.Output,LeagueSharp.GameFiles.Tools.LuaObjReader.Target)">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.PrintClosureOutputTarget">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.PrintMultiple(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.PrintMultipleOutput">
            <summary>Legt die stub von Expression.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.PrintOutput">
            <summary>Legt die stub von UpvalueExpression.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.BeginsWithParen">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.ClosureUpvalueLine">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.ConstantIndex">
            <summary>Legt die stub von UpvalueExpression.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsBoolean">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsBrief">
            <summary>Legt die stub von UpvalueExpression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsClosure">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsConstant">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsDotChain">
            <summary>Legt die stub von UpvalueExpression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsIdentifier">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsInteger">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsMemberAccess">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsMultiple">
            <summary>Legt die stub von Expression.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsNewEntryAllowed">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsNil">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsString">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueExpression.IsTableLiteral">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueSet">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.UpvalueSet</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueSet.#ctor(System.Int32,System.String,LeagueSharp.GameFiles.Tools.LuaObjReader.Expression)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueSet.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubUpvalueSet.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueSet.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Registers,LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von UpvalueSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueSet.ProcessRegistersBlock">
            <summary>Legt die stub von UpvalueSet.Process(Registers r, Block block) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueSet.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueSet.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueSet.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.UpvalueTarget</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.#ctor(System.String)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.GetIndex">
            <summary>Legt die stub von Target.GetIndex() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.GetIndex01">
            <summary>Legt die stub von Target.GetIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubUpvalueTarget.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.IsDeclaration(LeagueSharp.GameFiles.Tools.LuaObjReader.Declaration)">
            <summary>Legt die stub von Target.IsDeclaration(Declaration decl) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.IsDeclarationDeclaration">
            <summary>Legt die stub von Target.IsDeclaration(Declaration decl) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.IsFunctionNameGet">
            <summary>Legt die stub von Target.get_IsFunctionName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.IsLocalGet">
            <summary>Legt die stub von Target.get_IsLocal() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von UpvalueTarget.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.PrintMethod(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von UpvalueTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.PrintMethodOutput">
            <summary>Legt die stub von UpvalueTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.PrintOutput">
            <summary>Legt die stub von UpvalueTarget.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.IsFunctionName">
            <summary>Legt die stub von Target.get_IsFunctionName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalueTarget.IsLocal">
            <summary>Legt die stub von Target.get_IsLocal() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalues">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Upvalues</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalues.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LUpvalue[])">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalues.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubUpvalues.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalues.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalues.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubUpvalues.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.Vararg</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.#ctor(System.Int32,System.Boolean)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.AddEntry(LeagueSharp.GameFiles.Tools.LuaObjReader.TableLiteral.Entry)">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.AddEntryTableLiteralEntry">
            <summary>Legt die stub von Expression.AddEntry(Entry entry) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.AsInteger">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.AsInteger01">
            <summary>Legt die stub von Expression.AsInteger() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.AsName">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.AsName01">
            <summary>Legt die stub von Expression.AsName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.BeginsWithParenGet">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.ClosureUpvalueLineGet">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.ConstantIndexGet">
            <summary>Legt die stub von Vararg.get_ConstantIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.GetField">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.GetField01">
            <summary>Legt die stub von Expression.GetField() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.GetTable">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.GetTable01">
            <summary>Legt die stub von Expression.GetTable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubVararg.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsBooleanGet">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsBriefGet">
            <summary>Legt die stub von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsClosureGet">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsConstantGet">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsDotChainGet">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsIdentifierGet">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsIntegerGet">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsMemberAccessGet">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsMultipleGet">
            <summary>Legt die stub von Vararg.get_IsMultiple() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsNewEntryAllowedGet">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsNilGet">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsStringGet">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsTableLiteralGet">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsUpvalueOf(System.Int32)">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsUpvalueOfInt32">
            <summary>Legt die stub von Expression.IsUpvalueOf(Int32 register) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Vararg.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.PrintClosure(LeagueSharp.GameFiles.Tools.LuaObjReader.Output,LeagueSharp.GameFiles.Tools.LuaObjReader.Target)">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.PrintClosureOutputTarget">
            <summary>Legt die stub von Expression.PrintClosure(Output output, Target name) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.PrintMultiple(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Vararg.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.PrintMultipleOutput">
            <summary>Legt die stub von Vararg.PrintMultiple(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.PrintOutput">
            <summary>Legt die stub von Vararg.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.BeginsWithParen">
            <summary>Legt die stub von Expression.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.ClosureUpvalueLine">
            <summary>Legt die stub von Expression.get_ClosureUpvalueLine() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.ConstantIndex">
            <summary>Legt die stub von Vararg.get_ConstantIndex() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsBoolean">
            <summary>Legt die stub von Expression.get_IsBoolean() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsBrief">
            <summary>Legt die stub von Expression.get_IsBrief() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsClosure">
            <summary>Legt die stub von Expression.get_IsClosure() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsConstant">
            <summary>Legt die stub von Expression.get_IsConstant() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsDotChain">
            <summary>Legt die stub von Expression.get_IsDotChain() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsIdentifier">
            <summary>Legt die stub von Expression.get_IsIdentifier() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsInteger">
            <summary>Legt die stub von Expression.get_IsInteger() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsMemberAccess">
            <summary>Legt die stub von Expression.get_IsMemberAccess() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsMultiple">
            <summary>Legt die stub von Vararg.get_IsMultiple() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsNewEntryAllowed">
            <summary>Legt die stub von Expression.get_IsNewEntryAllowed() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsNil">
            <summary>Legt die stub von Expression.get_IsNil() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsString">
            <summary>Legt die stub von Expression.get_IsString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVararg.IsTableLiteral">
            <summary>Legt die stub von Expression.get_IsTableLiteral() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.VariableTarget</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.Declaration)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.Equals(System.Object)">
            <summary>Legt die stub von VariableTarget.Equals(Object obj) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.EqualsObject">
            <summary>Legt die stub von VariableTarget.Equals(Object obj) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.GetIndex">
            <summary>Legt die stub von VariableTarget.GetIndex() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.GetIndex01">
            <summary>Legt die stub von VariableTarget.GetIndex() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubVariableTarget.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.IsDeclaration(LeagueSharp.GameFiles.Tools.LuaObjReader.Declaration)">
            <summary>Legt die stub von VariableTarget.IsDeclaration(Declaration decl) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.IsDeclarationDeclaration">
            <summary>Legt die stub von VariableTarget.IsDeclaration(Declaration decl) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.IsFunctionNameGet">
            <summary>Legt die stub von Target.get_IsFunctionName() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.IsLocalGet">
            <summary>Legt die stub von VariableTarget.get_IsLocal() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von VariableTarget.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.PrintMethod(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von VariableTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.PrintMethodOutput">
            <summary>Legt die stub von VariableTarget.PrintMethod(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.PrintOutput">
            <summary>Legt die stub von VariableTarget.Print(Output output) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.IsFunctionName">
            <summary>Legt die stub von Target.get_IsFunctionName() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubVariableTarget.IsLocal">
            <summary>Legt die stub von VariableTarget.get_IsLocal() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.LuaObjReader.WhileBlock</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.#ctor(LeagueSharp.GameFiles.Tools.LuaObjReader.LFunction,LeagueSharp.GameFiles.Tools.LuaObjReader.Branch,System.Int32,LeagueSharp.GameFiles.Tools.LuaObjReader.Registers)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.AddStatement(LeagueSharp.GameFiles.Tools.LuaObjReader.Statement)">
            <summary>Legt die stub von WhileBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.AddStatementStatement">
            <summary>Legt die stub von WhileBlock.AddStatement(Statement statement) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.BeginsWithParenGet">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.BreakableGet">
            <summary>Legt die stub von WhileBlock.get_Breakable() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.CompareTo(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.CompareToBlock">
            <summary>Legt die stub von Block.CompareTo(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.Contains(LeagueSharp.GameFiles.Tools.LuaObjReader.Block)">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.Contains(System.Int32)">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.ContainsBlock">
            <summary>Legt die stub von Block.Contains(Block block) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.ContainsInt32">
            <summary>Legt die stub von Block.Contains(Int32 line) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.GetLoopback">
            <summary>Legt die stub von WhileBlock.GetLoopback() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.GetLoopback01">
            <summary>Legt die stub von WhileBlock.GetLoopback() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubWhileBlock.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.IsContainerGet">
            <summary>Legt die stub von WhileBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.IsUnprotectedGet">
            <summary>Legt die stub von WhileBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.Print(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von WhileBlock.Print(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.PrintOutput">
            <summary>Legt die stub von WhileBlock.Print(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.PrintTail(LeagueSharp.GameFiles.Tools.LuaObjReader.Output)">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.PrintTailOutput">
            <summary>Legt die stub von Statement.PrintTail(Output output) fest.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.Process(LeagueSharp.GameFiles.Tools.LuaObjReader.Decompiler)">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.ProcessDecompiler">
            <summary>Legt die stub von Block.Process(Decompiler d) fest.</summary>
        </member>
        <member name="F:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.ScopeEndGet">
            <summary>Legt die stub von WhileBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.BeginsWithParen">
            <summary>Legt die stub von Statement.get_BeginsWithParen() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.Breakable">
            <summary>Legt die stub von WhileBlock.get_Breakable() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.IsContainer">
            <summary>Legt die stub von WhileBlock.get_IsContainer() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.IsUnprotected">
            <summary>Legt die stub von WhileBlock.get_IsUnprotected() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.LuaObjReader.Fakes.StubWhileBlock.ScopeEnd">
            <summary>Legt die stub von WhileBlock.get_ScopeEnd() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.Swf.ByteReader</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.#ctor(LeagueSharp.GameFiles.Tools.Swf.ByteReader)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.Align">
            <summary>Legt die shim von ByteReader.Align() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.CompressByteArray">
            <summary>Legt die shim von ByteReader.Compress(Byte[] uncompressed) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.Constructor">
            <summary>Legt die shim von ByteReader.ByteReader() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.ConstructorByteArray">
            <summary>Legt die shim von ByteReader.ByteReader(Byte[] bytes) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.DecompressZLIBByteArrayUInt32">
            <summary>Legt die shim von ByteReader.DecompressZLIB(Byte[] compressed, UInt32 unzippedSize) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.DecompressZLIBUInt32UInt32">
            <summary>Legt die shim von ByteReader.DecompressZLIB(UInt32 compressedSize, UInt32 unzippedSize) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetBit">
            <summary>Legt die shim von ByteReader.GetBit() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetBitsUInt32">
            <summary>Legt die shim von ByteReader.GetBits(UInt32 count) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetByte">
            <summary>Legt die shim von ByteReader.GetByte() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetBytesUInt32">
            <summary>Legt die shim von ByteReader.GetBytes(UInt32 count) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetDouble">
            <summary>Legt die shim von ByteReader.GetDouble() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetFixed16_16">
            <summary>Legt die shim von ByteReader.GetFixed16_16() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetFixed8_8">
            <summary>Legt die shim von ByteReader.GetFixed8_8() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetFixedNBitsUInt32">
            <summary>Legt die shim von ByteReader.GetFixedNBits(UInt32 nBits) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetFloat32">
            <summary>Legt die shim von ByteReader.GetFloat32() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetInt16">
            <summary>Legt die shim von ByteReader.GetInt16() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetInt30">
            <summary>Legt die shim von ByteReader.GetInt30() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetInt32">
            <summary>Legt die shim von ByteReader.GetInt32() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetInt64">
            <summary>Legt die shim von ByteReader.GetInt64() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetS24">
            <summary>Legt die shim von ByteReader.GetS24() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetSignedNBitsUInt32">
            <summary>Legt die shim von ByteReader.GetSignedNBits(UInt32 count) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetString">
            <summary>Legt die shim von ByteReader.GetString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetStringUInt32">
            <summary>Legt die shim von ByteReader.GetString(UInt32 len) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetU24">
            <summary>Legt die shim von ByteReader.GetU24() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetUI16">
            <summary>Legt die shim von ByteReader.GetUI16() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetUI32">
            <summary>Legt die shim von ByteReader.GetUI32() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetUInt30">
            <summary>Legt die shim von ByteReader.GetUInt30() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.GetUTF8BytesUInt32">
            <summary>Legt die shim von ByteReader.GetUTF8Bytes(UInt32 len) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.LeftBytesGet">
            <summary>Legt die shim von ByteReader.get_LeftBytes() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.PeekByte">
            <summary>Legt die shim von ByteReader.PeekByte() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.PeekBytesUInt32">
            <summary>Legt die shim von ByteReader.PeekBytes(UInt32 len) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.PeekBytesUInt32UInt32">
            <summary>Legt die shim von ByteReader.PeekBytes(UInt32 start, UInt32 len) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.PeekUI16">
            <summary>Legt die shim von ByteReader.PeekUI16() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.PositionGet">
            <summary>Legt die shim von ByteReader.get_Position() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.PositionSetUInt32">
            <summary>Legt die shim von ByteReader.set_Position(UInt32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.Reset">
            <summary>Legt die shim von ByteReader.Reset() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.SetBytesByteArray">
            <summary>Legt die shim von ByteReader.SetBytes(Byte[] bytes) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.SizeGet">
            <summary>Legt die shim von ByteReader.get_Size() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.SkipBitsUInt32">
            <summary>Legt die shim von ByteReader.SkipBits(UInt32 count) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.SkipBytesUInt32">
            <summary>Legt die shim von ByteReader.SkipBytes(UInt32 count) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.StaticConstructor">
            <summary>Legt die shim von ByteReader.ByteReader() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.UncompressByteArray">
            <summary>Legt die shim von ByteReader.Uncompress(Byte[] compressed) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.Align">
            <summary>Legt die shim von ByteReader.Align() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.DecompressZLIBUInt32UInt32">
            <summary>Legt die shim von ByteReader.DecompressZLIB(UInt32 compressedSize, UInt32 unzippedSize) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetBit">
            <summary>Legt die shim von ByteReader.GetBit() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetBitsUInt32">
            <summary>Legt die shim von ByteReader.GetBits(UInt32 count) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetByte">
            <summary>Legt die shim von ByteReader.GetByte() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetBytesUInt32">
            <summary>Legt die shim von ByteReader.GetBytes(UInt32 count) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetDouble">
            <summary>Legt die shim von ByteReader.GetDouble() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetFixed16_16">
            <summary>Legt die shim von ByteReader.GetFixed16_16() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetFixed8_8">
            <summary>Legt die shim von ByteReader.GetFixed8_8() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetFixedNBitsUInt32">
            <summary>Legt die shim von ByteReader.GetFixedNBits(UInt32 nBits) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetFloat32">
            <summary>Legt die shim von ByteReader.GetFloat32() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetInt16">
            <summary>Legt die shim von ByteReader.GetInt16() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetInt30">
            <summary>Legt die shim von ByteReader.GetInt30() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetInt32">
            <summary>Legt die shim von ByteReader.GetInt32() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetInt64">
            <summary>Legt die shim von ByteReader.GetInt64() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetS24">
            <summary>Legt die shim von ByteReader.GetS24() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetSignedNBitsUInt32">
            <summary>Legt die shim von ByteReader.GetSignedNBits(UInt32 count) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetString">
            <summary>Legt die shim von ByteReader.GetString() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetStringUInt32">
            <summary>Legt die shim von ByteReader.GetString(UInt32 len) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetU24">
            <summary>Legt die shim von ByteReader.GetU24() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetUI16">
            <summary>Legt die shim von ByteReader.GetUI16() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetUI32">
            <summary>Legt die shim von ByteReader.GetUI32() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetUInt30">
            <summary>Legt die shim von ByteReader.GetUInt30() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.GetUTF8BytesUInt32">
            <summary>Legt die shim von ByteReader.GetUTF8Bytes(UInt32 len) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.LeftBytesGet">
            <summary>Legt die shim von ByteReader.get_LeftBytes() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.PeekByte">
            <summary>Legt die shim von ByteReader.PeekByte() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.PeekBytesUInt32">
            <summary>Legt die shim von ByteReader.PeekBytes(UInt32 len) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.PeekBytesUInt32UInt32">
            <summary>Legt die shim von ByteReader.PeekBytes(UInt32 start, UInt32 len) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.PeekUI16">
            <summary>Legt die shim von ByteReader.PeekUI16() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.PositionGet">
            <summary>Legt die shim von ByteReader.get_Position() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.PositionSetUInt32">
            <summary>Legt die shim von ByteReader.set_Position(UInt32 value) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.Reset">
            <summary>Legt die shim von ByteReader.Reset() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.SetBytesByteArray">
            <summary>Legt die shim von ByteReader.SetBytes(Byte[] bytes) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.SizeGet">
            <summary>Legt die shim von ByteReader.get_Size() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.SkipBitsUInt32">
            <summary>Legt die shim von ByteReader.SkipBits(UInt32 count) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimByteReader.AllInstances.SkipBytesUInt32">
            <summary>Legt die shim von ByteReader.SkipBytes(UInt32 count) fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimSwfReader">
            <summary>Shim-Typ von LeagueSharp.GameFiles.Tools.Swf.SwfReader</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimSwfReader.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimSwfReader.#ctor(LeagueSharp.GameFiles.Tools.Swf.SwfReader)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimSwfReader.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimSwfReader.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimSwfReader.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimSwfReader.ConstructorByteArray">
            <summary>Legt die shim von SwfReader.SwfReader(Byte[] rawSwf) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimSwfReader.ConstructorString">
            <summary>Legt die shim von SwfReader.SwfReader(String fileName) fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimSwfReader.DeCompile">
            <summary>Legt die shim von SwfReader.DeCompile() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimSwfReader.DecompressCWSSwf">
            <summary>Legt die shim von SwfReader.DecompressCWSSwf() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimSwfReader.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimSwfReader.AllInstances.DeCompile">
            <summary>Legt die shim von SwfReader.DeCompile() fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.ShimSwfReader.AllInstances.DecompressCWSSwf">
            <summary>Legt die shim von SwfReader.DecompressCWSSwf() fest.</summary>
        </member>
        <member name="T:LeagueSharp.GameFiles.Tools.Swf.Fakes.StubSwfReader">
            <summary>Stub-Typ von LeagueSharp.GameFiles.Tools.Swf.SwfReader</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Swf.Fakes.StubSwfReader.#ctor(System.String)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:LeagueSharp.GameFiles.Tools.Swf.Fakes.StubSwfReader.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubSwfReader.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.StubSwfReader.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.StubSwfReader.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:LeagueSharp.GameFiles.Tools.Swf.Fakes.StubSwfReader.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.LeagueSharpGameFilesDelegates">
            <summary>Enthält benutzerdefinierte Delegaten für die Stubs und Shims von LeagueSharp.GameFiles.</summary>
        </member>
    </members>
</doc>
